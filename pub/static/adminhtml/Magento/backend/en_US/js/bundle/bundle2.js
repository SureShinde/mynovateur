require.config({"config": {
        "jsbuild":{"Magento_Swatches/js/swatch-renderer.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    'mage/smart-keyboard-handler',\n    'mage/translate',\n    'priceUtils',\n    'jquery-ui-modules/widget',\n    'jquery/jquery.parsequery',\n    'mage/validation/validation'\n], function ($, _, mageTemplate, keyboardHandler, $t, priceUtils) {\n    'use strict';\n\n    /**\n     * Extend form validation to support swatch accessibility\n     */\n    $.widget('mage.validation', $.mage.validation, {\n        /**\n         * Handle form with swatches validation. Focus on first invalid swatch block.\n         *\n         * @param {jQuery.Event} event\n         * @param {Object} validation\n         */\n        listenFormValidateHandler: function (event, validation) {\n            var swatchWrapper, firstActive, swatches, swatch, successList, errorList, firstSwatch;\n\n            this._superApply(arguments);\n\n            swatchWrapper = '.swatch-attribute-options';\n            swatches = $(event.target).find(swatchWrapper);\n\n            if (!swatches.length) {\n                return;\n            }\n\n            swatch = '.swatch-attribute';\n            firstActive = $(validation.errorList[0].element || []);\n            successList = validation.successList;\n            errorList = validation.errorList;\n            firstSwatch = $(firstActive).parent(swatch).find(swatchWrapper);\n\n            keyboardHandler.focus(swatches);\n\n            $.each(successList, function (index, item) {\n                $(item).parent(swatch).find(swatchWrapper).attr('aria-invalid', false);\n            });\n\n            $.each(errorList, function (index, item) {\n                $(item.element).parent(swatch).find(swatchWrapper).attr('aria-invalid', true);\n            });\n\n            if (firstSwatch.length) {\n                $(firstSwatch).focus();\n            }\n        }\n    });\n\n    /**\n     * Render tooltips by attributes (only to up).\n     * Required element attributes:\n     *  - data-option-type (integer, 0-3)\n     *  - data-option-label (string)\n     *  - data-option-tooltip-thumb\n     *  - data-option-tooltip-value\n     *  - data-thumb-width\n     *  - data-thumb-height\n     */\n    $.widget('mage.SwatchRendererTooltip', {\n        options: {\n            delay: 200,                             //how much ms before tooltip to show\n            tooltipClass: 'swatch-option-tooltip'  //configurable, but remember about css\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            var $widget = this,\n                $this = this.element,\n                $element = $('.' + $widget.options.tooltipClass),\n                timer,\n                type = parseInt($this.data('option-type'), 10),\n                label = $this.data('option-label'),\n                thumb = $this.data('option-tooltip-thumb'),\n                value = $this.data('option-tooltip-value'),\n                width = $this.data('thumb-width'),\n                height = $this.data('thumb-height'),\n                $image,\n                $title,\n                $corner;\n\n            if (!$element.length) {\n                $element = $('<div class=\"' +\n                    $widget.options.tooltipClass +\n                    '\"><div class=\"image\"></div><div class=\"title\"></div><div class=\"corner\"></div></div>'\n                );\n                $('body').append($element);\n            }\n\n            $image = $element.find('.image');\n            $title = $element.find('.title');\n            $corner = $element.find('.corner');\n\n            $this.hover(function () {\n                if (!$this.hasClass('disabled')) {\n                    timer = setTimeout(\n                        function () {\n                            var leftOpt = null,\n                                leftCorner = 0,\n                                left,\n                                $window;\n\n                            if (type === 2) {\n                                // Image\n                                $image.css({\n                                    'background': 'url(\"' + thumb + '\") no-repeat center', //Background case\n                                    'background-size': 'initial',\n                                    'width': width + 'px',\n                                    'height': height + 'px'\n                                });\n                                $image.show();\n                            } else if (type === 1) {\n                                // Color\n                                $image.css({\n                                    background: value\n                                });\n                                $image.show();\n                            } else if (type === 0 || type === 3) {\n                                // Default\n                                $image.hide();\n                            }\n\n                            $title.text(label);\n\n                            leftOpt = $this.offset().left;\n                            left = leftOpt + $this.width() / 2 - $element.width() / 2;\n                            $window = $(window);\n\n                            // the numbers (5 and 5) is magick constants for offset from left or right page\n                            if (left < 0) {\n                                left = 5;\n                            } else if (left + $element.width() > $window.width()) {\n                                left = $window.width() - $element.width() - 5;\n                            }\n\n                            // the numbers (6,  3 and 18) is magick constants for offset tooltip\n                            leftCorner = 0;\n\n                            if ($element.width() < $this.width()) {\n                                leftCorner = $element.width() / 2 - 3;\n                            } else {\n                                leftCorner = (leftOpt > left ? leftOpt - left : left - leftOpt) + $this.width() / 2 - 6;\n                            }\n\n                            $corner.css({\n                                left: leftCorner\n                            });\n                            $element.css({\n                                left: left,\n                                top: $this.offset().top - $element.height() - $corner.height() - 18\n                            }).show();\n                        },\n                        $widget.options.delay\n                    );\n                }\n            }, function () {\n                $element.hide();\n                clearTimeout(timer);\n            });\n\n            $(document).on('tap', function () {\n                $element.hide();\n                clearTimeout(timer);\n            });\n\n            $this.on('tap', function (event) {\n                event.stopPropagation();\n            });\n        }\n    });\n\n    /**\n     * Render swatch controls with options and use tooltips.\n     * Required two json:\n     *  - jsonConfig (magento's option config)\n     *  - jsonSwatchConfig (swatch's option config)\n     *\n     *  Tuning:\n     *  - numberToShow (show \"more\" button if options are more)\n     *  - onlySwatches (hide selectboxes)\n     *  - moreButtonText (text for \"more\" button)\n     *  - selectorProduct (selector for product container)\n     *  - selectorProductPrice (selector for change price)\n     */\n    $.widget('mage.SwatchRenderer', {\n        options: {\n            classes: {\n                attributeClass: 'swatch-attribute',\n                attributeLabelClass: 'swatch-attribute-label',\n                attributeSelectedOptionLabelClass: 'swatch-attribute-selected-option',\n                attributeOptionsWrapper: 'swatch-attribute-options',\n                attributeInput: 'swatch-input',\n                optionClass: 'swatch-option',\n                selectClass: 'swatch-select',\n                moreButton: 'swatch-more',\n                loader: 'swatch-option-loading'\n            },\n            // option's json config\n            jsonConfig: {},\n\n            // swatch's json config\n            jsonSwatchConfig: {},\n\n            // selector of parental block of prices and swatches (need to know where to seek for price block)\n            selectorProduct: '.product-info-main',\n\n            // selector of price wrapper (need to know where set price)\n            selectorProductPrice: '[data-role=priceBox]',\n\n            //selector of product images gallery wrapper\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\n\n            // selector of category product tile wrapper\n            selectorProductTile: '.product-item',\n\n            // number of controls to show (false or zero = show all)\n            numberToShow: false,\n\n            // show only swatch controls\n            onlySwatches: false,\n\n            // enable label for control\n            enableControlLabel: true,\n\n            // control label id\n            controlLabelId: '',\n\n            // text for more button\n            moreButtonText: $t('More'),\n\n            // Callback url for media\n            mediaCallback: '',\n\n            // Local media cache\n            mediaCache: {},\n\n            // Cache for BaseProduct images. Needed when option unset\n            mediaGalleryInitial: [{}],\n\n            // Use ajax to get image data\n            useAjax: false,\n\n            /**\n             * Defines the mechanism of how images of a gallery should be\n             * updated when user switches between configurations of a product.\n             *\n             * As for now value of this option can be either 'replace' or 'prepend'.\n             *\n             * @type {String}\n             */\n            gallerySwitchStrategy: 'replace',\n\n            // whether swatches are rendered in product list or on product page\n            inProductList: false,\n\n            // sly-old-price block selector\n            slyOldPriceSelector: '.sly-old-price',\n\n            // tier prise selectors start\n            tierPriceTemplateSelector: '#tier-prices-template',\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\n            tierPriceTemplate: '',\n            // tier prise selectors end\n\n            // A price label selector\n            normalPriceLabelSelector: '.product-info-main .normal-price .price-label'\n        },\n\n        /**\n         * Get chosen product\n         *\n         * @returns int|null\n         */\n        getProduct: function () {\n            var products = this._CalcProducts();\n\n            return _.isArray(products) ? products[0] : null;\n        },\n\n        /**\n         * Get chosen product id\n         *\n         * @returns int|null\n         */\n        getProductId: function () {\n            var products = this._CalcProducts();\n\n            return _.isArray(products) && products.length === 1 ? products[0] : null;\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            // Don't render the same set of swatches twice\n            if ($(this.element).attr('data-rendered')) {\n                return;\n            }\n\n            $(this.element).attr('data-rendered', true);\n\n            if (_.isEmpty(this.options.jsonConfig.images)) {\n                this.options.useAjax = true;\n                // creates debounced variant of _LoadProductMedia()\n                // to use it in events handlers instead of _LoadProductMedia()\n                this._debouncedLoadProductMedia = _.debounce(this._LoadProductMedia.bind(this), 500);\n            }\n\n            this.options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\n\n            if (this.options.jsonConfig !== '' && this.options.jsonSwatchConfig !== '') {\n                // store unsorted attributes\n                this.options.jsonConfig.mappedAttributes = _.clone(this.options.jsonConfig.attributes);\n                this._sortAttributes();\n                this._RenderControls();\n                this._setPreSelectedGallery();\n                $(this.element).trigger('swatch.initialized');\n            } else {\n                console.log('SwatchRenderer: No input data received');\n            }\n        },\n\n        /**\n         * @private\n         */\n        _sortAttributes: function () {\n            this.options.jsonConfig.attributes = _.sortBy(this.options.jsonConfig.attributes, function (attribute) {\n                return parseInt(attribute.position, 10);\n            });\n        },\n\n        /**\n         * @private\n         */\n        _create: function () {\n            var options = this.options,\n                gallery = $('[data-gallery-role=gallery-placeholder]', '.column.main'),\n                productData = this._determineProductData(),\n                $main = productData.isInProductView ?\n                    this.element.parents('.column.main') :\n                    this.element.parents('.product-item-info');\n\n            if (productData.isInProductView) {\n                gallery.data('gallery') ?\n                    this._onGalleryLoaded(gallery) :\n                    gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\n            } else {\n                options.mediaGalleryInitial = [{\n                    'img': $main.find('.product-image-photo').attr('src')\n                }];\n            }\n\n            this.productForm = this.element.parents(this.options.selectorProductTile).find('form:first');\n            this.inProductList = this.productForm.length > 0;\n        },\n\n        /**\n         * Determine product id and related data\n         *\n         * @returns {{productId: *, isInProductView: bool}}\n         * @private\n         */\n        _determineProductData: function () {\n            // Check if product is in a list of products.\n            var productId,\n                isInProductView = false;\n\n            productId = this.element.parents('.product-item-details')\n                    .find('.price-box.price-final_price').attr('data-product-id');\n\n            if (!productId) {\n                // Check individual product.\n                productId = $('[name=product]').val();\n                isInProductView = productId > 0;\n            }\n\n            return {\n                productId: productId,\n                isInProductView: isInProductView\n            };\n        },\n\n        /**\n         * Render controls\n         *\n         * @private\n         */\n        _RenderControls: function () {\n            var $widget = this,\n                container = this.element,\n                classes = this.options.classes,\n                chooseText = this.options.jsonConfig.chooseText,\n                showTooltip = this.options.showTooltip;\n\n            $widget.optionsMap = {};\n\n            $.each(this.options.jsonConfig.attributes, function () {\n                var item = this,\n                    controlLabelId = 'option-label-' + item.code + '-' + item.id,\n                    options = $widget._RenderSwatchOptions(item, controlLabelId),\n                    select = $widget._RenderSwatchSelect(item, chooseText),\n                    input = $widget._RenderFormInput(item),\n                    listLabel = '',\n                    label = '';\n\n                // Show only swatch controls\n                if ($widget.options.onlySwatches && !$widget.options.jsonSwatchConfig.hasOwnProperty(item.id)) {\n                    return;\n                }\n\n                if ($widget.options.enableControlLabel) {\n                    label +=\n                        '<span id=\"' + controlLabelId + '\" class=\"' + classes.attributeLabelClass + '\">' +\n                        $('<i></i>').text(item.label).html() +\n                        '</span>' +\n                        '<span class=\"' + classes.attributeSelectedOptionLabelClass + '\"></span>';\n                }\n\n                if ($widget.inProductList) {\n                    $widget.productForm.append(input);\n                    input = '';\n                    listLabel = 'aria-label=\"' + $('<i></i>').text(item.label).html() + '\"';\n                } else {\n                    listLabel = 'aria-labelledby=\"' + controlLabelId + '\"';\n                }\n\n                // Create new control\n                container.append(\n                    '<div class=\"' + classes.attributeClass + ' ' + item.code + '\" ' +\n                         'data-attribute-code=\"' + item.code + '\" ' +\n                         'data-attribute-id=\"' + item.id + '\">' +\n                        label +\n                        '<div aria-activedescendant=\"\" ' +\n                             'tabindex=\"0\" ' +\n                             'aria-invalid=\"false\" ' +\n                             'aria-required=\"true\" ' +\n                             'role=\"listbox\" ' + listLabel +\n                             'class=\"' + classes.attributeOptionsWrapper + ' clearfix\">' +\n                            options + select +\n                        '</div>' + input +\n                    '</div>'\n                );\n\n                $widget.optionsMap[item.id] = {};\n\n                // Aggregate options array to hash (key => value)\n                $.each(item.options, function () {\n                    if (this.products.length > 0) {\n                        $widget.optionsMap[item.id][this.id] = {\n                            price: parseInt(\n                                $widget.options.jsonConfig.optionPrices[this.products[0]].finalPrice.amount,\n                                10\n                            ),\n                            products: this.products\n                        };\n                    }\n                });\n            });\n\n            if (showTooltip === 1) {\n                // Connect Tooltip\n                container\n                    .find('[data-option-type=\"1\"], [data-option-type=\"2\"],' +\n                        ' [data-option-type=\"0\"], [data-option-type=\"3\"]')\n                    .SwatchRendererTooltip();\n            }\n\n            // Hide all elements below more button\n            $('.' + classes.moreButton).nextAll().hide();\n\n            // Handle events like click or change\n            $widget._EventListener();\n\n            // Rewind options\n            $widget._Rewind(container);\n\n            //Emulate click on all swatches from Request\n            $widget._EmulateSelected($.parseQuery());\n            $widget._EmulateSelected($widget._getSelectedAttributes());\n        },\n\n        /**\n         * Render swatch options by part of config\n         *\n         * @param {Object} config\n         * @param {String} controlId\n         * @returns {String}\n         * @private\n         */\n        _RenderSwatchOptions: function (config, controlId) {\n            var optionConfig = this.options.jsonSwatchConfig[config.id],\n                optionClass = this.options.classes.optionClass,\n                sizeConfig = this.options.jsonSwatchImageSizeConfig,\n                moreLimit = parseInt(this.options.numberToShow, 10),\n                moreClass = this.options.classes.moreButton,\n                moreText = this.options.moreButtonText,\n                countAttributes = 0,\n                html = '';\n\n            if (!this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\n                return '';\n            }\n\n            $.each(config.options, function (index) {\n                var id,\n                    type,\n                    value,\n                    thumb,\n                    label,\n                    width,\n                    height,\n                    attr,\n                    swatchImageWidth,\n                    swatchImageHeight;\n\n                if (!optionConfig.hasOwnProperty(this.id)) {\n                    return '';\n                }\n\n                // Add more button\n                if (moreLimit === countAttributes++) {\n                    html += '<a href=\"#\" class=\"' + moreClass + '\"><span>' + moreText + '</span></a>';\n                }\n\n                id = this.id;\n                type = parseInt(optionConfig[id].type, 10);\n                value = optionConfig[id].hasOwnProperty('value') ?\n                    $('<i></i>').text(optionConfig[id].value).html() : '';\n                thumb = optionConfig[id].hasOwnProperty('thumb') ? optionConfig[id].thumb : '';\n                width = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.width : 110;\n                height = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.height : 90;\n                label = this.label ? $('<i></i>').text(this.label).html() : '';\n                attr =\n                    ' id=\"' + controlId + '-item-' + id + '\"' +\n                    ' index=\"' + index + '\"' +\n                    ' aria-checked=\"false\"' +\n                    ' aria-describedby=\"' + controlId + '\"' +\n                    ' tabindex=\"0\"' +\n                    ' data-option-type=\"' + type + '\"' +\n                    ' data-option-id=\"' + id + '\"' +\n                    ' data-option-label=\"' + label + '\"' +\n                    ' aria-label=\"' + label + '\"' +\n                    ' role=\"option\"' +\n                    ' data-thumb-width=\"' + width + '\"' +\n                    ' data-thumb-height=\"' + height + '\"';\n\n                attr += thumb !== '' ? ' data-option-tooltip-thumb=\"' + thumb + '\"' : '';\n                attr += value !== '' ? ' data-option-tooltip-value=\"' + value + '\"' : '';\n\n                swatchImageWidth = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.width : 30;\n                swatchImageHeight = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.height : 20;\n\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\n                    attr += ' data-option-empty=\"true\"';\n                }\n\n                if (type === 0) {\n                    // Text\n                    html += '<div class=\"' + optionClass + ' text\" ' + attr + '>' + (value ? value : label) +\n                        '</div>';\n                } else if (type === 1) {\n                    // Color\n                    html += '<div class=\"' + optionClass + ' color\" ' + attr +\n                        ' style=\"background: ' + value +\n                        ' no-repeat center; background-size: initial;\">' + '' +\n                        '</div>';\n                } else if (type === 2) {\n                    // Image\n                    html += '<div class=\"' + optionClass + ' image\" ' + attr +\n                        ' style=\"background: url(' + value + ') no-repeat center; background-size: initial;width:' +\n                        swatchImageWidth + 'px; height:' + swatchImageHeight + 'px\">' + '' +\n                        '</div>';\n                } else if (type === 3) {\n                    // Clear\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '></div>';\n                } else {\n                    // Default\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '>' + label + '</div>';\n                }\n            });\n\n            return html;\n        },\n\n        /**\n         * Render select by part of config\n         *\n         * @param {Object} config\n         * @param {String} chooseText\n         * @returns {String}\n         * @private\n         */\n        _RenderSwatchSelect: function (config, chooseText) {\n            var html;\n\n            if (this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\n                return '';\n            }\n\n            html =\n                '<select class=\"' + this.options.classes.selectClass + ' ' + config.code + '\">' +\n                '<option value=\"0\" data-option-id=\"0\">' + chooseText + '</option>';\n\n            $.each(config.options, function () {\n                var label = this.label,\n                    attr = ' value=\"' + this.id + '\" data-option-id=\"' + this.id + '\"';\n\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\n                    attr += ' data-option-empty=\"true\"';\n                }\n\n                html += '<option ' + attr + '>' + label + '</option>';\n            });\n\n            html += '</select>';\n\n            return html;\n        },\n\n        /**\n         * Input for submit form.\n         * This control shouldn't have \"type=hidden\", \"display: none\" for validation work :(\n         *\n         * @param {Object} config\n         * @private\n         */\n        _RenderFormInput: function (config) {\n            return '<input class=\"' + this.options.classes.attributeInput + ' super-attribute-select\" ' +\n                'name=\"super_attribute[' + config.id + ']\" ' +\n                'type=\"text\" ' +\n                'value=\"\" ' +\n                'data-selector=\"super_attribute[' + config.id + ']\" ' +\n                'data-validate=\"{required: true}\" ' +\n                'aria-required=\"true\" ' +\n                'aria-invalid=\"false\">';\n        },\n\n        /**\n         * Event listener\n         *\n         * @private\n         */\n        _EventListener: function () {\n            var $widget = this,\n                options = this.options.classes,\n                target;\n\n            $widget.element.on('click', '.' + options.optionClass, function () {\n                return $widget._OnClick($(this), $widget);\n            });\n\n            $widget.element.on('change', '.' + options.selectClass, function () {\n                return $widget._OnChange($(this), $widget);\n            });\n\n            $widget.element.on('click', '.' + options.moreButton, function (e) {\n                e.preventDefault();\n\n                return $widget._OnMoreClick($(this));\n            });\n\n            $widget.element.on('keydown', function (e) {\n                if (e.which === 13) {\n                    target = $(e.target);\n\n                    if (target.is('.' + options.optionClass)) {\n                        return $widget._OnClick(target, $widget);\n                    } else if (target.is('.' + options.selectClass)) {\n                        return $widget._OnChange(target, $widget);\n                    } else if (target.is('.' + options.moreButton)) {\n                        e.preventDefault();\n\n                        return $widget._OnMoreClick(target);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Load media gallery using ajax or json config.\n         *\n         * @private\n         */\n        _loadMedia: function () {\n            var $main = this.inProductList ?\n                    this.element.parents('.product-item-info') :\n                    this.element.parents('.column.main'),\n                images;\n\n            if (this.options.useAjax) {\n                this._debouncedLoadProductMedia();\n            }  else {\n                images = this.options.jsonConfig.images[this.getProduct()];\n\n                if (!images) {\n                    images = this.options.mediaGalleryInitial;\n                }\n                this.updateBaseImage(this._sortImages(images), $main, !this.inProductList);\n            }\n        },\n\n        /**\n         * Sorting images array\n         *\n         * @private\n         */\n        _sortImages: function (images) {\n            return _.sortBy(images, function (image) {\n                return parseInt(image.position, 10);\n            });\n        },\n\n        /**\n         * Event for swatch options\n         *\n         * @param {Object} $this\n         * @param {Object} $widget\n         * @private\n         */\n        _OnClick: function ($this, $widget) {\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\n                $wrapper = $this.parents('.' + $widget.options.classes.attributeOptionsWrapper),\n                $label = $parent.find('.' + $widget.options.classes.attributeSelectedOptionLabelClass),\n                attributeId = $parent.data('attribute-id'),\n                $input = $parent.find('.' + $widget.options.classes.attributeInput),\n                checkAdditionalData = JSON.parse(this.options.jsonSwatchConfig[attributeId]['additional_data']),\n                $priceBox = $widget.element.parents($widget.options.selectorProduct)\n                    .find(this.options.selectorProductPrice);\n\n            if ($widget.inProductList) {\n                $input = $widget.productForm.find(\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\n                );\n            }\n\n            if ($this.hasClass('disabled')) {\n                return;\n            }\n\n            if ($this.hasClass('selected')) {\n                $parent.removeAttr('data-option-selected').find('.selected').removeClass('selected');\n                $input.val('');\n                $label.text('');\n                $this.attr('aria-checked', false);\n            } else {\n                $parent.attr('data-option-selected', $this.data('option-id')).find('.selected').removeClass('selected');\n                $label.text($this.data('option-label'));\n                $input.val($this.data('option-id'));\n                $input.attr('data-attr-name', this._getAttributeCodeById(attributeId));\n                $this.addClass('selected');\n                $widget._toggleCheckedAttributes($this, $wrapper);\n            }\n\n            $widget._Rebuild();\n\n            if ($priceBox.is(':data(mage-priceBox)')) {\n                $widget._UpdatePrice();\n            }\n\n            $(document).trigger('updateMsrpPriceBlock',\n                [\n                    this._getSelectedOptionPriceIndex(),\n                    $widget.options.jsonConfig.optionPrices,\n                    $priceBox\n                ]);\n\n            if (parseInt(checkAdditionalData['update_product_preview_image'], 10) === 1) {\n                $widget._loadMedia();\n            }\n\n            $input.trigger('change');\n        },\n\n        /**\n         * Get selected option price index\n         *\n         * @return {String|undefined}\n         * @private\n         */\n        _getSelectedOptionPriceIndex: function () {\n            var allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\n\n            if (_.isEmpty(allowedProduct)) {\n                return undefined;\n            }\n\n            return allowedProduct;\n        },\n\n        /**\n         * Get human readable attribute code (eg. size, color) by it ID from configuration\n         *\n         * @param {Number} attributeId\n         * @returns {*}\n         * @private\n         */\n        _getAttributeCodeById: function (attributeId) {\n            var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\n\n            return attribute ? attribute.code : attributeId;\n        },\n\n        /**\n         * Toggle accessibility attributes\n         *\n         * @param {Object} $this\n         * @param {Object} $wrapper\n         * @private\n         */\n        _toggleCheckedAttributes: function ($this, $wrapper) {\n            $wrapper.attr('aria-activedescendant', $this.attr('id'))\n                    .find('.' + this.options.classes.optionClass).attr('aria-checked', false);\n            $this.attr('aria-checked', true);\n        },\n\n        /**\n         * Event for select\n         *\n         * @param {Object} $this\n         * @param {Object} $widget\n         * @private\n         */\n        _OnChange: function ($this, $widget) {\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\n                attributeId = $parent.data('attribute-id'),\n                $input = $parent.find('.' + $widget.options.classes.attributeInput);\n\n            if ($widget.productForm.length > 0) {\n                $input = $widget.productForm.find(\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\n                );\n            }\n\n            if ($this.val() > 0) {\n                $parent.attr('data-option-selected', $this.val());\n                $input.val($this.val());\n            } else {\n                $parent.removeAttr('data-option-selected');\n                $input.val('');\n            }\n\n            $widget._Rebuild();\n            $widget._UpdatePrice();\n            $widget._loadMedia();\n            $input.trigger('change');\n        },\n\n        /**\n         * Event for more switcher\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _OnMoreClick: function ($this) {\n            $this.nextAll().show();\n            $this.blur().remove();\n        },\n\n        /**\n         * Rewind options for controls\n         *\n         * @private\n         */\n        _Rewind: function (controls) {\n            controls.find('div[data-option-id], option[data-option-id]').removeClass('disabled').removeAttr('disabled');\n            controls.find('div[data-option-empty], option[data-option-empty]')\n                .attr('disabled', true)\n                .addClass('disabled')\n                .attr('tabindex', '-1');\n        },\n\n        /**\n         * Rebuild container\n         *\n         * @private\n         */\n        _Rebuild: function () {\n            var $widget = this,\n                controls = $widget.element.find('.' + $widget.options.classes.attributeClass + '[data-attribute-id]'),\n                selected = controls.filter('[data-option-selected]');\n\n            // Enable all options\n            $widget._Rewind(controls);\n\n            // done if nothing selected\n            if (selected.length <= 0) {\n                return;\n            }\n\n            // Disable not available options\n            controls.each(function () {\n                var $this = $(this),\n                    id = $this.data('attribute-id'),\n                    products = $widget._CalcProducts(id);\n\n                if (selected.length === 1 && selected.first().data('attribute-id') === id) {\n                    return;\n                }\n\n                $this.find('[data-option-id]').each(function () {\n                    var $element = $(this),\n                        option = $element.data('option-id');\n\n                    if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option) ||\n                        $element.hasClass('selected') ||\n                        $element.is(':selected')) {\n                        return;\n                    }\n\n                    if (_.intersection(products, $widget.optionsMap[id][option].products).length <= 0) {\n                        $element.attr('disabled', true).addClass('disabled');\n                    }\n                });\n            });\n        },\n\n        /**\n         * Get selected product list\n         *\n         * @returns {Array}\n         * @private\n         */\n        _CalcProducts: function ($skipAttributeId) {\n            var $widget = this,\n                selectedOptions = '.' + $widget.options.classes.attributeClass + '[data-option-selected]',\n                products = [];\n\n            // Generate intersection of products\n            $widget.element.find(selectedOptions).each(function () {\n                var id = $(this).data('attribute-id'),\n                    option = $(this).attr('data-option-selected');\n\n                if ($skipAttributeId !== undefined && $skipAttributeId === id) {\n                    return;\n                }\n\n                if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option)) {\n                    return;\n                }\n\n                if (products.length === 0) {\n                    products = $widget.optionsMap[id][option].products;\n                } else {\n                    products = _.intersection(products, $widget.optionsMap[id][option].products);\n                }\n            });\n\n            return products;\n        },\n\n        /**\n         * Update total price\n         *\n         * @private\n         */\n        _UpdatePrice: function () {\n            var $widget = this,\n                $product = $widget.element.parents($widget.options.selectorProduct),\n                $productPrice = $product.find(this.options.selectorProductPrice),\n                result = $widget._getNewPrices(),\n                tierPriceHtml,\n                isShow;\n\n            $productPrice.trigger(\n                'updatePrice',\n                {\n                    'prices': $widget._getPrices(result, $productPrice.priceBox('option').prices)\n                }\n            );\n\n            isShow = typeof result != 'undefined' && result.oldPrice.amount !== result.finalPrice.amount;\n\n            $productPrice.find('span:first').toggleClass('special-price', isShow);\n\n            $product.find(this.options.slyOldPriceSelector)[isShow ? 'show' : 'hide']();\n\n            if (typeof result != 'undefined' && result.tierPrices && result.tierPrices.length) {\n                if (this.options.tierPriceTemplate) {\n                    tierPriceHtml = mageTemplate(\n                        this.options.tierPriceTemplate,\n                        {\n                            'tierPrices': result.tierPrices,\n                            '$t': $t,\n                            'currencyFormat': this.options.jsonConfig.currencyFormat,\n                            'priceUtils': priceUtils\n                        }\n                    );\n                    $(this.options.tierPriceBlockSelector).html(tierPriceHtml).show();\n                }\n            } else {\n                $(this.options.tierPriceBlockSelector).hide();\n            }\n\n            $(this.options.normalPriceLabelSelector).hide();\n\n            _.each($('.' + this.options.classes.attributeOptionsWrapper), function (attribute) {\n                if ($(attribute).find('.' + this.options.classes.optionClass + '.selected').length === 0) {\n                    if ($(attribute).find('.' + this.options.classes.selectClass).length > 0) {\n                        _.each($(attribute).find('.' + this.options.classes.selectClass), function (dropdown) {\n                            if ($(dropdown).val() === '0') {\n                                $(this.options.normalPriceLabelSelector).show();\n                            }\n                        }.bind(this));\n                    } else {\n                        $(this.options.normalPriceLabelSelector).show();\n                    }\n                }\n            }.bind(this));\n        },\n\n        /**\n         * Get new prices for selected options\n         *\n         * @returns {*}\n         * @private\n         */\n        _getNewPrices: function () {\n            var $widget = this,\n                newPrices = $widget.options.jsonConfig.prices,\n                allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\n\n            if (!_.isEmpty(allowedProduct)) {\n                newPrices = this.options.jsonConfig.optionPrices[allowedProduct];\n            }\n\n            return newPrices;\n        },\n\n        /**\n         * Get prices\n         *\n         * @param {Object} newPrices\n         * @param {Object} displayPrices\n         * @returns {*}\n         * @private\n         */\n        _getPrices: function (newPrices, displayPrices) {\n            var $widget = this;\n\n            if (_.isEmpty(newPrices)) {\n                newPrices = $widget._getNewPrices();\n            }\n            _.each(displayPrices, function (price, code) {\n\n                if (newPrices[code]) {\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\n                }\n            });\n\n            return displayPrices;\n        },\n\n        /**\n         * Get product with minimum price from selected options.\n         *\n         * @param {Array} allowedProducts\n         * @returns {String}\n         * @private\n         */\n        _getAllowedProductWithMinPrice: function (allowedProducts) {\n            var optionPrices = this.options.jsonConfig.optionPrices,\n                product = {},\n                optionFinalPrice, optionMinPrice;\n\n            _.each(allowedProducts, function (allowedProduct) {\n                optionFinalPrice = parseFloat(optionPrices[allowedProduct].finalPrice.amount);\n\n                if (_.isEmpty(product) || optionFinalPrice < optionMinPrice) {\n                    optionMinPrice = optionFinalPrice;\n                    product = allowedProduct;\n                }\n            }, this);\n\n            return product;\n        },\n\n        /**\n         * Gets all product media and change current to the needed one\n         *\n         * @private\n         */\n        _LoadProductMedia: function () {\n            var $widget = this,\n                $this = $widget.element,\n                productData = this._determineProductData(),\n                mediaCallData,\n                mediaCacheKey,\n\n                /**\n                 * Processes product media data\n                 *\n                 * @param {Object} data\n                 * @returns void\n                 */\n                mediaSuccessCallback = function (data) {\n                    if (!(mediaCacheKey in $widget.options.mediaCache)) {\n                        $widget.options.mediaCache[mediaCacheKey] = data;\n                    }\n                    $widget._ProductMediaCallback($this, data, productData.isInProductView);\n                    setTimeout(function () {\n                        $widget._DisableProductMediaLoader($this);\n                    }, 300);\n                };\n\n            if (!$widget.options.mediaCallback) {\n                return;\n            }\n\n            mediaCallData = {\n                'product_id': this.getProduct()\n            };\n\n            mediaCacheKey = JSON.stringify(mediaCallData);\n\n            if (mediaCacheKey in $widget.options.mediaCache) {\n                $widget._XhrKiller();\n                $widget._EnableProductMediaLoader($this);\n                mediaSuccessCallback($widget.options.mediaCache[mediaCacheKey]);\n            } else {\n                mediaCallData.isAjax = true;\n                $widget._XhrKiller();\n                $widget._EnableProductMediaLoader($this);\n                $widget.xhr = $.ajax({\n                    url: $widget.options.mediaCallback,\n                    cache: true,\n                    type: 'GET',\n                    dataType: 'json',\n                    data: mediaCallData,\n                    success: mediaSuccessCallback\n                }).done(function () {\n                    $widget._XhrKiller();\n                });\n            }\n        },\n\n        /**\n         * Enable loader\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _EnableProductMediaLoader: function ($this) {\n            var $widget = this;\n\n            if ($('body.catalog-product-view').length > 0) {\n                $this.parents('.column.main').find('.photo.image')\n                    .addClass($widget.options.classes.loader);\n            } else {\n                //Category View\n                $this.parents('.product-item-info').find('.product-image-photo')\n                    .addClass($widget.options.classes.loader);\n            }\n        },\n\n        /**\n         * Disable loader\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _DisableProductMediaLoader: function ($this) {\n            var $widget = this;\n\n            if ($('body.catalog-product-view').length > 0) {\n                $this.parents('.column.main').find('.photo.image')\n                    .removeClass($widget.options.classes.loader);\n            } else {\n                //Category View\n                $this.parents('.product-item-info').find('.product-image-photo')\n                    .removeClass($widget.options.classes.loader);\n            }\n        },\n\n        /**\n         * Callback for product media\n         *\n         * @param {Object} $this\n         * @param {String} response\n         * @param {Boolean} isInProductView\n         * @private\n         */\n        _ProductMediaCallback: function ($this, response, isInProductView) {\n            var $main = isInProductView ? $this.parents('.column.main') : $this.parents('.product-item-info'),\n                $widget = this,\n                images = [],\n\n                /**\n                 * Check whether object supported or not\n                 *\n                 * @param {Object} e\n                 * @returns {*|Boolean}\n                 */\n                support = function (e) {\n                    return e.hasOwnProperty('large') && e.hasOwnProperty('medium') && e.hasOwnProperty('small');\n                };\n\n            if (_.size($widget) < 1 || !support(response)) {\n                this.updateBaseImage(this.options.mediaGalleryInitial, $main, isInProductView);\n\n                return;\n            }\n\n            images.push({\n                full: response.large,\n                img: response.medium,\n                thumb: response.small,\n                isMain: true\n            });\n\n            if (response.hasOwnProperty('gallery')) {\n                $.each(response.gallery, function () {\n                    if (!support(this) || response.large === this.large) {\n                        return;\n                    }\n                    images.push({\n                        full: this.large,\n                        img: this.medium,\n                        thumb: this.small\n                    });\n                });\n            }\n\n            this.updateBaseImage(images, $main, isInProductView);\n        },\n\n        /**\n         * Check if images to update are initial and set their type\n         * @param {Array} images\n         */\n        _setImageType: function (images) {\n            var initial = this.options.mediaGalleryInitial[0].img;\n\n            if (images[0].img === initial) {\n                images = $.extend(true, [], this.options.mediaGalleryInitial);\n            } else {\n                images.map(function (img) {\n                    if (!img.type) {\n                        img.type = 'image';\n                    }\n                });\n            }\n\n            return images;\n        },\n\n        /**\n         * Update [gallery-placeholder] or [product-image-photo]\n         * @param {Array} images\n         * @param {jQuery} context\n         * @param {Boolean} isInProductView\n         */\n        updateBaseImage: function (images, context, isInProductView) {\n            var justAnImage = images[0],\n                initialImages = this.options.mediaGalleryInitial,\n                imagesToUpdate,\n                gallery = context.find(this.options.mediaGallerySelector).data('gallery'),\n                isInitial;\n\n            if (isInProductView) {\n                if (_.isUndefined(gallery)) {\n                    context.find(this.options.mediaGallerySelector).on('gallery:loaded', function () {\n                        this.updateBaseImage(images, context, isInProductView);\n                    }.bind(this));\n\n                    return;\n                }\n\n                imagesToUpdate = images.length ? this._setImageType($.extend(true, [], images)) : [];\n                isInitial = _.isEqual(imagesToUpdate, initialImages);\n\n                if (this.options.gallerySwitchStrategy === 'prepend' && !isInitial) {\n                    imagesToUpdate = imagesToUpdate.concat(initialImages);\n                }\n\n                imagesToUpdate = this._setImageIndex(imagesToUpdate);\n\n                gallery.updateData(imagesToUpdate);\n                this._addFotoramaVideoEvents(isInitial);\n            } else if (justAnImage && justAnImage.img) {\n                context.find('.product-image-photo').attr('src', justAnImage.img);\n            }\n        },\n\n        /**\n         * Add video events\n         *\n         * @param {Boolean} isInitial\n         * @private\n         */\n        _addFotoramaVideoEvents: function (isInitial) {\n            if (_.isUndefined($.mage.AddFotoramaVideoEvents)) {\n                return;\n            }\n\n            if (isInitial) {\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\n\n                return;\n            }\n\n            $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\n                selectedOption: this.getProduct(),\n                dataMergeStrategy: this.options.gallerySwitchStrategy\n            });\n        },\n\n        /**\n         * Set correct indexes for image set.\n         *\n         * @param {Array} images\n         * @private\n         */\n        _setImageIndex: function (images) {\n            var length = images.length,\n                i;\n\n            for (i = 0; length > i; i++) {\n                images[i].i = i + 1;\n            }\n\n            return images;\n        },\n\n        /**\n         * Kill doubled AJAX requests\n         *\n         * @private\n         */\n        _XhrKiller: function () {\n            var $widget = this;\n\n            if ($widget.xhr !== undefined && $widget.xhr !== null) {\n                $widget.xhr.abort();\n                $widget.xhr = null;\n            }\n        },\n\n        /**\n         * Emulate mouse click on all swatches that should be selected\n         * @param {Object} [selectedAttributes]\n         * @private\n         */\n        _EmulateSelected: function (selectedAttributes) {\n            $.each(selectedAttributes, $.proxy(function (attributeCode, optionId) {\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\n                    '[data-attribute-code=\"' + attributeCode + '\"] [data-option-id=\"' + optionId + '\"]'),\n                    parentInput = elem.parent();\n\n                if (elem.hasClass('selected')) {\n                    return;\n                }\n\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\n                    parentInput.val(optionId);\n                    parentInput.trigger('change');\n                } else {\n                    elem.trigger('click');\n                }\n            }, this));\n        },\n\n        /**\n         * Emulate mouse click or selection change on all swatches that should be selected\n         * @param {Object} [selectedAttributes]\n         * @private\n         */\n        _EmulateSelectedByAttributeId: function (selectedAttributes) {\n            $.each(selectedAttributes, $.proxy(function (attributeId, optionId) {\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\n                    '[data-attribute-id=\"' + attributeId + '\"] [data-option-id=\"' + optionId + '\"]'),\n                    parentInput = elem.parent();\n\n                if (elem.hasClass('selected')) {\n                    return;\n                }\n\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\n                    parentInput.val(optionId);\n                    parentInput.trigger('change');\n                } else {\n                    elem.trigger('click');\n                }\n            }, this));\n        },\n\n        /**\n         * Get default options values settings with either URL query parameters\n         * @private\n         */\n        _getSelectedAttributes: function () {\n            var hashIndex = window.location.href.indexOf('#'),\n                selectedAttributes = {},\n                params;\n\n            if (hashIndex !== -1) {\n                params = $.parseQuery(window.location.href.substr(hashIndex + 1));\n\n                selectedAttributes = _.invert(_.mapObject(_.invert(params), function (attributeId) {\n                    var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\n\n                    return attribute ? attribute.code : attributeId;\n                }.bind(this)));\n            }\n\n            return selectedAttributes;\n        },\n\n        /**\n         * Callback which fired after gallery gets initialized.\n         *\n         * @param {HTMLElement} element - DOM element associated with a gallery.\n         */\n        _onGalleryLoaded: function (element) {\n            var galleryObject = element.data('gallery');\n\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\n        },\n\n        /**\n         * Sets mediaCache for cases when jsonConfig contains preSelectedGallery on layered navigation result pages\n         *\n         * @private\n         */\n        _setPreSelectedGallery: function () {\n            var mediaCallData;\n\n            if (this.options.jsonConfig.preSelectedGallery) {\n                mediaCallData = {\n                    'product_id': this.getProduct()\n                };\n\n                this.options.mediaCache[JSON.stringify(mediaCallData)] = this.options.jsonConfig.preSelectedGallery;\n            }\n        }\n    });\n\n    return $.mage.SwatchRenderer;\n});\n","Magento_Swatches/js/visual.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global $break $ $$ FORM_KEY */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'uiRegistry',\n    'jquery/colorpicker/js/colorpicker',\n    'prototype',\n    'jquery/ui',\n    'validation'\n], function (jQuery, mageTemplate, rg) {\n    'use strict';\n\n    return function (config) {\n        var swatchOptionVisualDefaultInputType = 'radio',\n            swatchVisualOption = {\n                table: $('swatch-visual-options-table'),\n                itemCount: 0,\n                totalItems: 0,\n                rendered: 0,\n                isReadOnly: config.isReadOnly,\n                template: mageTemplate('#swatch-visual-row-template'),\n\n                /**\n                 * Add new option using template\n                 *\n                 * @param {Object} data\n                 * @param {Object} render\n                 */\n                add: function (data, render) {\n                    var isNewOption = false,\n                        element;\n\n                    if (typeof data.id == 'undefined') {\n                        data = {\n                            'id': 'option_' + this.itemCount,\n                            'sort_order': this.itemCount + 1,\n                            'empty_class': 'unavailable'\n                        };\n                        isNewOption = true;\n                    } else if (data.defaultswatch0 === '') {\n                        data['empty_class'] = 'unavailable';\n                    }\n\n                    if (!data.intype) {\n                        data.intype = swatchOptionVisualDefaultInputType;\n                    }\n\n                    element = this.template({\n                        data: data\n                    });\n\n                    if (isNewOption && !this.isReadOnly) {\n                        this.enableNewOptionDeleteButton(data.id);\n                    }\n                    this.itemCount++;\n                    this.totalItems++;\n                    this.elements += element;\n\n                    if (render) {\n                        this.render();\n                    }\n                },\n\n                /**\n                 * ColorPicker initialization process\n                 */\n                initColorPicker: function () {\n                    var element = this,\n                        hiddenColorPicker = !jQuery(element).data('colorpickerId');\n\n                    jQuery(this).ColorPicker({\n\n                        /**\n                         * ColorPicker onShow action\n                         */\n                        onShow: function () {\n                            var color = jQuery(element).parent().parent().prev().prev('input').val(),\n                                menu = jQuery(this).parents('.swatch_sub-menu_container');\n\n                            menu.hide();\n                            jQuery(element).ColorPickerSetColor(color);\n                        },\n\n                        /**\n                         * ColorPicker onSubmit action\n                         *\n                         * @param {String} hsb\n                         * @param {String} hex\n                         * @param {String} rgb\n                         * @param {String} el\n                         */\n                        onSubmit: function (hsb, hex, rgb, el) {\n                            var container = jQuery(el).parent().parent().prev();\n\n                            jQuery(el).ColorPickerHide();\n                            container.parent().removeClass('unavailable');\n                            container.prev('input').val('#' + hex);\n                            container.css('background', '#' + hex);\n                        }\n                    });\n\n                    if (hiddenColorPicker) {\n                        jQuery(this).ColorPickerShow();\n                    }\n                },\n\n                /**\n                 * Remove action\n                 *\n                 * @param {Object} event\n                 */\n                remove: function (event) {\n                    var element = $(Event.findElement(event, 'tr')),\n                        elementFlags; // !!! Button already have table parent in safari\n\n                    // Safari workaround\n                    element.ancestors().each(function (parentItem) {\n                        if (parentItem.hasClassName('option-row')) {\n                            element = parentItem;\n                            throw $break;\n                        } else if (parentItem.hasClassName('box')) {\n                            throw $break;\n                        }\n                    });\n\n                    if (element) {\n                        elementFlags = element.getElementsByClassName('delete-flag');\n\n                        if (elementFlags[0]) {\n                            elementFlags[0].value = 1;\n                        }\n\n                        element.addClassName('no-display');\n                        element.addClassName('template');\n                        element.hide();\n                        this.totalItems--;\n                        this.updateItemsCountField();\n                    }\n                },\n\n                /**\n                 * Update items count field\n                 */\n                updateItemsCountField: function () {\n                    $('swatch-visual-option-count-check').value = this.totalItems > 0 ? '1' : '';\n                },\n\n                /**\n                 * Enable delete button for new option\n                 *\n                 * @param {String} id\n                 */\n                enableNewOptionDeleteButton: function (id) {\n                    $$('#delete_button_swatch_container_' + id + ' button').each(function (button) {\n                        button.enable();\n                        button.removeClassName('disabled');\n                    });\n                },\n\n                /**\n                 * Bind remove button\n                 */\n                bindRemoveButtons: function () {\n                    jQuery('#swatch-visual-options-panel').on('click', '.delete-option', this.remove.bind(this));\n                },\n\n                /**\n                 * Render options\n                 */\n                render: function () {\n                    Element.insert($$('[data-role=swatch-visual-options-container]')[0], this.elements);\n                    this.elements = '';\n                },\n\n                /**\n                 * Render elements with delay (performance fix)\n                 *\n                 * @param {Object} data\n                 * @param {Number} from\n                 * @param {Number} step\n                 * @param {Number} delay\n                 * @returns {Boolean}\n                 */\n                renderWithDelay: function (data, from, step, delay) {\n                    var arrayLength = data.length,\n                        len;\n\n                    for (len = from + step; from < len && from < arrayLength; from++) {\n                        this.add(data[from]);\n                    }\n                    this.render();\n\n                    if (from === arrayLength) {\n                        this.updateItemsCountField();\n                        this.rendered = 1;\n                        jQuery('body').trigger('processStop');\n\n                        return true;\n                    }\n                    setTimeout(this.renderWithDelay.bind(this, data, from, step, delay), delay);\n                },\n\n                /**\n                 * Ignore validate action\n                 */\n                ignoreValidate: function () {\n                    var ignore = '.ignore-validate input, ' +\n                        '.ignore-validate select, ' +\n                        '.ignore-validate textarea';\n\n                    jQuery('#edit_form').data('validator').settings.forceIgnore = ignore;\n                }\n            };\n\n        if ($('add_new_swatch_visual_option_button')) {\n            Event.observe(\n                'add_new_swatch_visual_option_button',\n                'click',\n                swatchVisualOption.add.bind(swatchVisualOption, {}, true)\n            );\n        }\n\n        jQuery('#swatch-visual-options-panel').on('render', function () {\n            swatchVisualOption.ignoreValidate();\n\n            if (swatchVisualOption.rendered) {\n                return false;\n            }\n            jQuery('body').trigger('processStart');\n            swatchVisualOption.renderWithDelay(config.attributesData, 0, 100, 300);\n            swatchVisualOption.bindRemoveButtons();\n            jQuery('#swatch-visual-options-panel').on(\n                'click',\n                '.colorpicker_handler',\n                swatchVisualOption.initColorPicker\n            );\n        });\n        jQuery('body').on('click', function (event) {\n            var element = jQuery(event.target);\n\n            if (\n                element.parents('.swatch_sub-menu_container').length === 1 ||\n                element.next('div.swatch_sub-menu_container').length === 1\n            ) {\n                return true;\n            }\n            jQuery('.swatch_sub-menu_container').hide();\n        });\n\n        if (config.isSortable) {\n            jQuery(function ($) {\n                $('[data-role=swatch-visual-options-container]').sortable({\n                    distance: 8,\n                    tolerance: 'pointer',\n                    cancel: 'input, button',\n                    axis: 'y',\n\n                    /**\n                     * Update component\n                     */\n                    update: function () {\n                        $('[data-role=swatch-visual-options-container] [data-role=order]').each(\n                            function (index, element) {\n                                $(element).val(index + 1);\n                            }\n                        );\n                    }\n                });\n            });\n        }\n\n        window.swatchVisualOption = swatchVisualOption;\n        window.swatchOptionVisualDefaultInputType = swatchOptionVisualDefaultInputType;\n\n        rg.set('swatch-visual-options-panel', swatchVisualOption);\n\n        jQuery(function ($) {\n\n            var swatchComponents = {\n\n                /**\n                 * div wrapper for to hide all evement\n                 */\n                wrapper: null,\n\n                /**\n                 * iframe component to perform file upload without page reload\n                 */\n                iframe: null,\n\n                /**\n                 * form component for upload image\n                 */\n                form: null,\n\n                /**\n                 * Input file component for upload image\n                 */\n                inputFile: null,\n\n                /**\n                 * Create swatch component for upload files\n                 *\n                 * @this {swatchComponents}\n                 * @public\n                 */\n                create: function () {\n                    this.wrapper = $('<div>').css({\n                        display: 'none'\n                    }).appendTo($('body'));\n\n                    this.iframe = $('<iframe />', {\n                        id:  'upload_iframe',\n                        name: 'upload_iframe'\n                    }).appendTo(this.wrapper);\n\n                    this.form = $('<form />', {\n                        id: 'swatch_form_image_upload',\n                        name: 'swatch_form_image_upload',\n                        target: 'upload_iframe',\n                        method: 'post',\n                        enctype: 'multipart/form-data',\n                        class: 'ignore-validate',\n                        action: config.uploadActionUrl\n                    }).appendTo(this.wrapper);\n\n                    this.inputFile = $('<input />', {\n                        type: 'file',\n                        name: 'datafile',\n                        class: 'swatch_option_file'\n                    }).appendTo(this.form);\n\n                    $('<input />', {\n                        type: 'hidden',\n                        name: 'form_key',\n                        value: FORM_KEY\n                    }).appendTo(this.form);\n                }\n            };\n\n            /**\n             * Create swatch components\n             */\n            swatchComponents.create();\n\n            /**\n             * Register event for swatch input[type=file] change\n             */\n            swatchComponents.inputFile.change(function () {\n                var container = $('#' + $(this).attr('data-called-by')).parents().eq(2).children('.swatch_window'),\n\n                    /**\n                     * @this {iframe}\n                     */\n                    iframeHandler = function () {\n                        var imageParams = $.parseJSON($(this).contents().find('body').html()),\n                            fullMediaUrl = imageParams['swatch_path'] + imageParams['file_path'];\n\n                        container.prev('input').val(imageParams['file_path']);\n                        container.css({\n                            'background-image': 'url(' + fullMediaUrl + ')',\n                            'background-size': 'cover'\n                        });\n                        container.parent().removeClass('unavailable');\n                    };\n\n                swatchComponents.iframe.off('load');\n                swatchComponents.iframe.load(iframeHandler);\n                swatchComponents.form.submit();\n                $(this).val('');\n            });\n\n            /**\n             * Register event for choose \"upload image\" option\n             */\n            $(document).on('click', '.btn_choose_file_upload', function () {\n                swatchComponents.inputFile.attr('data-called-by', $(this).attr('id'));\n                swatchComponents.inputFile.click();\n            });\n\n            /**\n             * Register event for remove option\n             */\n            $(document).on('click', '.btn_remove_swatch', function () {\n                var optionPanel = $(this).parents().eq(2);\n\n                optionPanel.children('input').val('');\n                optionPanel.children('.swatch_window').css('background', '');\n\n                optionPanel.addClass('unavailable');\n\n                jQuery('.swatch_sub-menu_container').hide();\n            });\n\n            /**\n             * Toggle color upload chooser\n             */\n            $(document).on('click', '.swatches-visual-col', function () {\n                var currentElement = $(this).find('.swatch_sub-menu_container');\n\n                jQuery('.swatch_sub-menu_container').not(currentElement).hide();\n                currentElement.toggle();\n            });\n        });\n    };\n});\n","Magento_Swatches/js/text.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global $break $ $$ */\n\n/**\n *  @api\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'uiRegistry',\n    'jquery/ui',\n    'prototype',\n    'validation'\n], function (jQuery, mageTemplate, rg) {\n    'use strict';\n\n    return function (config) {\n        var swatchOptionTextDefaultInputType = 'radio',\n            swatchTextOption = {\n                table: $('swatch-text-options-table'),\n                itemCount: 0,\n                totalItems: 0,\n                rendered: 0,\n                isReadOnly: config.isReadOnly,\n                template: mageTemplate('#swatch-text-row-template'),\n\n                /**\n                 * Add option\n                 *\n                 * @param {Object} data\n                 * @param {Object} render\n                 */\n                add: function (data, render) {\n                    var isNewOption = false,\n                        element;\n\n                    if (typeof data.id == 'undefined') {\n                        data = {\n                            'id': 'option_' + this.itemCount,\n                            'sort_order': this.itemCount + 1\n                        };\n                        isNewOption = true;\n                    }\n\n                    if (!data.intype) {\n                        data.intype = swatchOptionTextDefaultInputType;\n                    }\n\n                    element = this.template({\n                        data: data\n                    });\n\n                    if (isNewOption && !this.isReadOnly) {\n                        this.enableNewOptionDeleteButton(data.id);\n                    }\n                    this.itemCount++;\n                    this.totalItems++;\n                    this.elements += element;\n\n                    if (render) {\n                        this.render();\n                    }\n                },\n\n                /**\n                 * Remove option\n                 *\n                 * @param {Object} event\n                 */\n                remove: function (event) {\n                    var element = $(Event.findElement(event, 'tr')),\n                        elementFlags; // !!! Button already have table parent in safari\n\n                    // Safari workaround\n                    element.ancestors().each(function (parentItem) {\n                        if (parentItem.hasClassName('option-row')) {\n                            element = parentItem;\n                            throw $break;\n                        } else if (parentItem.hasClassName('box')) {\n                            throw $break;\n                        }\n                    });\n\n                    if (element) {\n                        elementFlags = element.getElementsByClassName('delete-flag');\n\n                        if (elementFlags[0]) {\n                            elementFlags[0].value = 1;\n                        }\n\n                        element.addClassName('no-display');\n                        element.addClassName('template');\n                        element.hide();\n                        this.totalItems--;\n                        this.updateItemsCountField();\n                    }\n                },\n\n                /**\n                 * Update items count field\n                 */\n                updateItemsCountField: function () {\n                    $('swatch-text-option-count-check').value = this.totalItems > 0 ? '1' : '';\n                },\n\n                /**\n                 * Enable delete button for new option\n                 *\n                 * @param {String} id\n                 */\n                enableNewOptionDeleteButton: function (id) {\n                    $$('#delete_button_swatch_container_' + id + ' button').each(function (button) {\n                        button.enable();\n                        button.removeClassName('disabled');\n                    });\n                },\n\n                /**\n                 * Bind remove button\n                 */\n                bindRemoveButtons: function () {\n                    jQuery('#swatch-text-options-panel').on('click', '.delete-option', this.remove.bind(this));\n                },\n\n                /**\n                 * Render action\n                 */\n                render: function () {\n                    Element.insert($$('[data-role=swatch-text-options-container]')[0], this.elements);\n                    this.elements = '';\n                },\n\n                /**\n                 * Render action with delay (performance fix)\n                 *\n                 * @param {Object} data\n                 * @param {Number} from\n                 * @param {Number} step\n                 * @param {Number} delay\n                 * @returns {Boolean}\n                 */\n                renderWithDelay: function (data, from, step, delay) {\n                    var arrayLength = data.length,\n                        len;\n\n                    for (len = from + step; from < len && from < arrayLength; from++) {\n                        this.add(data[from]);\n                    }\n                    this.render();\n\n                    if (from === arrayLength) {\n                        this.updateItemsCountField();\n                        this.rendered = 1;\n                        jQuery('body').trigger('processStop');\n\n                        return true;\n                    }\n                    setTimeout(this.renderWithDelay.bind(this, data, from, step, delay), delay);\n                },\n\n                /**\n                 * Ignore validate action\n                 */\n                ignoreValidate: function () {\n                    var ignore = '.ignore-validate input, ' +\n                        '.ignore-validate select, ' +\n                        '.ignore-validate textarea';\n\n                    jQuery('#edit_form').data('validator').settings.forceIgnore = ignore;\n                }\n            };\n\n        if ($('add_new_swatch_text_option_button')) {\n            Event.observe(\n                'add_new_swatch_text_option_button',\n                'click',\n                swatchTextOption.add.bind(swatchTextOption, true)\n            );\n        }\n        jQuery('#swatch-text-options-panel').on('render', function () {\n            swatchTextOption.ignoreValidate();\n\n            if (swatchTextOption.rendered) {\n                return false;\n            }\n            jQuery('body').trigger('processStart');\n            swatchTextOption.renderWithDelay(config.attributesData, 0, 100, 300);\n            swatchTextOption.bindRemoveButtons();\n        });\n\n        if (config.isSortable) {\n            jQuery(function ($) {\n                $('[data-role=swatch-text-options-container]').sortable({\n                    distance: 8,\n                    tolerance: 'pointer',\n                    cancel: 'input, button',\n                    axis: 'y',\n\n                    /**\n                     * Update components\n                     */\n                    update: function () {\n                        $('[data-role=swatch-text-options-container] [data-role=order]').each(\n                            function (index, element) {\n                                $(element).val(index + 1);\n                            }\n                        );\n                    }\n                });\n            });\n        }\n\n        jQuery(document).ready(function () {\n            if (jQuery('#frontend_input').val() !== 'swatch_text') {\n                jQuery('.swatch-text-field-0').removeClass('required-option');\n            }\n        });\n\n        window.swatchTextOption = swatchTextOption;\n        window.swatchOptionTextDefaultInputType = swatchOptionTextDefaultInputType;\n\n        rg.set('swatch-text-options-panel', swatchTextOption);\n    };\n});\n","Magento_Swatches/js/product-attributes.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Ui/js/modal/prompt',\n    'uiRegistry',\n    'collapsable'\n], function ($, alert, prompt, rg) {\n    'use strict';\n\n    return function (optionConfig) {\n        var activePanelClass = 'selected-type-options',\n            swatchProductAttributes = {\n                frontendInput: $('#frontend_input'),\n                isFilterable: $('#is_filterable'),\n                isFilterableInSearch: $('#is_filterable_in_search'),\n                backendType: $('#backend_type'),\n                usedForSortBy: $('#used_for_sort_by'),\n                frontendClass: $('#frontend_class'),\n                isWysiwygEnabled: $('#is_wysiwyg_enabled'),\n                isHtmlAllowedOnFront: $('#is_html_allowed_on_front'),\n                isRequired: $('#is_required'),\n                isUnique: $('#is_unique'),\n                defaultValueText: $('#default_value_text'),\n                defaultValueTextarea: $('#default_value_textarea'),\n                defaultValueDate: $('#default_value_date'),\n                defaultValueDatetime: $('#default_value_datetime'),\n                defaultValueYesno: $('#default_value_yesno'),\n                isGlobal: $('#is_global'),\n                useProductImageForSwatch: $('#use_product_image_for_swatch'),\n                updateProductPreviewImage: $('#update_product_preview_image'),\n                usedInProductListing: $('#used_in_product_listing'),\n                isVisibleOnFront: $('#is_visible_on_front'),\n                position: $('#position'),\n                attrTabsFront: $('#product_attribute_tabs_front'),\n\n                /**\n                 * @returns {*|jQuery|HTMLElement}\n                 */\n                get tabsFront() {\n                    return this.attrTabsFront.length ? this.attrTabsFront.closest('li') : $('#front_fieldset-wrapper');\n                },\n                selectFields: ['boolean', 'select', 'multiselect', 'price', 'swatch_text', 'swatch_visual'],\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                toggleApplyVisibility: function (select) {\n                    if ($(select).val() === 1) {\n                        $(select).next('select').removeClass('no-display');\n                        $(select).next('select').removeClass('ignore-validate');\n                    } else {\n                        $(select).next('select').addClass('no-display');\n                        $(select).next('select').addClass('ignore-validate');\n                        $(select).next('select option:selected').each(function () {\n                            this.selected = false;\n                        });\n                    }\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                checkOptionsPanelVisibility: function () {\n                    var selectOptionsPanel = $('#manage-options-panel'),\n                        visualOptionsPanel = $('#swatch-visual-options-panel'),\n                        textOptionsPanel = $('#swatch-text-options-panel');\n\n                    this._hidePanel(selectOptionsPanel);\n                    this._hidePanel(visualOptionsPanel);\n                    this._hidePanel(textOptionsPanel);\n\n                    switch (this.frontendInput.val()) {\n                        case 'swatch_visual':\n                            this._showPanel(visualOptionsPanel);\n                            break;\n\n                        case 'swatch_text':\n                            this._showPanel(textOptionsPanel);\n                            break;\n\n                        case 'select':\n                        case 'multiselect':\n                            this._showPanel(selectOptionsPanel);\n                            break;\n                    }\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                bindAttributeInputType: function () {\n                    this.checkOptionsPanelVisibility();\n                    this.switchDefaultValueField();\n\n                    if (!~$.inArray(this.frontendInput.val(), this.selectFields)) {\n                        // not in array\n                        this.isFilterable.selectedIndex = 0;\n                        this._disable(this.isFilterable);\n                        this._disable(this.isFilterableInSearch);\n                    } else {\n                        // in array\n                        this._enable(this.isFilterable);\n                        this._enable(this.isFilterableInSearch);\n                        this.backendType.val('int');\n                    }\n\n                    if (this.frontendInput.val() === 'multiselect' ||\n                        this.frontendInput.val() === 'gallery' ||\n                        this.frontendInput.val() === 'textarea'\n                    ) {\n                        this._disable(this.usedForSortBy);\n                    } else {\n                        this._enable(this.usedForSortBy);\n                    }\n\n                    if (this.frontendInput.val() === 'swatch_text') {\n                        $('.swatch-text-field-0').addClass('required-option');\n                    } else {\n                        $('.swatch-text-field-0').removeClass('required-option');\n                    }\n\n                    this.setRowVisibility(this.isWysiwygEnabled, false);\n                    this.setRowVisibility(this.isHtmlAllowedOnFront, false);\n\n                    switch (this.frontendInput.val()) {\n                        case 'textarea':\n                            this.setRowVisibility(this.isWysiwygEnabled, true);\n\n                            if (this.isWysiwygEnabled.val() === '0') {\n                                this._enable(this.isHtmlAllowedOnFront);\n                            }\n                            this.frontendClass.val('');\n                            this._disable(this.frontendClass);\n                            break;\n\n                        case 'text':\n                            this.setRowVisibility(this.isHtmlAllowedOnFront, true);\n                            this._enable(this.frontendClass);\n                            break;\n\n                        case 'select':\n                        case 'multiselect':\n                            this.setRowVisibility(this.isHtmlAllowedOnFront, true);\n                            this.frontendClass.val('');\n                            this._disable(this.frontendClass);\n                            break;\n                        default:\n                            this.frontendClass.val('');\n                            this._disable(this.frontendClass);\n                    }\n\n                    this.switchIsFilterable();\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                switchIsFilterable: function () {\n                    if (this.isFilterable.selectedIndex === 0) {\n                        this._disable(this.position);\n                    } else {\n                        this._enable(this.position);\n                    }\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                switchDefaultValueField: function () {\n                    var currentValue = this.frontendInput.val(),\n                        defaultValueTextVisibility = false,\n                        defaultValueTextareaVisibility = false,\n                        defaultValueDateVisibility = false,\n                        defaultValueDatetimeVisibility = false,\n                        defaultValueYesnoVisibility = false,\n                        scopeVisibility = true,\n                        useProductImageForSwatch = false,\n                        defaultValueUpdateImage = false,\n                        optionDefaultInputType = '',\n                        isFrontTabHidden = false,\n                        thing = this;\n\n                    if (!this.frontendInput.length) {\n                        return;\n                    }\n\n                    switch (currentValue) {\n                        case 'select':\n                            optionDefaultInputType = 'radio';\n                            break;\n\n                        case 'multiselect':\n                            optionDefaultInputType = 'checkbox';\n                            break;\n\n                        case 'date':\n                            defaultValueDateVisibility = true;\n                            break;\n\n                        case 'datetime':\n                            defaultValueDatetimeVisibility = true;\n                            break;\n\n                        case 'boolean':\n                            defaultValueYesnoVisibility = true;\n                            break;\n\n                        case 'textarea':\n                        case 'texteditor':\n                            defaultValueTextareaVisibility = true;\n                            break;\n\n                        case 'media_image':\n                            defaultValueTextVisibility = false;\n                            break;\n\n                        case 'price':\n                            scopeVisibility = false;\n                            break;\n\n                        case 'swatch_visual':\n                            useProductImageForSwatch = true;\n                            defaultValueUpdateImage = true;\n                            defaultValueTextVisibility = false;\n                            break;\n\n                        case 'swatch_text':\n                            useProductImageForSwatch = false;\n                            defaultValueUpdateImage = true;\n                            defaultValueTextVisibility = false;\n                            break;\n                        default:\n                            defaultValueTextVisibility = true;\n                            break;\n                    }\n\n                    delete optionConfig.hiddenFields['swatch_visual'];\n                    delete optionConfig.hiddenFields['swatch_text'];\n\n                    if (currentValue === 'media_image') {\n                        this.tabsFront.hide();\n                        this.setRowVisibility(this.isRequired, false);\n                        this.setRowVisibility(this.isUnique, false);\n                        this.setRowVisibility(this.frontendClass, false);\n                    } else if (optionConfig.hiddenFields[currentValue]) {\n                        $.each(optionConfig.hiddenFields[currentValue], function (key, option) {\n                            switch (option) {\n                                case '_front_fieldset':\n                                    thing.tabsFront.hide();\n                                    isFrontTabHidden = true;\n                                    break;\n\n                                case '_default_value':\n                                    defaultValueTextVisibility = false;\n                                    defaultValueTextareaVisibility = false;\n                                    defaultValueDateVisibility = false;\n                                    defaultValueDatetimeVisibility = false;\n                                    defaultValueYesnoVisibility = false;\n                                    break;\n\n                                case '_scope':\n                                    scopeVisibility = false;\n                                    break;\n                                default:\n                                    thing.setRowVisibility($('#' + option), false);\n                            }\n                        });\n\n                        if (!isFrontTabHidden) {\n                            thing.tabsFront.show();\n                        }\n\n                    } else {\n                        this.tabsFront.show();\n                        this.showDefaultRows();\n                    }\n\n                    this.setRowVisibility(this.defaultValueText, defaultValueTextVisibility);\n                    this.setRowVisibility(this.defaultValueTextarea, defaultValueTextareaVisibility);\n                    this.setRowVisibility(this.defaultValueDate, defaultValueDateVisibility);\n                    this.setRowVisibility(this.defaultValueDatetime, defaultValueDatetimeVisibility);\n                    this.setRowVisibility(this.defaultValueYesno, defaultValueYesnoVisibility);\n                    this.setRowVisibility(this.isGlobal, scopeVisibility);\n\n                    /* swatch attributes */\n                    this.setRowVisibility(this.useProductImageForSwatch, useProductImageForSwatch);\n                    this.setRowVisibility(this.updateProductPreviewImage, defaultValueUpdateImage);\n\n                    $('input[name=\\'default[]\\']').each(function () {\n                        $(this).attr('type', optionDefaultInputType);\n                    });\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                showDefaultRows: function () {\n                    this.setRowVisibility(this.isRequired, true);\n                    this.setRowVisibility(this.isUnique, true);\n                    this.setRowVisibility(this.frontendClass, true);\n                },\n\n                /**\n                 * @param {Object} el\n                 * @param {Boolean} isVisible\n                 * @this {swatchProductAttributes}\n                 */\n                setRowVisibility: function (el, isVisible) {\n                    if (isVisible) {\n                        el.show();\n                        el.closest('.field').show();\n                    } else {\n                        el.hide();\n                        el.closest('.field').hide();\n                    }\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _disable: function (el) {\n                    el.attr('disabled', 'disabled');\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _enable: function (el) {\n                    if (!el.attr('readonly')) {\n                        el.removeAttr('disabled');\n                    }\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _showPanel: function (el) {\n                    el.closest('.fieldset').show();\n                    el.addClass(activePanelClass);\n                    this._render(el.attr('id'));\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _hidePanel: function (el) {\n                    el.closest('.fieldset').hide();\n                    el.removeClass(activePanelClass);\n                },\n\n                /**\n                 * @param {String} id\n                 * @this {swatchProductAttributes}\n                 */\n                _render: function (id) {\n                    rg.get(id, function () {\n                        $('#' + id).trigger('render');\n                    });\n                },\n\n                /**\n                 * @param {String} promptMessage\n                 * @this {swatchProductAttributes}\n                 */\n                saveAttributeInNewSet: function (promptMessage) {\n\n                    prompt({\n                        content: promptMessage,\n                        actions: {\n\n                            /**\n                             * @param {String} val\n                             * @this {actions}\n                             */\n                            confirm: function (val) {\n                                var rules = ['required-entry', 'validate-no-html-tags'],\n                                    newAttributeSetNameInputId = $('#new_attribute_set_name'),\n                                    editForm = $('#edit_form'),\n                                    newAttributeSetName = val,\n                                    i;\n\n                                if (!newAttributeSetName) {\n                                    return;\n                                }\n\n                                for (i = 0; i < rules.length; i++) {\n                                    if (!$.validator.methods[rules[i]](newAttributeSetName)) {\n                                        alert({\n                                            content: $.validator.messages[rules[i]]\n                                        });\n\n                                        return;\n                                    }\n                                }\n\n                                if (newAttributeSetNameInputId.length) {\n                                    newAttributeSetNameInputId.val(newAttributeSetName);\n                                } else {\n                                    editForm.append(new Element('input', {\n                                            type: 'hidden',\n                                            id: newAttributeSetNameInputId,\n                                            name: 'new_attribute_set_name',\n                                            value: newAttributeSetName\n                                        })\n                                    );\n                                }\n                                // Temporary solution will replaced after refactoring of attributes functionality\n                                editForm.triggerHandler('save');\n                            }\n                        }\n                    });\n                }\n            };\n\n        $(function () {\n            var editForm = $('#edit_form'),\n                swatchVisualPanel = $('#swatch-visual-options-panel'),\n                swatchTextPanel = $('#swatch-text-options-panel'),\n                tableBody = $(),\n                activePanel = $();\n\n            $('#frontend_input').on('change', function () {\n                swatchProductAttributes.bindAttributeInputType();\n            });\n            $('#is_filterable').on('change', function () {\n                swatchProductAttributes.switchIsFilterable();\n            });\n\n            swatchProductAttributes.bindAttributeInputType();\n\n            // @todo: refactor collapsible component\n            $('.attribute-popup .collapse, [data-role=\"advanced_fieldset-content\"]')\n                .collapsable()\n                .collapse('hide');\n\n            editForm.on('beforeSubmit', function () {\n                var optionContainer, optionsValues;\n\n                activePanel = swatchTextPanel.hasClass(activePanelClass) ? swatchTextPanel : swatchVisualPanel;\n                optionContainer = activePanel.find('table tbody');\n\n                if (activePanel.hasClass(activePanelClass)) {\n                    optionsValues = $.map(\n                        optionContainer.find('tr'),\n                        function (row) {\n                            return $(row).find('input, select, textarea').serialize();\n                        }\n                    );\n                    $('<input>')\n                        .attr({\n                            type: 'hidden',\n                            name: 'serialized_options'\n                        })\n                        .val(JSON.stringify(optionsValues))\n                        .prependTo(editForm);\n                }\n\n                tableBody = optionContainer.detach();\n            });\n\n            editForm.on('afterValidate.error highlight.validate', function () {\n                if (activePanel.hasClass(activePanelClass)) {\n                    activePanel.find('table').append(tableBody);\n                    $('input[name=\"serialized_options\"]').remove();\n                }\n            });\n        });\n\n        window.saveAttributeInNewSet = swatchProductAttributes.saveAttributeInNewSet;\n        window.toggleApplyVisibility = swatchProductAttributes.toggleApplyVisibility;\n    };\n});\n","Magento_Swatches/js/form/element/swatch-visual.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global $break $ FORM_KEY */\n\n/**\n * @api\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/lib/view/utils/async',\n    'mage/template',\n    'uiRegistry',\n    'prototype',\n    'Magento_Ui/js/form/element/abstract',\n    'jquery/colorpicker/js/colorpicker',\n    'jquery/ui'\n], function (_, jQuery, mageTemplate, rg, prototype, Abstract) {\n    'use strict';\n\n    /**\n     * Former implementation.\n     *\n     * @param {*} value\n     * @param {Object} container\n     * @param {String} uploadUrl\n     * @param {String} elementName\n     */\n    function oldCode(value, container, uploadUrl, elementName) {\n        var swatchVisualOption = {\n            itemCount: 0,\n            totalItems: 0,\n            rendered: 0,\n            isReadOnly: false,\n\n            /**\n             * Initialize.\n             */\n            initialize: function () {\n                if (_.isEmpty(value)) {\n                    container.addClassName('unavailable');\n                }\n\n                jQuery(container).on(\n                    'click',\n                    '.colorpicker_handler',\n                    this.initColorPicker\n                );\n            },\n\n            /**\n             * ColorPicker initialization process\n             */\n            initColorPicker: function () {\n                var element = this,\n                    hiddenColorPicker = !jQuery(element).data('colorpickerId');\n\n                jQuery(this).ColorPicker({\n\n                    /**\n                     * ColorPicker onShow action\n                     */\n                    onShow: function () {\n                        var color = jQuery(element).parent().parent().prev().prev('input').val(),\n                            menu = jQuery(this).parents('.swatch_sub-menu_container');\n\n                        menu.hide();\n                        jQuery(element).ColorPickerSetColor(color);\n                    },\n\n                    /**\n                     * ColorPicker onSubmit action\n                     *\n                     * @param {String} hsb\n                     * @param {String} hex\n                     * @param {String} rgb\n                     * @param {String} el\n                     */\n                    onSubmit: function (hsb, hex, rgb, el) {\n                        var localContainer = jQuery(el).parent().parent().prev();\n\n                        jQuery(el).ColorPickerHide();\n                        localContainer.parent().removeClass('unavailable');\n                        localContainer.prev('input').val('#' + hex).trigger('change');\n                        localContainer.css('background', '#' + hex);\n                    }\n                });\n\n                if (hiddenColorPicker) {\n                    jQuery(this).ColorPickerShow();\n                }\n            },\n\n            /**\n             * Remove action\n             *\n             * @param {Object} event\n             */\n            remove: function (event) {\n                var element = $(Event.findElement(event, 'tr')),\n                    elementFlags; // !!! Button already have table parent in safari\n\n                // Safari workaround\n                element.ancestors().each(function (parentItem) {\n                    if (parentItem.hasClassName('option-row')) {\n                        element = parentItem;\n                        throw $break;\n                    } else if (parentItem.hasClassName('box')) {\n                        throw $break;\n                    }\n                });\n\n                if (element) {\n                    elementFlags = element.getElementsByClassName('delete-flag');\n\n                    if (elementFlags[0]) {\n                        elementFlags[0].value = 1;\n                    }\n\n                    element.addClassName('no-display');\n                    element.addClassName('template');\n                    element.hide();\n                    this.totalItems--;\n                    this.updateItemsCountField();\n                }\n            },\n\n            /**\n             * Update items count field\n             */\n            updateItemsCountField: function () {\n                $('swatch-visual-option-count-check').value = this.totalItems > 0 ? '1' : '';\n            }\n        };\n\n        //swatchVisualOption.initColorPicker();\n\n        jQuery('body').on('click', function (event) {\n            var element = jQuery(event.target);\n\n            if (\n                element.parents('.swatch_sub-menu_container').length === 1 ||\n                element.next('div.swatch_sub-menu_container').length === 1\n            ) {\n                return true;\n            }\n            jQuery('.swatch_sub-menu_container').hide();\n        });\n\n        jQuery(function ($) {\n\n            var swatchComponents = {\n\n                /**\n                 * div wrapper for to hide all evement\n                 */\n                wrapper: null,\n\n                /**\n                 * iframe component to perform file upload without page reload\n                 */\n                iframe: null,\n\n                /**\n                 * form component for upload image\n                 */\n                form: null,\n\n                /**\n                 * Input file component for upload image\n                 */\n                inputFile: null,\n\n                /**\n                 * Create swatch component for upload files\n                 *\n                 * @this {swatchComponents}\n                 * @public\n                 */\n                create: function () {\n                    this.wrapper = $('<div>').css({\n                        display: 'none'\n                    }).appendTo($('body'));\n\n                    this.iframe = $('<iframe />', {\n                        name: 'upload_iframe_' + elementName\n                    }).appendTo(this.wrapper);\n\n                    this.form = $('<form />', {\n                        name: 'swatch_form_image_upload_' + elementName,\n                        target: 'upload_iframe_' + elementName,\n                        method: 'post',\n                        enctype: 'multipart/form-data',\n                        class: 'ignore-validate',\n                        action: uploadUrl\n                    }).appendTo(this.wrapper);\n\n                    this.inputFile = $('<input />', {\n                        type: 'file',\n                        name: 'datafile',\n                        class: 'swatch_option_file'\n                    }).appendTo(this.form);\n\n                    $('<input />', {\n                        type: 'hidden',\n                        name: 'form_key',\n                        value: FORM_KEY\n                    }).appendTo(this.form);\n                }\n            };\n\n            swatchVisualOption.initialize();\n\n            /**\n             * Create swatch components\n             */\n            swatchComponents.create();\n\n            /**\n             * Register event for swatch input[type=file] change\n             */\n            swatchComponents.inputFile.change(function () {\n                var localContainer = $('.' + $(this).attr('data-called-by')).parents().eq(2).children('.swatch_window'),\n\n                    /**\n                     * @this {iframe}\n                     */\n                    iframeHandler = function () {\n                        var imageParams = $.parseJSON($(this).contents().find('body').html()),\n                            fullMediaUrl = imageParams['swatch_path'] + imageParams['file_path'];\n\n                        localContainer.prev('input').val(imageParams['file_path']).trigger('change');\n                        localContainer.css({\n                            'background-image': 'url(' + fullMediaUrl + ')',\n                            'background-size': 'cover'\n                        });\n                        localContainer.parent().removeClass('unavailable');\n                    };\n\n                swatchComponents.iframe.off('load');\n                swatchComponents.iframe.load(iframeHandler);\n                swatchComponents.form.submit();\n                $(this).val('');\n            });\n\n            /**\n             * Register event for choose \"upload image\" option\n             */\n            $(container).on('click', '.btn_choose_file_upload', function () {\n                swatchComponents.inputFile.attr('data-called-by', $(this).data('class'));\n                swatchComponents.inputFile.click();\n            });\n\n            /**\n             * Register event for remove option\n             */\n            $(container).on('click', '.btn_remove_swatch', function () {\n                var optionPanel = $(this).parents().eq(2);\n\n                optionPanel.children('input').val('').trigger('change');\n                optionPanel.children('.swatch_window').css('background', '');\n                optionPanel.addClass('unavailable');\n                jQuery('.swatch_sub-menu_container').hide();\n            });\n\n            /**\n             * Toggle color upload chooser\n             */\n            $(container).on('click', '.swatch_window', function () {\n                jQuery('.swatch_sub-menu_container').hide();\n                $(this).next('div').toggle();\n            });\n        });\n    }\n\n    return Abstract.extend({\n        defaults: {\n            elementId: 0,\n            prefixName: '',\n            prefixElementName: '',\n            elementName: '',\n            value: '',\n            uploadUrl: ''\n        },\n\n        /**\n         * Parses options and merges the result with instance\n         *\n         * @returns {Object} Chainable.\n         */\n        initConfig: function () {\n            this._super();\n\n            this.configureDataScope();\n\n            return this;\n        },\n\n        /**\n         * Initialize.\n         *\n         * @returns {Object} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initOldCode()\n                .on('value', this.onChangeColor.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Handler function that execute when color changes.\n         *\n         * @param {String} data - color\n         */\n        onChangeColor: function (data) {\n            if (!data) {\n                jQuery('.' + this.elementName).parent().removeClass('unavailable');\n            }\n        },\n\n        /**\n         * Initialize wrapped former implementation.\n         *\n         * @returns {Object} Chainable.\n         */\n        initOldCode: function () {\n            jQuery.async('.' + this.elementName, this.name, function (elem) {\n                oldCode(this.value(), elem.parentElement, this.uploadUrl, this.elementName);\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Configure data scope.\n         */\n        configureDataScope: function () {\n            var recordId, prefixName;\n\n            // Get recordId\n            recordId = this.parentName.split('.').last();\n\n            prefixName = this.dataScopeToHtmlArray(this.prefixName);\n            this.elementName = this.prefixElementName + recordId;\n\n            this.inputName = prefixName + '[' + this.elementName + ']';\n            this.exportDataLink = 'data.' + this.prefixName + '.' + this.elementName;\n            this.exports.value = this.provider + ':' + this.exportDataLink;\n        },\n\n        /** @inheritdoc */\n        destroy: function () {\n            this._super();\n\n            this.source.remove(this.exportDataLink);\n        },\n\n        /**\n         * Get HTML array from data scope.\n         *\n         * @param {String} dataScopeString\n         * @returns {String}\n         */\n        dataScopeToHtmlArray: function (dataScopeString) {\n            var dataScopeArray, dataScope, reduceFunction;\n\n            /**\n             * Add new level of nesting.\n             *\n             * @param {String} prev\n             * @param {String} curr\n             * @returns {String}\n             */\n            reduceFunction = function (prev, curr) {\n                return prev + '[' + curr + ']';\n            };\n\n            dataScopeArray = dataScopeString.split('.');\n\n            dataScope = dataScopeArray.shift();\n            dataScope += dataScopeArray.reduce(reduceFunction, '');\n\n            return dataScope;\n        }\n    });\n});\n","Magento_Integration/js/integration.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * jQuery plugin is added.\n *\n * @api\n */\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'jquery/ui',\n    'mage/translate',\n    'Magento_Ui/js/modal/modal'\n], function ($, alert) {\n    'use strict';\n\n    $.widget('mage.integration', {\n        /**\n         * Options common to all instances of this widget.\n         * @type {Object}\n         */\n        options: {\n            /**\n             * URL of the integration grid.\n             * @type {String}\n             */\n            gridUrl: ''\n        },\n\n        /**\n         * Bind event handler for the action when admin clicks \"Save & Activate\" button.\n         * @private\n         */\n        _create: function () {\n            if ($('#save-split-button-activate').length) {\n                // We're on the \"New integration\" page - bind related handler\n                this._form = $('#edit_form');\n                this._form.on('saveAndActivate', $.proxy(this._saveAndActivate, this));\n            }\n        },\n\n        /**\n         * Save new integration, then kick off the activate dialog.\n         * @private\n         */\n        _saveAndActivate: function () {\n            if (this._form.validation && !this._form.validation('isValid')) {\n                return false;\n            }\n\n            $.ajax({\n                url: this._form.prop('action'),\n                type: 'post',\n                data: this._form.serialize(),\n                dataType: 'json',\n                context: this,\n\n                /** @inheritdoc */\n                beforeSend: function () {\n                    $('body').trigger('processStart');\n                },\n\n                /** @inheritdoc */\n                success: function (data) {\n                    var integrationName, that;\n\n                    if (data._redirect) {\n                        window.location.href = data._redirect;\n                    } else if (data.integrationId) {\n                        integrationName = $('#integration_properties_name').val();\n                        window.integration.popup.show($('<span>').attr({\n                            'data-row-dialog': 'permissions',\n                            'data-row-id': data.integrationId,\n                            // We do escaping here instead of the place of actual output because _showPopup()\n                            // actually receives dialog window title from couple of places: from here and from the grid.\n                            // The issue is we always should escape values in the grid, so that value is already\n                            // escaped. To avoid double escaping we do it here instead of the output.\n                            'data-row-name': $('<div>').text(integrationName).html(),\n                            'data-row-is-reauthorize': '0',\n                            'data-row-is-token-exchange': data.isTokenExchange\n                        }));\n                        that = this;\n                        $('#integration-popup-container').on('dialogclose', function () {\n                            $('body').trigger('processStart');\n                            window.location.href = that.options.gridUrl;\n\n                            return false;\n                        });\n                    }\n                },\n\n                /** @inheritdoc */\n                error: function (jqXHR, status, error) {\n                    alert({\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\n                    });\n                    window.console && console.log(status + ': ' + error + '\\nResponse text:\\n' + jqXHR.responseText);\n                },\n\n                /** @inheritdoc */\n                complete: function () {\n                    $('body').trigger('processStop');\n                }\n            });\n\n            return true;\n        }\n    });\n\n    /**\n     * @param {*} permissionsDialogUrl\n     * @param {*} tokensDialogUrl\n     * @param {*} tokensExchangeUrl\n     * @param {*} gridUrl\n     * @param {*} successCallbackUrl\n     * @return {Object}\n     * @constructor\n     */\n    window.Integration = function (\n        permissionsDialogUrl,\n        tokensDialogUrl,\n        tokensExchangeUrl,\n        gridUrl,\n        successCallbackUrl\n    ) {\n        var url = {\n            permissions: permissionsDialogUrl,\n            tokens: tokensDialogUrl,\n            tokensExchange: tokensExchangeUrl,\n            grid: gridUrl\n        },\n        IdentityLogin = {\n            win: null,\n            strLocation: null,\n            checker: null,\n            isCalledBack: false,\n            //Info popup dialog. Should be hidden when login window is closed\n            jqInfoDialog: $('#integration-popup-container'),\n            successCallbackUrl: successCallbackUrl,\n            Constants: {\n                /*\n                 This interval is set such that it adjusts to the child window closing timeout of 1000 ms. This will\n                 give the checker function enough time to detect if the successCallback has been invoked\n                 */\n                CHECKER_INTERVAL: 500,\n                //Login screen size plus some buffer\n                WIDTH: 680,\n                HEIGHT: 510,\n                // subtract pixels(30) and width(680) from screen width to move popup from extreme left\n                LEFT: screen.width - 680 - 30,\n                // subtract pixels(300) and height(300) from screen height to move from top\n                TOP: screen.height - 510 - 300\n            },\n\n            /**\n             * @param {*} identityCallbackUrl\n             * @param {*} consumerKey\n             * @param {*} jqInfoDialog\n             */\n            invokePopup: function (identityCallbackUrl, consumerKey, jqInfoDialog) {\n                var param;\n\n                // Callback should be invoked only once. Reset callback flag on subsequent invocations.\n                IdentityLogin.isCalledBack = false;\n                IdentityLogin.jqInfoDialog = jqInfoDialog;\n                param = $.param({\n                    'oauth_consumer_key': consumerKey,\n                    'success_call_back': IdentityLogin.successCallbackUrl\n                });\n                IdentityLogin.win = window.open(identityCallbackUrl + '?' + param, '',\n                    'top=' + IdentityLogin.Constants.TOP +\n                        ', left=' + IdentityLogin.Constants.LEFT +\n                        ', width=' + IdentityLogin.Constants.WIDTH +\n                        ', height=' + IdentityLogin.Constants.HEIGHT + ',scrollbars=no');\n\n                if (IdentityLogin.checker != null) {\n                    //Clear any previous check\n                    clearInterval(IdentityLogin.checker);\n                }\n                //Polling to detect url of the child window.\n                IdentityLogin.checker = setInterval(\n                    IdentityLogin.fnCheckLocation, IdentityLogin.Constants.CHECKER_INTERVAL\n                );\n            },\n\n            /**\n             * Function to check the location of the child popup window.\n             * Once detected if the callback is successful, parent window will be reloaded\n             */\n            fnCheckLocation: function () {\n                if (IdentityLogin.win == null) {\n                    return;\n                }\n                // Check to see if the location has changed.\n                try {\n                    //Is the success callback invoked\n                    if (IdentityLogin.win.closed ||\n                        IdentityLogin.win.location.href == IdentityLogin.successCallbackUrl //eslint-disable-line eqeqeq\n                    ) {\n                        //Stop the polling\n                        clearInterval(IdentityLogin.checker);\n                        $('body').trigger('processStart');\n                        //Check for window closed\n                        window.location.href = url.grid;\n                        IdentityLogin.jqInfoDialog.modal('closeModal');\n                    }\n                } catch (e) {\n                    //squash. In case Window closed without success callback, clear polling\n                    if (IdentityLogin.win.closed) {\n                        IdentityLogin.jqInfoDialog.modal('closeModal');\n                        clearInterval(IdentityLogin.checker);\n                    }\n\n                    return;\n                }\n            }\n        },\n\n        /**\n         * @param {Object} popupWindow\n         * @return {Boolean}\n         */\n        isPopupBlocked = function (popupWindow) {\n            try {\n                popupWindow.focus();\n            } catch (e) {\n                alert({\n                    content: $.mage.__('Popup Blocker is enabled! Please add this site to your exception list.')\n                });\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * @param {*} dialog\n         * @param {*} title\n         * @param {*} okButton\n         * @param {*} ajaxUrl\n         * @private\n         */\n        _showPopup = function (dialog, title, okButton, ajaxUrl) {\n            $.ajax({\n                url: ajaxUrl,\n                cache: false,\n                data: {\n                    'form_key': window.FORM_KEY\n                },\n                method: 'GET',\n\n                /** @inheritdoc */\n                beforeSend: function () {\n                    // Show the spinner\n                    $('body').trigger('processStart');\n                },\n\n                /** @inheritdoc */\n                success: function (result) {\n                    var redirect = result._redirect,\n                        identityLinkUrl, consumerKey, popupHtml, popup, resultObj, buttons, dialogProperties;\n\n                    if (redirect) {\n                        window.location.href = redirect;\n\n                        return;\n                    }\n\n                    identityLinkUrl = null;\n                    consumerKey = null;\n                    popupHtml = null;\n                    popup = $('#integration-popup-container');\n\n                    try {\n                        resultObj = typeof result === 'string' ?\n                            JSON.parse(result) :\n                            result;\n\n                        identityLinkUrl = resultObj['identity_link_url'];\n                        consumerKey      = resultObj['oauth_consumer_key'];\n                        popupHtml       = resultObj['popup_content'];\n\n                    } catch (e) {\n                        //This is expected if result is not json. Do nothing.\n                    }\n\n                    if (identityLinkUrl && consumerKey && popupHtml) {\n                        IdentityLogin.invokePopup(identityLinkUrl, consumerKey, popup);\n\n                        if (isPopupBlocked(IdentityLogin.win)) {\n                            return;\n                        }\n                    } else {\n                        popupHtml = result;\n                    }\n\n                    if (popup.length === 0) {\n                        popup = $('<div/>');\n                    }\n                    popup.html(popupHtml);\n\n                    buttons = [];\n                    dialogProperties = {\n                        title: title,\n                        type: 'slide',\n                        dialogClass: dialog == 'permissions' ? 'integration-dialog' : 'integration-dialog no-close' //eslint-disable-line\n                    };\n\n                    // Add confirmation button to the list of dialog buttons. okButton not set for tokenExchange dialog\n                    if (okButton) {\n                        buttons.push(okButton);\n                    }\n                    // Add button only if its not empty\n                    if (buttons.length > 0) {\n                        dialogProperties.buttons = buttons;\n                    }\n                    popup.modal(dialogProperties);\n                    popup.modal('openModal');\n                },\n\n                /** @inheritdoc */\n                error: function (jqXHR, status, error) {\n                    alert({\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\n                    });\n                    window.console && console.log(status + ': ' + error + '\\nResponse text:\\n' + jqXHR.responseText);\n                },\n\n                /** @inheritdoc */\n                complete: function () {\n                    // Hide the spinner\n                    $('body').trigger('processStop');\n                }\n            });\n        };\n\n        return {\n            popup: {\n                /**\n                 * @param {*} ctx\n                 */\n                show: function (ctx) {\n                    var dialog = $(ctx).attr('data-row-dialog'),\n                        isReauthorize = $(ctx).attr('data-row-is-reauthorize'),\n                        isTokenExchange = $(ctx).attr('data-row-is-token-exchange'),\n                        integrationId, ajaxUrl, integrationName, okButton;\n\n                    if (!url.hasOwnProperty(dialog)) {\n                        throw 'Invalid dialog type';\n                    }\n\n                    integrationId = $(ctx).attr('data-row-id');\n\n                    if (!integrationId) {\n                        throw 'Unable to find integration ID';\n                    }\n\n                    // Replace placeholders in URL\n                    ajaxUrl = url[dialog].replace(':id', integrationId).replace(':isReauthorize', isReauthorize);\n\n                    try {\n                        // Get integration name either from current element or from neighbor column\n                        integrationName = $(ctx).attr('data-row-name') ||\n                            $(ctx).parents('tr').find('.col-name').html().trim();\n\n                        if (integrationName.indexOf('<span') > -1) {\n                            // Remove unsecure URL warning from popup window title if it is present\n                            integrationName = integrationName.substring(0, integrationName.indexOf('<span'));\n                        }\n                    } catch (e) {\n                        throw 'Unable to find integration name';\n                    }\n\n                    okButton = {\n                        permissions: {\n                            text: isReauthorize == '1' ? $.mage.__('Reauthorize') : $.mage.__('Allow'), //eslint-disable-line\n                            'class': 'action-primary',\n                            attr: {\n                                'data-row-id': integrationId,\n                                'data-row-name': integrationName,\n                                'data-row-dialog': isTokenExchange == '1' ? 'tokensExchange' : 'tokens', //eslint-disable-line\n                                'data-row-is-reauthorize': isReauthorize,\n                                'data-row-is-token-exchange': isTokenExchange\n                            },\n\n                            /**\n                             * Click.\n                             */\n                            click: function () {\n                                // Find the 'Allow' button and clone - it has all necessary data, but is going to be\n                                // destroyed along with the current dialog\n                                var context = this.modal.find('button.action-primary').clone(true);\n\n                                this.closeModal();\n                                this.modal.remove();\n                                // Make popup out of data we saved from 'Allow' button\n                                window.integration.popup.show(context);\n                            }\n                        },\n                        tokens: {\n                            text: $.mage.__('Done'),\n                            'class': 'action-primary',\n\n                            /**\n                             * Click.\n                             */\n                            click: function () {\n                                // Integration has been activated at the point of generating tokens\n                                window.location.href = url.grid;\n                            }\n                        }\n                    };\n\n                    _showPopup(dialog, integrationName, okButton[dialog], ajaxUrl);\n                }\n            }\n        };\n    };\n\n    return $.mage.integration;\n});\n","Webkul_MpRmaSystem/requirejs-config.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_MpRmaSystem\n * @author    Webkul\n * @copyright Copyright (c) Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\nvar config = {\n    map: {\n        '*': {\n            rma: 'Webkul_MpRmaSystem/js/rma',\n        }\n    }\n};\n","Webkul_MpRmaSystem/js/rma.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_MpRmaSystem\n * @author    Webkul\n * @copyright Copyright (c) Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    \"jquery\",\n    \"Magento_Ui/js/modal/alert\",\n    \"jquery/ui\",\n], function ($, alertBox) {\n    'use strict';\n    $.widget('mprma.rma', {\n        options: {},\n        _create: function () {\n            var self = this;\n            var totalPrice = self.options.totalPrice;\n            var totalPriceWithCurrency = self.options.totalPriceWithCurrency;\n            var errorMsg = self.options.errorMsg;\n            var warningLable = self.options.warningLable;\n            $(document).ready(function () {\n                $(\".wk-refund-amount\").html(totalPriceWithCurrency);\n                $(\".wk-refundable-amount\").html(totalPriceWithCurrency);\n                $(\".wk-refund-block\").removeClass(\"wk-display-none\");\n                $(\"#payment_type\").change(function (e) {\n                    var val = $(this).val();\n                    if (val == 1) {\n                        $(\".wk-partial-amount\").hide();\n                        $(\"#partial_amount\").removeClass(\"required-entry\");\n                    } else {\n                        $(\".wk-partial-amount\").show();\n                        $(\"#partial_amount\").addClass(\"required-entry\");\n                    }\n                });\n                $(\"#seller_status\").change(function (e) {\n                    var val = $(this).val();\n                    if (val == 5) {\n                        $(\"#tracking_id_div\").css('display', 'inline-block');\n                        $(\"#tracking_id\").attr('data-validate', '{required:true}');\n                    } else {\n                        $(\"#tracking_id_div\").css('display', 'none');\n                        $(\"#tracking_id\").removeAttr('data-validate');\n                    }\n                });\n\n                $(\"#wk_rma_conversation_form\").submit(function(e){\n                    var form = $(\"#wk_rma_conversation_form\");\n                    if($('#wk_rma_conversation_form').valid()){\n                        if (form.data('submitted') === true) {\n                            e.preventDefault();\n                          } else {\n                            form.data('submitted', true);\n                          }\n                        $('body').trigger('processStart');\n                    }\n\n                });\n\n                $(\".wk-refund\").click(function (e) {\n                    if ($('#wk_rma_refund_form').valid()) {\n                        var price = $(\"#partial_amount\").val();\n                        if (price > totalPrice) {\n                            alertBox({\n                                title: warningLable,\n                                content: \"<div class='wk-mprma-warning-content'>\"+errorMsg+\"</div>\",\n                                actions: {\n                                    always: function (){}\n                                }\n                            });\n                            return false;\n                        }\n                    }\n                });\n                $(\"#wk-refund-online\").click(function() {\n                    $(\".payment_status\").val(0);\n                });\n            });\n        }\n    });\n    return $.mprma.rma;\n});\n","Webkul_MpRmaSystem/js/edit.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_MpRmaSystem\n * @author    Webkul\n * @copyright Copyright (c) Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    \"jquery\"\n], function ($) {\n    'use strict';\n    $.widget('mprma.edit', {\n        options: {},\n        _create: function () {\n            $(document).ready(function () {\n                $('#save').on('click',function(){\n                    if($('#edit_form').valid()){\n                        $('body').trigger('processStart');\n                    }\n                    \n                });\n            });\n        }\n    });\n    return $.mprma.edit;\n});\n","Webkul_MpRmaSystem/js/grid/columns/customer.js":"define([\n    './column',\n    'jquery',\n], function (Column, $) {\n    'use strict';\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        getFieldHandler: function (row) {\n            return false;\n        }\n    });\n});\n","Webkul_MpRmaSystem/js/grid/columns/column.js":"define([\n    'underscore',\n    'uiRegistry',\n    'mageUtils',\n    'uiElement'\n], function (_, registry, utils, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            headerTmpl: 'ui/grid/columns/text',\n            bodyTmpl: 'ui/grid/cells/text',\n            disableAction: false,\n            controlVisibility: true,\n            sortable: true,\n            sorting: false,\n            visible: true,\n            draggable: true,\n            fieldClass: {},\n            ignoreTmpls: {\n                fieldAction: true\n            },\n            statefull: {\n                visible: true,\n                sorting: true\n            },\n            imports: {\n                exportSorting: 'sorting'\n            },\n            listens: {\n                '${ $.provider }:params.sorting.field': 'onSortChange'\n            },\n            modules: {\n                source: '${ $.provider }'\n            }\n        },\n\n        /**\n         * Initializes column component.\n         *\n         * @returns {Column} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initFieldClass();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Column} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track([\n                    'visible',\n                    'sorting',\n                    'disableAction'\n                ])\n                .observe([\n                    'dragging'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Extends list of field classes.\n         *\n         * @returns {Column} Chainable.\n         */\n        initFieldClass: function () {\n            _.extend(this.fieldClass, {\n                _dragging: this.dragging\n            });\n\n            return this;\n        },\n\n        /**\n         * Applies specified stored state of a column or one of its' properties.\n         *\n         * @param {String} state - Defines what state should be used: saved or default.\n         * @param {String} [property] - Defines what columns' property should be applied.\n         *      If not specified, then all columns stored properties will be used.\n         * @returns {Column} Chainable.\n         */\n        applyState: function (state, property) {\n            var namespace = this.storageConfig.root;\n\n            if (property) {\n                namespace += '.' + property;\n            }\n\n            this.storage('applyStateOf', state, namespace);\n\n            return this;\n        },\n\n        /**\n         * Sets columns' sorting. If column is currently sorted,\n         * than its' direction will be toggled.\n         *\n         * @param {*} [enable=true] - If false, than sorting will\n         *      be removed from a column.\n         * @returns {Column} Chainable.\n         */\n        sort: function (enable) {\n            if (!this.sortable) {\n                return this;\n            }\n\n            enable !== false ?\n                this.toggleSorting() :\n                this.sorting = false;\n\n            return this;\n        },\n\n        /**\n         * Sets descending columns' sorting.\n         *\n         * @returns {Column} Chainable.\n         */\n        sortDescending: function () {\n            if (this.sortable) {\n                this.sorting = 'desc';\n            }\n\n            return this;\n        },\n\n        /**\n         * Sets ascending columns' sorting.\n         *\n         * @returns {Column} Chainable.\n         */\n        sortAscending: function () {\n            if (this.sortable) {\n                this.sorting = 'asc';\n            }\n\n            return this;\n        },\n\n        /**\n         * Toggles sorting direction.\n         *\n         * @returns {Column} Chainable.\n         */\n        toggleSorting: function () {\n            this.sorting === 'asc' ?\n                this.sortDescending() :\n                this.sortAscending();\n\n            return this;\n        },\n\n        /**\n         * Checks if column is sorted.\n         *\n         * @returns {Boolean}\n         */\n        isSorted: function () {\n            return !!this.sorting;\n        },\n\n        /**\n         * Exports sorting data to the dataProvider if\n         * sorting of a column is enabled.\n         */\n        exportSorting: function () {\n            if (!this.sorting) {\n                return;\n            }\n\n            this.source('set', 'params.sorting', {\n                field: this.index,\n                direction: this.sorting\n            });\n        },\n\n        /**\n         * Checks if column has an assigned action that will\n         * be performed when clicking on one of its' fields.\n         *\n         * @returns {Boolean}\n         */\n        hasFieldAction: function () {\n            return !!this.fieldAction;\n        },\n\n        /**\n         * Applies action described in a 'fieldAction' property.\n         *\n         * @param {Number} rowIndex - Index of a row which initiates action.\n         * @returns {Column} Chainable.\n         *\n         * @example Example of fieldAction definition, which is equivalent to\n         *      referencing to external component named 'listing.multiselect'\n         *      and calling its' method 'toggleSelect' with params [rowIndex, true] =>\n         *\n         *      {\n         *          provider: 'listing.multiselect',\n         *          target: 'toggleSelect',\n         *          params: ['${ $.$data.rowIndex }', true]\n         *      }\n         */\n        applyFieldAction: function (rowIndex) {\n            var action = this.fieldAction,\n                callback;\n\n            if (!this.hasFieldAction() || this.disableAction) {\n                return this;\n            }\n\n            action = utils.template(action, {\n                column: this,\n                rowIndex: rowIndex\n            }, true);\n\n            callback = this._getFieldCallback(action);\n\n            if (_.isFunction(callback)) {\n                callback();\n            }\n\n            return this;\n        },\n\n        /**\n         * Returns field action handler if it was specified.\n         *\n         * @param {Object} record - Record object with which action is associated.\n         * @returns {Function|Undefined}\n         */\n        getFieldHandler: function (record) {\n            if (this.hasFieldAction()) {\n                return this.applyFieldAction.bind(this, record._rowIndex);\n            }\n        },\n\n        /**\n         * Creates action callback based on its' data.\n         *\n         * @param {Object} action - Actions' object.\n         * @returns {Function|Boolean} Callback function or false\n         *      value if it was impossible create a callback.\n         */\n        _getFieldCallback: function (action) {\n            var args     = action.params || [],\n                callback = action.target;\n\n            if (action.provider && action.target) {\n                args.unshift(action.target);\n\n                callback = registry.async(action.provider);\n            }\n\n            if (!_.isFunction(callback)) {\n                return false;\n            }\n\n            return function () {\n                callback.apply(callback, args);\n            };\n        },\n\n        /**\n         * Ment to preprocess data associated with a current columns' field.\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {String}\n         */\n        getLabel: function (record) {\n            return record[this.index];\n        },\n\n        /**\n         * Returns list of classes that should be applied to a field.\n         *\n         * @returns {Object}\n         */\n        getFieldClass: function () {\n            return this.fieldClass;\n        },\n\n        /**\n         * Returns path to the columns' header template.\n         *\n         * @returns {String}\n         */\n        getHeader: function () {\n            return this.headerTmpl;\n        },\n\n        /**\n         * Returns path to the columns' body template.\n         *\n         * @returns {String}\n         */\n        getBody: function () {\n            return this.bodyTmpl;\n        },\n\n        /**\n         * Listener of the providers' sorting state changes.\n         *\n         * @param {Srting} field - Field by which current sorting is performed.\n         */\n        onSortChange: function (field) {\n            if (field !== this.index) {\n                this.sort(false);\n            }\n        }\n    });\n});\n","Magento_Sales/order/giftoptions_tooltip.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'prototype'\n], function () {\n    'use strict';\n\n    var GiftOptionsTooltip = Class.create();\n\n    GiftOptionsTooltip.prototype = {\n        _tooltipLines: [],\n        _tooltipWindow: null,\n        _tooltipWindowContent: null,\n        _targetLinks: [],\n        _eventMouseOver: null,\n        _eventMouseOut: null,\n        _styleOptions: null,\n        _tooltipContentLoaderFunction: null,\n\n        /**\n         * Initialize tooltip object\n         */\n        initialize: function () {\n            var options = Object.extend({\n                'delta_x': 30,\n                'delta_y': 0,\n                zindex: 1000\n            });\n\n            this._styleOptions = options;\n            this._eventMouseOver = this.showTooltip.bindAsEventListener(this);\n            this._eventMouseOut = this.hideTooltip.bindAsEventListener(this);\n        },\n\n        /**\n         * Set gift options tooltip window\n         *\n         * @param {String} windowId\n         * @param {String} contentId\n         *\n         * @return boolean success\n         */\n        setTooltipWindow: function (windowId, contentId) {\n            if (!$(windowId) || !$(contentId)) {\n                return false;\n            }\n            this._tooltipWindow = $(windowId);\n            this._tooltipWindowContent = $(contentId);\n            $(document.body).insert({\n                bottom: this._tooltipWindow\n            });\n            this.hideTooltip();\n\n            return true;\n        },\n\n        /**\n         * Add tooltip to specified link\n         *\n         * @param {String} linkId\n         * @param {String} itemId - identifier of the item related to link\n         *\n         * @return boolean success\n         */\n        addTargetLink: function (linkId, itemId) {\n            if ($(linkId)) {\n                this._targetLinks[linkId] = [];\n                this._targetLinks[linkId].object = $(linkId);\n                this._targetLinks[linkId].itemId = itemId;\n                this._registerEvents(this._targetLinks[linkId].object);\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Detach event listeners from target links when tooltip is destroyed\n         */\n        destroy: function () {\n            var linkId;\n\n            for (linkId in this._targetLinks) { //eslint-disable-line guard-for-in\n                Event.stopObserving(this._targetLinks[linkId].object, 'mouseover', this._eventMouseOver);\n                Event.stopObserving(this._targetLinks[linkId].object, 'mouseout', this._eventMouseOut);\n            }\n        },\n\n        /**\n         *  Register event listeners\n         *\n         *  @param {HTMLElement} element\n         */\n        _registerEvents: function (element) {\n            Event.observe(element, 'mouseover', this._eventMouseOver);\n            Event.observe(element, 'mouseout', this._eventMouseOut);\n        },\n\n        /**\n         * Move tooltip to mouse position\n         *\n         * @param {Prototype.Event} event\n         */\n        _moveTooltip: function (event) {\n            var mouseX, mouseY;\n\n            Event.stop(event);\n            mouseX = Event.pointerX(event);\n            mouseY = Event.pointerY(event);\n\n            this.setStyles(mouseX, mouseY);\n        },\n\n        /**\n         * Show tooltip\n         *\n         * @param {Object} event\n         *\n         * @return boolean success\n         */\n        showTooltip: function (event) {\n            var link, itemId, tooltipContent;\n\n            Event.stop(event);\n\n            if (this._tooltipWindow) {\n                link = Event.element(event);\n                itemId = this._targetLinks[link.id].itemId;\n                tooltipContent = '';\n\n                if (Object.isFunction(this._tooltipContentLoaderFunction)) {\n                    tooltipContent = this._tooltipContentLoaderFunction(itemId);\n                }\n\n                if (tooltipContent != '') { //eslint-disable-line eqeqeq\n                    this._updateTooltipWindowContent(tooltipContent);\n                    this._moveTooltip(event);\n                    new Element.show(this._tooltipWindow);\n\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Set tooltip window styles\n         *\n         * @param {Number} x\n         * @param {Number} y\n         */\n        setStyles: function (x, y) {\n            Element.setStyle(this._tooltipWindow, {\n                position: 'absolute',\n                top: y + this._styleOptions['delta_y'] + 'px',\n                left: x + this._styleOptions['delta_x'] + 'px',\n                zindex: this._styleOptions.zindex\n            });\n        },\n\n        /**\n         * Hide tooltip\n         */\n        hideTooltip: function () {\n            if (this._tooltipWindow) {\n                new Element.hide(this._tooltipWindow);\n            }\n        },\n\n        /**\n         * Set gift options tooltip content loader function\n         * This function should accept at least one parameter that will serve as an item ID\n         *\n         * @param {Function} loaderFunction - loader function\n         */\n        setTooltipContentLoaderFunction: function (loaderFunction) {\n            this._tooltipContentLoaderFunction = loaderFunction;\n        },\n\n        /**\n         * Update tooltip window content\n         *\n         * @param {String} content\n         */\n        _updateTooltipWindowContent: function (content) {\n            this._tooltipWindowContent.update(content);\n        }\n    };\n\n    window.giftOptionsTooltip = new GiftOptionsTooltip();\n});\n","Magento_Sales/order/view/post-wrapper.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/confirm',\n    'mage/translate'\n], function ($, confirm) {\n    'use strict';\n\n    /**\n     * @param {String} url\n     * @returns {jQuery}\n     */\n    function getForm(url) {\n        return $('<form>', {\n            'action': url,\n            'method': 'POST'\n        }).append($('<input>', {\n            'name': 'form_key',\n            'value': window.FORM_KEY,\n            'type': 'hidden'\n        }));\n    }\n\n    $('#order-view-cancel-button').click(function () {\n        var msg = $.mage.__('Are you sure you want to cancel this order?'),\n            url = $('#order-view-cancel-button').data('url');\n\n        confirm({\n            'content': msg,\n            'actions': {\n\n                /**\n                 * 'Confirm' action handler.\n                 */\n                confirm: function () {\n                    getForm(url).appendTo('body').trigger('submit');\n                }\n            }\n        });\n\n        return false;\n    });\n\n    $('#order-view-hold-button').click(function () {\n        var url = $('#order-view-hold-button').data('url');\n\n        getForm(url).appendTo('body').trigger('submit');\n    });\n\n    $('#order-view-unhold-button').click(function () {\n        var url = $('#order-view-unhold-button').data('url');\n\n        getForm(url).appendTo('body').trigger('submit');\n    });\n});\n","Magento_Sales/order/create/giftmessage.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/********************* GIFT OPTIONS POPUP ***********************/\n/********************* GIFT OPTIONS SET ***********************/\n\ndefine([\n    'jquery',\n    'jquery/ui',\n    'mage/translate',\n    'mage/validation',\n    'prototype'\n], function (jQuery) {\n\n    window.giftMessagesController = {\n        toogleRequired: function (source, objects) {\n            if (!$(source).value.blank()) {\n                objects.each(function (item) {\n                    $(item).addClassName('required-entry');\n                    var label = findFieldLabel($(item));\n\n                    if (label) {\n                        var span = label.down('span');\n\n                        if (!span) {\n                            Element.insert(label, {\n                                bottom: '&nbsp;<span class=\"required\">*</span>'\n                            });\n                        }\n                    }\n                });\n            } else {\n                objects.each(function (item) {\n                    if ($(source).formObj && $(source).formObj.validator) {\n                        $(source).formObj.validator.reset(item);\n                    }\n                    $(item).removeClassName('required-entry');\n                    var label = findFieldLabel($(item));\n\n                    if (label) {\n                        var span = label.down('span');\n\n                        if (span) {\n                            Element.remove(span);\n                        }\n                    }\n                    // Hide validation advices if exist\n                    if ($(item) && $(item).advices) {\n                        $(item).advices.each(function (pair) {\n                            if (pair.value != null) pair.value.hide();\n                        });\n                    }\n                });\n            }\n        },\n        toogleGiftMessage: function (container) {\n            if (!$(container).toogleGiftMessage) {\n                $(container).toogleGiftMessage = true;\n                $(this.getFieldId(container, 'edit')).show();\n                $(container).down('.action-link').addClassName('open');\n                $(container).down('.default-text').hide();\n                $(container).down('.close-text').show();\n            } else {\n                $(container).toogleGiftMessage = false;\n                $(this.getFieldId(container, 'message')).formObj = $(this.getFieldId(container, 'form'));\n                var form = jQuery('#' + this.getFieldId(container, 'form'));\n\n                jQuery('#' + this.getFieldId(container, 'form')).validate({\n                    errorClass: 'mage-error'\n                });\n\n                if (!form.valid()) {\n                    return false;\n                }\n\n                new Ajax.Request($(this.getFieldId(container, 'form')).action, {\n                    parameters: Form.serialize($(this.getFieldId(container, 'form')), true),\n                    loaderArea: container,\n                    onComplete: function (transport) {\n\n                        $(container).down('.action-link').removeClassName('open');\n                        $(container).down('.default-text').show();\n                        $(container).down('.close-text').hide();\n                        $(this.getFieldId(container, 'edit')).hide();\n\n                        if (transport.responseText.match(/YES/g)) {\n                            $(container).down('.default-text').down('.edit').show();\n                            $(container).down('.default-text').down('.add').hide();\n                        } else {\n                            $(container).down('.default-text').down('.add').show();\n                            $(container).down('.default-text').down('.edit').hide();\n                        }\n\n                    }.bind(this)\n                });\n            }\n\n            return false;\n        },\n        saveGiftMessage: function (container) {\n            $(this.getFieldId(container, 'message')).formObj = $(this.getFieldId(container, 'form'));\n\n            var form = jQuery('#' + this.getFieldId(container, 'form'));\n\n            form.validate({\n                errorClass: 'mage-error'\n            });\n\n            if (!form.valid()) {\n                return;\n            }\n\n            new Ajax.Request($(this.getFieldId(container, 'form')).action, {\n                parameters: Form.serialize($(this.getFieldId(container, 'form')), true),\n                loaderArea: container,\n                onSuccess: function (response) {\n                    var message = '<div class=\"messages\"><div class=\"message message-success success\">' +\n                        response.responseText +\n                        '<div data-ui-id=\"messages-message-success\"></div></div></div>';\n\n                    jQuery('#messages').html(message);\n                    jQuery(document).scrollTop(0);\n                }\n            });\n        },\n        getFieldId: function (container, name) {\n            return container + '_' + name;\n        }\n    };\n\n    function findFieldLabel(field) {\n        var tdField = $(field).up('td');\n\n        if (tdField) {\n            var tdLabel = tdField.previous('td');\n\n            if (tdLabel) {\n                var label = tdLabel.down('label');\n\n                if (label) {\n                    return label;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    window.findFieldLabel = findFieldLabel;\n\n    window.GiftOptionsPopup = Class.create();\n    GiftOptionsPopup.prototype = {\n        //giftOptionsWindowMask: null,\n        giftOptionsWindow: null,\n\n        initialize: function () {\n            $$('.action-link').each(function (el) {\n                Event.observe(el, 'click', this.showItemGiftOptions.bind(this));\n            }, this);\n\n            // Move gift options popup to start of body, because soon it will contain FORM tag that can break DOM layout if within other FORM\n            var oldPopupContainer = $('gift_options_configure');\n\n            if (oldPopupContainer) {\n                oldPopupContainer.remove();\n            }\n\n            var newPopupContainer = $('gift_options_configure_new');\n\n            $(document.body).insert({\n                top: newPopupContainer\n            });\n            newPopupContainer.id = 'gift_options_configure';\n\n            // Put controls container inside a FORM tag so we can use Validator\n            var form = new Element('form', {\n                action: '#', id: 'gift_options_configuration_form', method: 'post'\n            });\n            var formContents = $('gift_options_form_contents');\n\n            if (formContents) {\n                formContents.parentNode.appendChild(form);\n                form.appendChild(formContents);\n            }\n\n            this.giftOptionsWindow = $('gift_options_configure');\n\n            jQuery(this.giftOptionsWindow).dialog({\n                autoOpen:   false,\n                modal:      true,\n                resizable:  false,\n                dialogClass: 'gift-options-popup',\n                minWidth:   500,\n                width:      '75%',\n                position: {\n                    my: 'left+12.5% top',\n                    at: 'center top',\n                    of: 'body'\n                },\n                open: function () {\n                    jQuery(this).closest('.ui-dialog').addClass('ui-dialog-active');\n\n                    var topMargin = jQuery(this).closest('.ui-dialog').children('.ui-dialog-titlebar').outerHeight() + 30;\n\n                    jQuery(this).closest('.ui-dialog').css('margin-top', topMargin);\n                },\n                close: function () {\n                    jQuery(this).closest('.ui-dialog').removeClass('ui-dialog-active');\n                }\n            });\n        },\n\n        showItemGiftOptions: function (event) {\n            var element = Event.element(event).id;\n            var itemId = element.sub('gift_options_link_', '');\n\n            jQuery(this.giftOptionsWindow).dialog('open');\n\n            this.setTitle(itemId);\n\n            Event.observe($('gift_options_cancel_button'), 'click', this.onCloseButton.bind(this));\n            Event.observe($('gift_options_ok_button'), 'click', this.onOkButton.bind(this));\n            Event.stop(event);\n        },\n\n        setTitle: function (itemId) {\n            var productTitleElement = $('order_item_' + itemId + '_title');\n            var productTitle = '';\n\n            if (productTitleElement) {\n                productTitle = productTitleElement.innerHTML;\n            }\n            jQuery(this.giftOptionsWindow).dialog({\n                title: jQuery.mage.__('Gift Options for ') + productTitle\n            });\n        },\n\n        onOkButton: function () {\n            var giftOptionsForm = jQuery('#gift_options_configuration_form');\n\n            if (!giftOptionsForm.validate({\n                errorClass: 'mage-error'\n            }).valid()) {\n                return false;\n            }\n\n            if (jQuery.isFunction(giftOptionsForm[0].reset)) {\n                giftOptionsForm[0].reset();\n            }\n            this.closeWindow();\n\n            return true;\n        },\n\n        onCloseButton: function () {\n            this.closeWindow();\n        },\n\n        closeWindow: function () {\n            jQuery(this.giftOptionsWindow).dialog('close');\n        }\n    };\n\n    window.GiftMessageSet = Class.create();\n\n    GiftMessageSet.prototype = {\n        destPrefix: 'current_item_giftmessage_',\n        sourcePrefix: 'giftmessage_',\n        fields: ['sender', 'recipient', 'message'],\n        isObserved: false,\n        callback: null,\n\n        initialize: function () {\n            $$('.action-link').each(function (el) {\n                Event.observe(el, 'click', this.setData.bind(this));\n            }, this);\n        },\n\n        setData: function (event) {\n            var element = Event.element(event).id;\n\n            this.id = element.sub('gift_options_link_', '');\n\n            if ($('gift-message-form-data-' + this.id)) {\n                this.fields.each(function (el) {\n                    if ($(this.sourcePrefix + this.id + '_' + el) && $(this.destPrefix + el)) {\n                        $(this.destPrefix + el).value = $(this.sourcePrefix + this.id + '_' + el).value;\n                    }\n                }, this);\n                $('gift_options_giftmessage').show();\n            } else if ($('gift_options_giftmessage')) {\n                $('gift_options_giftmessage').hide();\n            }\n\n            if (!this.isObserved) {\n                Event.observe('gift_options_ok_button', 'click', this.saveData.bind(this));\n                this.isObserved = true;\n            }\n        },\n\n        prepareSaveData: function () {\n            var hash = $H();\n\n            $$('div[id^=gift_options_data_]').each(function (el) {\n                var fields = el.select('input', 'select', 'textarea');\n                var data = Form.serializeElements(fields, true);\n\n                hash.update(data);\n            });\n\n            return hash;\n        },\n\n        setSaveCallback: function (callback) {\n            if (typeof callback == 'function') {\n                this.callback = callback;\n            }\n        },\n\n        saveData: function (event) {\n            this.fields.each(function (el) {\n                if ($(this.sourcePrefix + this.id + '_' + el) && $(this.destPrefix + el)) {\n                    $(this.sourcePrefix + this.id + '_' + el).value = $(this.destPrefix + el).value;\n                }\n            }, this);\n\n            if ($(this.sourcePrefix + this.id + '_form')) {\n                $(this.sourcePrefix + this.id + '_form').request();\n            } else if (typeof order != 'undefined') {\n                var data = this.prepareSaveData();\n                var self = this;\n\n                jQuery.when(order.loadArea(['items'], true, data.toObject())).done(function () {\n                    if (self.callback !== null) {\n                        self.callback();\n                    }\n                });\n            }\n        }\n    };\n\n});\n","Magento_Sales/order/create/scripts.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/confirm',\n    'Magento_Ui/js/modal/alert',\n    'mage/template',\n    'text!Magento_Sales/templates/order/create/shipping/reload.html',\n    'text!Magento_Sales/templates/order/create/payment/reload.html',\n    'mage/translate',\n    'prototype',\n    'Magento_Catalog/catalog/product/composite/configure',\n    'Magento_Ui/js/lib/view/utils/async'\n], function (jQuery, confirm, alert, template, shippingTemplate, paymentTemplate) {\n\n    window.AdminOrder = new Class.create();\n\n    AdminOrder.prototype = {\n        initialize: function (data) {\n            if (!data) data = {};\n            this.loadBaseUrl = false;\n            this.customerId = data.customer_id ? data.customer_id : false;\n            this.storeId = data.store_id ? data.store_id : false;\n            this.quoteId = data['quote_id'] ? data['quote_id'] : false;\n            this.currencyId = false;\n            this.currencySymbol = data.currency_symbol ? data.currency_symbol : '';\n            this.addresses = data.addresses ? data.addresses : $H({});\n            this.shippingAsBilling = data.shippingAsBilling ? data.shippingAsBilling : false;\n            this.gridProducts = $H({});\n            this.gridProductsGift = $H({});\n            this.billingAddressContainer = '';\n            this.shippingAddressContainer = '';\n            this.isShippingMethodReseted = data.shipping_method_reseted ? data.shipping_method_reseted : false;\n            this.overlayData = $H({});\n            this.giftMessageDataChanged = false;\n            this.productConfigureAddFields = {};\n            this.productPriceBase = {};\n            this.collectElementsValue = true;\n            this.isOnlyVirtualProduct = false;\n            this.excludedPaymentMethods = [];\n            this.summarizePrice = true;\n            this.selectAddressEvent = false;\n            this.shippingTemplate = template(shippingTemplate, {\n                data: {\n                    title: jQuery.mage.__('Shipping Method'),\n                    linkText: jQuery.mage.__('Get shipping methods and rates')\n                }\n            });\n            this.paymentTemplate = template(paymentTemplate, {\n                data: {\n                    title: jQuery.mage.__('Payment Method'),\n                    linkText: jQuery.mage.__('Get available payment methods')\n                }\n            });\n\n            jQuery.async('#order-items', (function () {\n                this.dataArea = new OrderFormArea('data', $(this.getAreaId('data')), this);\n                this.itemsArea = Object.extend(new OrderFormArea('items', $(this.getAreaId('items')), this), {\n                    addControlButton: function (button) {\n                        var controlButtonArea = $(this.node).select('.actions')[0];\n                        if (typeof controlButtonArea != 'undefined') {\n                            var buttons = controlButtonArea.childElements();\n                            for (var i = 0; i < buttons.length; i++) {\n                                if (buttons[i].innerHTML.include(button.getLabel())) {\n                                    return;\n                                }\n                            }\n                            button.insertIn(controlButtonArea, 'top');\n                        }\n                    }\n                });\n\n                var searchButtonId = 'add_products',\n                    searchButton = new ControlButton(jQuery.mage.__('Add Products'), searchButtonId),\n                    searchAreaId = this.getAreaId('search');\n                searchButton.onClick = function () {\n                    $(searchAreaId).show();\n                    var el = this;\n                    window.setTimeout(function () {\n                        el.remove();\n                    }, 10);\n                };\n\n                jQuery.async('#order-items .admin__page-section-title', (function () {\n                    this.dataArea.onLoad = this.dataArea.onLoad.wrap(function (proceed) {\n                        proceed();\n                        this._parent.itemsArea.setNode($(this._parent.getAreaId('items')));\n                        this._parent.itemsArea.onLoad();\n                    });\n\n                    this.itemsArea.onLoad = this.itemsArea.onLoad.wrap(function (proceed) {\n                        proceed();\n                        if ($(searchAreaId) && !jQuery('#' + searchAreaId).is(':visible') && !$(searchButtonId)) {\n                            this.addControlButton(searchButton);\n                        }\n                    });\n                    this.areasLoaded();\n                    this.itemsArea.onLoad();\n\n                }).bind(this));\n\n            }).bind(this));\n\n            jQuery('#edit_form')\n                .on('submitOrder', function () {\n                    jQuery(this).trigger('realOrder');\n                })\n                .on('realOrder', this._realSubmit.bind(this));\n        },\n\n        areasLoaded: function () {\n        },\n\n        itemsLoaded: function () {\n        },\n\n        dataLoaded: function () {\n            this.dataShow();\n        },\n\n        setLoadBaseUrl: function (url) {\n            this.loadBaseUrl = url;\n        },\n\n        setAddresses: function (addresses) {\n            this.addresses = addresses;\n        },\n\n        addExcludedPaymentMethod: function (method) {\n            this.excludedPaymentMethods.push(method);\n        },\n\n        setCustomerId: function (id) {\n            this.customerId = id;\n            this.loadArea('header', true);\n            $(this.getAreaId('header')).callback = 'setCustomerAfter';\n            $('back_order_top_button').hide();\n            $('reset_order_top_button').show();\n        },\n\n        setCustomerAfter: function () {\n            this.customerSelectorHide();\n            if (this.storeId) {\n                $(this.getAreaId('data')).callback = 'dataLoaded';\n                this.loadArea(['data'], true);\n            } else {\n                this.storeSelectorShow();\n            }\n        },\n\n        setStoreId: function (id) {\n            this.storeId = id;\n            this.storeSelectorHide();\n            this.sidebarShow();\n            //this.loadArea(['header', 'sidebar','data'], true);\n            this.dataShow();\n            this.loadArea(['header', 'data'], true);\n        },\n\n        setCurrencyId: function (id) {\n            this.currencyId = id;\n            //this.loadArea(['sidebar', 'data'], true);\n            this.loadArea(['data'], true);\n        },\n\n        setCurrencySymbol: function (symbol) {\n            this.currencySymbol = symbol;\n        },\n\n        selectAddress: function (el, container) {\n            var id = el.value;\n            if (id.length == 0) {\n                id = '0';\n            }\n\n            this.selectAddressEvent = true;\n            if (this.addresses[id]) {\n                this.fillAddressFields(container, this.addresses[id]);\n            } else {\n                this.fillAddressFields(container, {});\n            }\n            this.selectAddressEvent = false;\n\n            var data = this.serializeData(container);\n            data[el.name] = id;\n\n            this.resetPaymentMethod();\n            if (this.isShippingField(container) && !this.isShippingMethodReseted) {\n                this.resetShippingMethod(data);\n            } else {\n                this.saveData(data);\n            }\n        },\n\n        /**\n         * Checks if the field belongs to the shipping address.\n         *\n         * @param {String} fieldId\n         * @return {Boolean}\n         */\n        isShippingField: function (fieldId) {\n            if (this.shippingAsBilling) {\n                return fieldId.include('billing');\n            }\n\n            return fieldId.include('shipping');\n        },\n\n        /**\n         * Checks if the field belongs to the billing address.\n         *\n         * @param {String} fieldId\n         * @return {Boolean}\n         */\n        isBillingField: function (fieldId) {\n            return fieldId.include('billing');\n        },\n\n        /**\n         * Binds events on container form fields.\n         *\n         * @param {String} container\n         */\n        bindAddressFields: function (container) {\n            var fields = $(container).select('input', 'select', 'textarea'),\n                i;\n\n            for (i = 0; i < fields.length; i++) {\n                jQuery(fields[i]).change(this.changeAddressField.bind(this));\n            }\n        },\n\n        /**\n         * Triggers on each form's element changes.\n         *\n         * @param {Event} event\n         */\n        changeAddressField: function (event) {\n            var field = Event.element(event),\n                re = /[^\\[]*\\[([^\\]]*)_address\\]\\[([^\\]]*)\\](\\[(\\d)\\])?/,\n                matchRes = field.name.match(re),\n                type,\n                name,\n                data,\n                resetShipping = false;\n\n            if (!matchRes) {\n                return;\n            }\n\n            type = matchRes[1];\n            name = matchRes[2];\n\n            if (this.isBillingField(field.id)) {\n                data = this.serializeData(this.billingAddressContainer);\n            } else {\n                data = this.serializeData(this.shippingAddressContainer);\n            }\n            data = data.toObject();\n\n            if (type === 'billing' && this.shippingAsBilling) {\n                this.syncAddressField(this.shippingAddressContainer, field.name, field);\n                resetShipping = true;\n            }\n\n            if (type === 'shipping' && !this.shippingAsBilling) {\n                resetShipping = true;\n            }\n\n            if (resetShipping) {\n                data['reset_shipping'] = true;\n            }\n\n            data['order[' + type + '_address][customer_address_id]'] = null;\n            data['shipping_as_billing'] = +this.shippingAsBilling;\n\n            if (name === 'customer_address_id') {\n                data['order[' + type + '_address][customer_address_id]'] =\n                    $('order-' + type + '_address_customer_address_id').value;\n            }\n\n            if (name === 'country_id' && this.selectAddressEvent === false) {\n                $('order-' + type + '_address_customer_address_id').value = '';\n            }\n\n            this.resetPaymentMethod();\n\n            if (data['reset_shipping']) {\n                this.resetShippingMethod();\n            } else {\n                this.saveData(data);\n\n                if (name === 'country_id' || name === 'customer_address_id') {\n                    this.loadArea(['shipping_method', 'billing_method', 'totals', 'items'], true, data);\n                }\n            }\n        },\n\n        /**\n         * Set address container form field value.\n         *\n         * @param {String} container - container ID\n         * @param {String} fieldName - form field name\n         * @param {*} fieldValue - form field value\n         */\n        syncAddressField: function (container, fieldName, fieldValue) {\n            var syncName;\n\n            if (this.isBillingField(fieldName)) {\n                syncName = fieldName.replace('billing', 'shipping');\n            }\n\n            $(container).select('[name=\"' + syncName + '\"]').each(function (element) {\n                if (~['input', 'textarea', 'select'].indexOf(element.tagName.toLowerCase())) {\n                    if (element.type === \"checkbox\") {\n                        element.checked = fieldValue.checked;\n                    } else {\n                        element.value = fieldValue.value;\n                    }\n                }\n            });\n        },\n\n        fillAddressFields: function (container, data) {\n            var regionIdElem = false;\n            var regionIdElemValue = false;\n\n            var fields = $(container).select('input', 'select', 'textarea');\n            var re = /[^\\[]*\\[[^\\]]*\\]\\[([^\\]]*)\\](\\[(\\d)\\])?/;\n            for (var i = 0; i < fields.length; i++) {\n                // skip input type file @Security error code: 1000\n                if (fields[i].tagName.toLowerCase() == 'input' && fields[i].type.toLowerCase() == 'file') {\n                    continue;\n                }\n                var matchRes = fields[i].name.match(re);\n                if (matchRes === null) {\n                    continue;\n                }\n                var name = matchRes[1];\n                var index = matchRes[3];\n\n                if (index) {\n                    // multiply line\n                    if (data[name]) {\n                        var values = data[name].split(\"\\n\");\n                        fields[i].value = values[index] ? values[index] : '';\n                    } else {\n                        fields[i].value = '';\n                    }\n                } else if (fields[i].tagName.toLowerCase() == 'select' && fields[i].multiple) {\n                    // multiselect\n                    if (data[name]) {\n                        values = [''];\n                        if (Object.isString(data[name])) {\n                            values = data[name].split(',');\n                        } else if (Object.isArray(data[name])) {\n                            values = data[name];\n                        }\n                        fields[i].setValue(values);\n                    }\n                } else {\n                    fields[i].setValue(data[name] ? data[name] : '');\n                }\n\n                if (fields[i].changeUpdater) {\n                    fields[i].changeUpdater();\n                }\n\n                if (name == 'region' && data['region_id'] && !data['region']) {\n                    fields[i].value = data['region_id'];\n                }\n\n                jQuery(fields[i]).trigger('change');\n            }\n        },\n\n        disableShippingAddress: function (flag) {\n            this.shippingAsBilling = flag;\n            if ($('order-shipping_address_customer_address_id')) {\n                $('order-shipping_address_customer_address_id').disabled = flag;\n            }\n            if ($(this.shippingAddressContainer)) {\n                var dataFields = $(this.shippingAddressContainer).select('input', 'select', 'textarea');\n                for (var i = 0; i < dataFields.length; i++) {\n                    dataFields[i].disabled = flag;\n\n                    if (this.isOnlyVirtualProduct) {\n                        dataFields[i].setValue('');\n                    }\n                }\n                var buttons = $(this.shippingAddressContainer).select('button');\n                // Add corresponding class to buttons while disabling them\n                for (i = 0; i < buttons.length; i++) {\n                    buttons[i].disabled = flag;\n                    if (flag) {\n                        buttons[i].addClassName('disabled');\n                    } else {\n                        buttons[i].removeClassName('disabled');\n                    }\n                }\n            }\n        },\n\n        /**\n         * Equals shipping and billing addresses.\n         *\n         * @param {Boolean} flag\n         */\n        setShippingAsBilling: function (flag) {\n            var data,\n                areasToLoad = ['billing_method', 'shipping_address', 'shipping_method', 'totals', 'giftmessage'];\n\n            this.disableShippingAddress(flag);\n            data = this.serializeData(flag ? this.billingAddressContainer : this.shippingAddressContainer);\n            data = data.toObject();\n            data['shipping_as_billing'] = flag ? 1 : 0;\n            data['reset_shipping'] = 1;\n            this.loadArea(areasToLoad, true, data);\n        },\n\n        /**\n         * Replace shipping method area.\n         */\n        resetShippingMethod: function () {\n            if (!this.isOnlyVirtualProduct) {\n                $(this.getAreaId('shipping_method')).update(this.shippingTemplate);\n            }\n        },\n\n        /**\n         * Replace payment method area.\n         */\n        resetPaymentMethod: function () {\n            $(this.getAreaId('billing_method')).update(this.paymentTemplate);\n        },\n\n        /**\n         * Loads shipping options according to address data.\n         *\n         * @return {Boolean}\n         */\n        loadShippingRates: function () {\n            var addressContainer = this.shippingAsBilling ?\n                'billingAddressContainer' :\n                'shippingAddressContainer',\n                data = this.serializeData(this[addressContainer]).toObject();\n\n            data['collect_shipping_rates'] = 1;\n            this.isShippingMethodReseted = false;\n            this.loadArea(['shipping_method', 'totals'], true, data);\n\n            return false;\n        },\n\n        setShippingMethod: function (method) {\n            var data = {};\n\n            data['order[shipping_method]'] = method;\n            this.loadArea([\n                'shipping_method',\n                'totals',\n                'billing_method'\n            ], true, data);\n        },\n\n        /**\n         * Updates available payment\n         * methods list according to order data.\n         *\n         * @return boolean\n         */\n        loadPaymentMethods: function () {\n            var data = this.serializeData(this.billingAddressContainer).toObject();\n\n            this.loadArea(['billing_method', 'totals'], true, data);\n\n            return false;\n        },\n\n        switchPaymentMethod: function(method){\n            if (this.paymentMethod !== method) {\n                jQuery('#edit_form')\n                    .off('submitOrder')\n                    .on('submitOrder', function(){\n                        jQuery(this).trigger('realOrder');\n                    });\n            }\n            jQuery('#edit_form').trigger('changePaymentMethod', [method]);\n            this.setPaymentMethod(method);\n            var data = {};\n            data['order[payment_method]'] = method;\n            this.loadArea(['card_validation'], true, data);\n        },\n\n        setPaymentMethod: function (method) {\n            if (this.paymentMethod && $('payment_form_' + this.paymentMethod)) {\n                var form = 'payment_form_' + this.paymentMethod;\n                [form + '_before', form, form + '_after'].each(function (el) {\n                    var block = $(el);\n                    if (block) {\n                        block.hide();\n                        block.select('input', 'select', 'textarea').each(function (field) {\n                            field.disabled = true;\n                        });\n                    }\n                });\n            }\n\n            if (!this.paymentMethod || method) {\n                $('order-billing_method_form').select('input', 'select', 'textarea').each(function (elem) {\n                    if (elem.type != 'radio') elem.disabled = true;\n                })\n            }\n\n            if ($('payment_form_' + method)) {\n                jQuery('#' + this.getAreaId('billing_method')).trigger('contentUpdated');\n                this.paymentMethod = method;\n                var form = 'payment_form_' + method;\n                [form + '_before', form, form + '_after'].each(function (el) {\n                    var block = $(el);\n                    if (block) {\n                        block.show();\n                        block.select('input', 'select', 'textarea').each(function (field) {\n                            field.disabled = false;\n                            if (!el.include('_before') && !el.include('_after') && !field.bindChange) {\n                                field.bindChange = true;\n                                field.paymentContainer = form;\n                                field.method = method;\n                                field.observe('change', this.changePaymentData.bind(this))\n                            }\n                        }, this);\n                    }\n                }, this);\n            }\n        },\n\n        changePaymentData: function (event) {\n            var elem = Event.element(event);\n            if (elem && elem.method) {\n                var data = this.getPaymentData(elem.method);\n                if (data) {\n                    this.loadArea(['card_validation'], true, data);\n                } else {\n                    return;\n                }\n            }\n        },\n\n        getPaymentData: function (currentMethod) {\n            if (typeof (currentMethod) == 'undefined') {\n                if (this.paymentMethod) {\n                    currentMethod = this.paymentMethod;\n                } else {\n                    return false;\n                }\n            }\n            if (this.isPaymentValidationAvailable() == false) {\n                return false;\n            }\n            var data = {};\n            var fields = $('payment_form_' + currentMethod).select('input', 'select');\n            for (var i = 0; i < fields.length; i++) {\n                data[fields[i].name] = fields[i].getValue();\n            }\n            if ((typeof data['payment[cc_type]']) != 'undefined' && (!data['payment[cc_type]'] || !data['payment[cc_number]'])) {\n                return false;\n            }\n            return data;\n        },\n\n        applyCoupon: function (code) {\n            this.loadArea(['items', 'shipping_method', 'totals', 'billing_method'], true, {\n                'order[coupon][code]': code,\n                reset_shipping: 0\n            });\n            this.orderItemChanged = false;\n            jQuery('html, body').animate({\n                scrollTop: 0\n            });\n        },\n\n        addProduct: function (id) {\n            this.loadArea(['items', 'shipping_method', 'totals', 'billing_method'], true, {\n                add_product: id,\n                reset_shipping: true\n            });\n        },\n\n        removeQuoteItem: function (id) {\n            this.loadArea(['items', 'shipping_method', 'totals', 'billing_method'], true,\n                {remove_item: id, from: 'quote', reset_shipping: true});\n        },\n\n        moveQuoteItem: function (id, to) {\n            this.loadArea(['sidebar_' + to, 'items', 'shipping_method', 'totals', 'billing_method'], this.getAreaId('items'),\n                {move_item: id, to: to, reset_shipping: true});\n        },\n\n        productGridShow: function (buttonElement) {\n            this.productGridShowButton = buttonElement;\n            Element.hide(buttonElement);\n            this.showArea('search');\n        },\n\n        productGridRowInit: function (grid, row) {\n            var checkbox = $(row).select('.checkbox')[0];\n            var inputs = $(row).select('.input-text');\n            if (checkbox && inputs.length > 0) {\n                checkbox.inputElements = inputs;\n                for (var i = 0; i < inputs.length; i++) {\n                    var input = inputs[i];\n                    input.checkboxElement = checkbox;\n\n                    var product = this.gridProducts.get(checkbox.value);\n                    if (product) {\n                        var defaultValue = product[input.name];\n                        if (defaultValue) {\n                            if (input.name == 'giftmessage') {\n                                input.checked = true;\n                            } else {\n                                input.value = defaultValue;\n                            }\n                        }\n                    }\n\n                    input.disabled = !checkbox.checked || input.hasClassName('input-inactive');\n\n                    Event.observe(input, 'keyup', this.productGridRowInputChange.bind(this));\n                    Event.observe(input, 'change', this.productGridRowInputChange.bind(this));\n                }\n            }\n        },\n\n        productGridRowInputChange: function (event) {\n            var element = Event.element(event);\n            if (element && element.checkboxElement && element.checkboxElement.checked) {\n                if (element.name != 'giftmessage' || element.checked) {\n                    this.gridProducts.get(element.checkboxElement.value)[element.name] = element.value;\n                } else if (element.name == 'giftmessage' && this.gridProducts.get(element.checkboxElement.value)[element.name]) {\n                    delete (this.gridProducts.get(element.checkboxElement.value)[element.name]);\n                }\n            }\n        },\n\n        productGridRowClick: function (grid, event) {\n            var trElement = Event.findElement(event, 'tr');\n            var qtyElement = trElement.select('input[name=\"qty\"]')[0];\n            var eventElement = Event.element(event);\n\n            if (eventElement.tagName === 'LABEL'\n                && trElement.querySelector('#' + eventElement.htmlFor)\n                && trElement.querySelector('#' + eventElement.htmlFor).type === 'checkbox'\n            ) {\n                event.stopPropagation();\n                trElement.querySelector('#' + eventElement.htmlFor).trigger('click');\n                return;\n            }\n\n            var isInputCheckbox = (eventElement.tagName === 'INPUT' && eventElement.type === 'checkbox');\n            var isInputQty = grid.targetElement && grid.targetElement.tagName === 'INPUT' && grid.targetElement.name === 'qty';\n            if (trElement && !isInputQty) {\n                var checkbox = Element.select(trElement, 'input[type=\"checkbox\"]')[0];\n                var confLink = Element.select(trElement, 'a')[0];\n                var priceColl = Element.select(trElement, '.price')[0];\n                if (checkbox) {\n                    // processing non composite product\n                    if (confLink.readAttribute('disabled')) {\n                        var checked = isInputCheckbox ? checkbox.checked : !checkbox.checked;\n                        grid.setCheckboxChecked(checkbox, checked);\n                        // processing composite product\n                    } else if (isInputCheckbox && !checkbox.checked) {\n                        grid.setCheckboxChecked(checkbox, false);\n                        // processing composite product\n                    } else if (!isInputCheckbox || (isInputCheckbox && checkbox.checked)) {\n                        var listType = confLink.readAttribute('list_type');\n                        var productId = confLink.readAttribute('product_id');\n                        if (typeof this.productPriceBase[productId] == 'undefined') {\n                            var priceBase = priceColl.innerHTML.match(/.*?([\\d,]+\\.?\\d*)/);\n                            if (!priceBase) {\n                                this.productPriceBase[productId] = 0;\n                            } else {\n                                this.productPriceBase[productId] = parseFloat(priceBase[1].replace(/,/g, ''));\n                            }\n                        }\n                        productConfigure.setConfirmCallback(listType, function () {\n                            // sync qty of popup and qty of grid\n                            var confirmedCurrentQty = productConfigure.getCurrentConfirmedQtyElement();\n                            if (qtyElement && confirmedCurrentQty && !isNaN(confirmedCurrentQty.value)) {\n                                qtyElement.value = confirmedCurrentQty.value;\n                            }\n                            // calc and set product price\n                            var productPrice = this._calcProductPrice();\n                            if (this._isSummarizePrice()) {\n                                productPrice += this.productPriceBase[productId];\n                            }\n                            productPrice = parseFloat(Math.round(productPrice + \"e+2\") + \"e-2\");\n                            priceColl.innerHTML = this.currencySymbol + productPrice.toFixed(2);\n                            // and set checkbox checked\n                            grid.setCheckboxChecked(checkbox, true);\n                        }.bind(this));\n                        productConfigure.setCancelCallback(listType, function () {\n                            if (!$(productConfigure.confirmedCurrentId) || !$(productConfigure.confirmedCurrentId).innerHTML) {\n                                grid.setCheckboxChecked(checkbox, false);\n                            }\n                        });\n                        productConfigure.setShowWindowCallback(listType, function () {\n                            // sync qty of grid and qty of popup\n                            var formCurrentQty = productConfigure.getCurrentFormQtyElement();\n                            if (formCurrentQty && qtyElement && !isNaN(qtyElement.value)) {\n                                formCurrentQty.value = qtyElement.value;\n                            }\n                        }.bind(this));\n                        productConfigure.showItemConfiguration(listType, productId);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Is need to summarize price\n         */\n        _isSummarizePrice: function (elm) {\n            if (elm && elm.hasAttribute('summarizePrice')) {\n                this.summarizePrice = parseInt(elm.readAttribute('summarizePrice'));\n            }\n            return this.summarizePrice;\n        },\n        /**\n         * Calc product price through its options\n         */\n        _calcProductPrice: function () {\n            var productPrice = 0;\n            var getPriceFields = function (elms) {\n                var productPrice = 0;\n                var getPrice = function (elm) {\n                    var optQty = 1;\n                    if (elm.hasAttribute('qtyId')) {\n                        if (!$(elm.getAttribute('qtyId')).value) {\n                            return 0;\n                        } else {\n                            optQty = parseFloat($(elm.getAttribute('qtyId')).value);\n                        }\n                    }\n                    if (elm.hasAttribute('price') && !elm.disabled) {\n                        return parseFloat(elm.readAttribute('price')) * optQty;\n                    }\n                    return 0;\n                };\n                for (var i = 0; i < elms.length; i++) {\n                    if (elms[i].type == 'select-one' || elms[i].type == 'select-multiple') {\n                        for (var ii = 0; ii < elms[i].options.length; ii++) {\n                            if (elms[i].options[ii].selected) {\n                                if (this._isSummarizePrice(elms[i].options[ii])) {\n                                    productPrice += getPrice(elms[i].options[ii]);\n                                } else {\n                                    productPrice = getPrice(elms[i].options[ii]);\n                                }\n                            }\n                        }\n                    } else if (((elms[i].type == 'checkbox' || elms[i].type == 'radio') && elms[i].checked)\n                        || ((elms[i].type == 'file' || elms[i].type == 'text' || elms[i].type == 'textarea' || elms[i].type == 'hidden')\n                            && Form.Element.getValue(elms[i]))\n                    ) {\n                        if (this._isSummarizePrice(elms[i])) {\n                            productPrice += getPrice(elms[i]);\n                        } else {\n                            productPrice = getPrice(elms[i]);\n                        }\n                    }\n                }\n                return productPrice;\n            }.bind(this);\n            productPrice += getPriceFields($(productConfigure.confirmedCurrentId).getElementsByTagName('input'));\n            productPrice += getPriceFields($(productConfigure.confirmedCurrentId).getElementsByTagName('select'));\n            productPrice += getPriceFields($(productConfigure.confirmedCurrentId).getElementsByTagName('textarea'));\n            return productPrice;\n        },\n\n        productGridCheckboxCheck: function (grid, element, checked) {\n            if (checked) {\n                if (element.inputElements) {\n                    this.gridProducts.set(element.value, {});\n                    var product = this.gridProducts.get(element.value);\n                    for (var i = 0; i < element.inputElements.length; i++) {\n                        var input = element.inputElements[i];\n                        if (!input.hasClassName('input-inactive')) {\n                            input.disabled = false;\n                            if (input.name == 'qty' && !input.value) {\n                                input.value = 1;\n                            }\n                        }\n\n                        if (input.checked || input.name != 'giftmessage') {\n                            product[input.name] = input.value;\n                        } else if (product[input.name]) {\n                            delete (product[input.name]);\n                        }\n                    }\n                }\n            } else {\n                if (element.inputElements) {\n                    for (var i = 0; i < element.inputElements.length; i++) {\n                        element.inputElements[i].disabled = true;\n                    }\n                }\n                this.gridProducts.unset(element.value);\n            }\n            grid.reloadParams = {'products[]': this.gridProducts.keys()};\n        },\n\n        productGridFilterKeyPress: function (grid, event) {\n            var returnKey = parseInt(Event.KEY_RETURN || 13, 10);\n\n            if (event.keyCode === returnKey) {\n                if (typeof event.stopPropagation === 'function') {\n                    event.stopPropagation();\n                }\n\n                if (typeof event.preventDefault === 'function') {\n                    event.preventDefault();\n                }\n            }\n        },\n\n        /**\n         * Submit configured products to quote\n         */\n        productGridAddSelected: function () {\n            if (this.productGridShowButton) Element.show(this.productGridShowButton);\n            var area = ['search', 'items', 'shipping_method', 'totals', 'giftmessage', 'billing_method'];\n            // prepare additional fields and filtered items of products\n            var fieldsPrepare = {};\n            var itemsFilter = [];\n            var products = this.gridProducts.toObject();\n            for (var productId in products) {\n                itemsFilter.push(productId);\n                var paramKey = 'item[' + productId + ']';\n                for (var productParamKey in products[productId]) {\n                    paramKey += '[' + productParamKey + ']';\n                    fieldsPrepare[paramKey] = products[productId][productParamKey];\n                }\n            }\n            this.productConfigureSubmit('product_to_add', area, fieldsPrepare, itemsFilter);\n            productConfigure.clean('quote_items');\n            this.hideArea('search');\n            this.gridProducts = $H({});\n        },\n\n        selectCustomer: function (grid, event) {\n            var element = Event.findElement(event, 'tr');\n            if (element.title) {\n                this.setCustomerId(element.title);\n            }\n        },\n\n        customerSelectorHide: function () {\n            this.hideArea('customer-selector');\n        },\n\n        customerSelectorShow: function () {\n            this.showArea('customer-selector');\n        },\n\n        storeSelectorHide: function () {\n            this.hideArea('store-selector');\n        },\n\n        storeSelectorShow: function () {\n            this.showArea('store-selector');\n        },\n\n        dataHide: function () {\n            this.hideArea('data');\n        },\n\n        dataShow: function () {\n            if ($('submit_order_top_button')) {\n                $('submit_order_top_button').show();\n            }\n            this.showArea('data');\n        },\n\n        clearShoppingCart: function (confirmMessage) {\n            var self = this;\n\n            confirm({\n                content: confirmMessage,\n                actions: {\n                    confirm: function () {\n                        self.collectElementsValue = false;\n                        order.sidebarApplyChanges({'sidebar[empty_customer_cart]': 1});\n                        self.collectElementsValue = true;\n                    }\n                }\n            });\n        },\n\n        sidebarApplyChanges: function (auxiliaryParams) {\n            if ($(this.getAreaId('sidebar'))) {\n                var data = {};\n                if (this.collectElementsValue) {\n                    var elems = $(this.getAreaId('sidebar')).select('input');\n                    for (var i = 0; i < elems.length; i++) {\n                        if (elems[i].getValue()) {\n                            data[elems[i].name] = elems[i].getValue();\n                        }\n                    }\n                }\n                if (auxiliaryParams instanceof Object) {\n                    for (var paramName in auxiliaryParams) {\n                        data[paramName] = String(auxiliaryParams[paramName]);\n                    }\n                }\n                data.reset_shipping = true;\n                this.loadArea(['sidebar', 'items', 'shipping_method', 'billing_method', 'totals', 'giftmessage'], true, data);\n            }\n        },\n\n        sidebarHide: function () {\n            if (this.storeId === false && $('page:left') && $('page:container')) {\n                $('page:left').hide();\n                $('page:container').removeClassName('container');\n                $('page:container').addClassName('container-collapsed');\n            }\n        },\n\n        sidebarShow: function () {\n            if ($('page:left') && $('page:container')) {\n                $('page:left').show();\n                $('page:container').removeClassName('container-collapsed');\n                $('page:container').addClassName('container');\n            }\n        },\n\n        /**\n         * Show configuration of product and add handlers on submit form\n         *\n         * @param productId\n         */\n        sidebarConfigureProduct: function (listType, productId, itemId) {\n            // create additional fields\n            var params = {},\n                isWishlist = !!itemId;\n            params.reset_shipping = true;\n            params.add_product = productId;\n            this.prepareParams(params);\n            for (var i in params) {\n                if (params[i] === null) {\n                    unset(params[i]);\n                } else if (typeof (params[i]) == 'boolean') {\n                    params[i] = params[i] ? 1 : 0;\n                }\n            }\n            var fields = [];\n            for (var name in params) {\n                fields.push(new Element('input', {type: 'hidden', name: name, value: params[name]}));\n            }\n            // add additional fields before triggered submit\n            productConfigure.setBeforeSubmitCallback(listType, function () {\n                productConfigure.addFields(fields);\n            }.bind(this));\n            // response handler\n            productConfigure.setOnLoadIFrameCallback(listType, function (response) {\n                var areas = ['items', 'shipping_method', 'billing_method', 'totals', 'giftmessage'];\n\n                if (!response.ok) {\n                    return;\n                }\n                if (isWishlist) {\n                    this.removeSidebarItem(itemId, 'wishlist').done(function () {\n                        this.loadArea(areas, true);\n                    }.bind(this));\n                } else {\n                    this.loadArea(areas, true);\n                }\n            }.bind(this));\n            // show item configuration\n            itemId = itemId ? itemId : productId;\n            productConfigure.showItemConfiguration(listType, itemId);\n            return false;\n        },\n\n        removeSidebarItem: function (id, from) {\n            return this.loadArea(['sidebar_' + from], 'sidebar_data_' + from, {\n                remove_item: id,\n                from: from\n            });\n        },\n\n        itemsUpdate: function () {\n            var area = ['sidebar', 'items', 'shipping_method', 'billing_method', 'totals', 'giftmessage'];\n            // prepare additional fields\n            var fieldsPrepare = {update_items: 1};\n            var info = $('order-items_grid').select('input', 'select', 'textarea');\n            for (var i = 0; i < info.length; i++) {\n                if (!info[i].disabled && (info[i].type != 'checkbox' || info[i].checked)) {\n                    fieldsPrepare[info[i].name] = info[i].getValue();\n                }\n            }\n            fieldsPrepare = Object.extend(fieldsPrepare, this.productConfigureAddFields);\n            this.productConfigureSubmit('quote_items', area, fieldsPrepare);\n            this.orderItemChanged = false;\n        },\n\n        itemsOnchangeBind: function () {\n            var elems = $('order-items_grid').select('input', 'select', 'textarea');\n            for (var i = 0; i < elems.length; i++) {\n                if (!elems[i].bindOnchange) {\n                    elems[i].bindOnchange = true;\n                    elems[i].observe('change', this.itemChange.bind(this))\n                }\n            }\n        },\n\n        itemChange: function (event) {\n            this.giftmessageOnItemChange(event);\n            this.orderItemChanged = true;\n        },\n\n        /**\n         * Submit batch of configured products\n         *\n         * @param listType\n         * @param area\n         * @param fieldsPrepare\n         * @param itemsFilter\n         */\n        productConfigureSubmit: function (listType, area, fieldsPrepare, itemsFilter) {\n            // prepare loading areas and build url\n            area = this.prepareArea(area);\n            this.loadingAreas = area;\n            var url = this.loadBaseUrl + 'block/' + area + '?isAjax=true';\n\n            // prepare additional fields\n            fieldsPrepare = this.prepareParams(fieldsPrepare);\n            fieldsPrepare.reset_shipping = 1;\n            fieldsPrepare.json = 1;\n\n            // create fields\n            var fields = [];\n            for (var name in fieldsPrepare) {\n                fields.push(new Element('input', {type: 'hidden', name: name, value: fieldsPrepare[name]}));\n            }\n            productConfigure.addFields(fields);\n\n            // filter items\n            if (itemsFilter) {\n                productConfigure.addItemsFilter(listType, itemsFilter);\n            }\n\n            // prepare and do submit\n            productConfigure.addListType(listType, {urlSubmit: url});\n            productConfigure.setOnLoadIFrameCallback(listType, function (response) {\n                this.loadAreaResponseHandler(response);\n            }.bind(this));\n            productConfigure.submit(listType);\n            // clean\n            this.productConfigureAddFields = {};\n        },\n\n        /**\n         * Show configuration of quote item\n         *\n         * @param itemId\n         */\n        showQuoteItemConfiguration: function (itemId) {\n            var listType = 'quote_items';\n            var qtyElement = $('order-items_grid').select('input[name=\"item\\[' + itemId + '\\]\\[qty\\]\"]')[0];\n            productConfigure.setConfirmCallback(listType, function () {\n                // sync qty of popup and qty of grid\n                var confirmedCurrentQty = productConfigure.getCurrentConfirmedQtyElement();\n                if (qtyElement && confirmedCurrentQty && !isNaN(confirmedCurrentQty.value)) {\n                    qtyElement.value = confirmedCurrentQty.value;\n                }\n                this.productConfigureAddFields['item[' + itemId + '][configured]'] = 1;\n                this.itemsUpdate();\n\n            }.bind(this));\n            productConfigure.setShowWindowCallback(listType, function () {\n                // sync qty of grid and qty of popup\n                var formCurrentQty = productConfigure.getCurrentFormQtyElement();\n                if (formCurrentQty && qtyElement && !isNaN(qtyElement.value)) {\n                    formCurrentQty.value = qtyElement.value;\n                }\n            }.bind(this));\n            productConfigure.showItemConfiguration(listType, itemId);\n        },\n\n        accountFieldsBind: function (container) {\n            if ($(container)) {\n                var fields = $(container).select('input', 'select', 'textarea');\n                for (var i = 0; i < fields.length; i++) {\n                    if (fields[i].id == 'group_id') {\n                        fields[i].observe('change', this.accountGroupChange.bind(this))\n                    } else {\n                        fields[i].observe('change', this.accountFieldChange.bind(this))\n                    }\n                }\n            }\n        },\n\n        accountGroupChange: function () {\n            this.loadArea(['data'], true, this.serializeData('order-form_account').toObject());\n        },\n\n        accountFieldChange: function () {\n            this.saveData(this.serializeData('order-form_account'));\n        },\n\n        commentFieldsBind: function (container) {\n            if ($(container)) {\n                var fields = $(container).select('input', 'textarea');\n                for (var i = 0; i < fields.length; i++)\n                    fields[i].observe('change', this.commentFieldChange.bind(this))\n            }\n        },\n\n        commentFieldChange: function () {\n            this.saveData(this.serializeData('order-comment'));\n        },\n\n        giftmessageFieldsBind: function (container) {\n            if ($(container)) {\n                var fields = $(container).select('input', 'textarea');\n                for (var i = 0; i < fields.length; i++)\n                    fields[i].observe('change', this.giftmessageFieldChange.bind(this))\n            }\n        },\n\n        giftmessageFieldChange: function () {\n            this.giftMessageDataChanged = true;\n        },\n\n        giftmessageOnItemChange: function (event) {\n            var element = Event.element(event);\n            if (element.name.indexOf(\"giftmessage\") != -1 && element.type == \"checkbox\" && !element.checked) {\n                var messages = $(\"order-giftmessage\").select('textarea');\n                var name;\n                for (var i = 0; i < messages.length; i++) {\n                    name = messages[i].id.split(\"_\");\n                    if (name.length < 2) continue;\n                    if (element.name.indexOf(\"[\" + name[1] + \"]\") != -1 && messages[i].value != \"\") {\n                        alert({\n                            content: \"First, clean the Message field in Gift Message form\"\n                        });\n                        element.checked = true;\n                    }\n                }\n            }\n        },\n\n        loadArea: function (area, indicator, params) {\n            var deferred = new jQuery.Deferred();\n            var url = this.loadBaseUrl;\n            if (area) {\n                area = this.prepareArea(area);\n                url += 'block/' + area;\n            }\n            if (indicator === true) indicator = 'html-body';\n            params = this.prepareParams(params);\n            params.json = true;\n            if (!this.loadingAreas) this.loadingAreas = [];\n            if (indicator) {\n                this.loadingAreas = area;\n                new Ajax.Request(url, {\n                    parameters: params,\n                    loaderArea: indicator,\n                    onSuccess: function (transport) {\n                        var response = transport.responseText.evalJSON();\n                        this.loadAreaResponseHandler(response);\n                        deferred.resolve();\n                    }.bind(this)\n                });\n            } else {\n                new Ajax.Request(url, {\n                    parameters: params,\n                    loaderArea: indicator,\n                    onSuccess: function (transport) {\n                        deferred.resolve();\n                    }\n                });\n            }\n            if (typeof productConfigure != 'undefined' && area instanceof Array && area.indexOf('items') != -1) {\n                productConfigure.clean('quote_items');\n            }\n            return deferred.promise();\n        },\n\n        loadAreaResponseHandler: function (response) {\n            if (response.error) {\n                alert({\n                    content: response.message\n                });\n            }\n            if (response.ajaxExpired && response.ajaxRedirect) {\n                setLocation(response.ajaxRedirect);\n            }\n            if (!this.loadingAreas) {\n                this.loadingAreas = [];\n            }\n            if (typeof this.loadingAreas == 'string') {\n                this.loadingAreas = [this.loadingAreas];\n            }\n            if (this.loadingAreas.indexOf('message') == -1) {\n                this.loadingAreas.push('message');\n            }\n            if (response.header) {\n                jQuery('.page-actions-inner').attr('data-title', response.header);\n            }\n\n            for (var i = 0; i < this.loadingAreas.length; i++) {\n                var id = this.loadingAreas[i];\n                if ($(this.getAreaId(id))) {\n                    if ((id in response) && id !== 'message' || response[id]) {\n                        $(this.getAreaId(id)).update(response[id]);\n                    }\n                    if ($(this.getAreaId(id)).callback) {\n                        this[$(this.getAreaId(id)).callback]();\n                    }\n                }\n            }\n        },\n\n        prepareArea: function (area) {\n            if (this.giftMessageDataChanged) {\n                return area.without('giftmessage');\n            }\n            return area;\n        },\n\n        saveData: function (data) {\n            this.loadArea(false, false, data);\n        },\n\n        showArea: function (area) {\n            var id = this.getAreaId(area);\n            if ($(id)) {\n                $(id).show();\n                this.areaOverlay();\n            }\n        },\n\n        hideArea: function (area) {\n            var id = this.getAreaId(area);\n            if ($(id)) {\n                $(id).hide();\n                this.areaOverlay();\n            }\n        },\n\n        areaOverlay: function () {\n            $H(order.overlayData).each(function (e) {\n                e.value.fx();\n            });\n        },\n\n        getAreaId: function (area) {\n            return 'order-' + area;\n        },\n\n        prepareParams: function (params) {\n            if (!params) {\n                params = {};\n            }\n            if (!params.customer_id) {\n                params.customer_id = this.customerId;\n            }\n            if (!params.store_id) {\n                params.store_id = this.storeId;\n            }\n            if (!params.currency_id) {\n                params.currency_id = this.currencyId;\n            }\n            if (!params.form_key) {\n                params.form_key = FORM_KEY;\n            }\n\n            if (this.isPaymentValidationAvailable()) {\n                var data = this.serializeData('order-billing_method');\n                if (data) {\n                    data.each(function (value) {\n                        params[value[0]] = value[1];\n                    });\n                }\n            } else {\n                params['payment[method]'] = this.paymentMethod;\n            }\n            return params;\n        },\n\n        /**\n         * Prevent from sending credit card information to server for some payment methods\n         *\n         * @returns {boolean}\n         */\n        isPaymentValidationAvailable: function () {\n            return ((typeof this.paymentMethod) == 'undefined'\n                || this.excludedPaymentMethods.indexOf(this.paymentMethod) == -1);\n        },\n\n        /**\n         * Serializes container form elements data.\n         *\n         * @param {String} container\n         * @return {Object}\n         */\n        serializeData: function (container) {\n            var fields = $(container).select('input', 'select', 'textarea'),\n                data = Form.serializeElements(fields, true);\n\n            return $H(data);\n        },\n\n        toggleCustomPrice: function (checkbox, elemId, tierBlock) {\n            if (checkbox.checked) {\n                $(elemId).disabled = false;\n                $(elemId).show();\n                if ($(tierBlock)) $(tierBlock).hide();\n            } else {\n                $(elemId).disabled = true;\n                $(elemId).hide();\n                if ($(tierBlock)) $(tierBlock).show();\n            }\n        },\n\n        submit: function () {\n            var $editForm = jQuery('#edit_form'),\n                beforeSubmitOrderEvent;\n\n            if ($editForm.valid()) {\n                $editForm.trigger('processStart');\n                beforeSubmitOrderEvent = jQuery.Event('beforeSubmitOrder');\n                $editForm.trigger(beforeSubmitOrderEvent);\n                if (beforeSubmitOrderEvent.result !== false) {\n                    $editForm.trigger('submitOrder');\n                }\n            }\n        },\n\n        _realSubmit: function () {\n            var disableAndSave = function () {\n                disableElements('save');\n                jQuery('#edit_form').on('invalid-form.validate', function () {\n                    enableElements('save');\n                    jQuery('#edit_form').trigger('processStop');\n                    jQuery('#edit_form').off('invalid-form.validate');\n                });\n                jQuery('#edit_form').triggerHandler('save');\n            }\n            if (this.orderItemChanged) {\n                var self = this;\n\n                jQuery('#edit_form').trigger('processStop');\n\n                confirm({\n                    content: jQuery.mage.__('You have item changes'),\n                    actions: {\n                        confirm: function () {\n                            jQuery('#edit_form').trigger('processStart');\n                            disableAndSave();\n                        },\n                        cancel: function () {\n                            self.itemsUpdate();\n                        }\n                    }\n                });\n            } else {\n                disableAndSave();\n            }\n        },\n\n        overlay: function (elId, show, observe) {\n            if (typeof (show) == 'undefined') {\n                show = true;\n            }\n\n            var orderObj = this;\n            var obj = this.overlayData.get(elId);\n            if (!obj) {\n                obj = {\n                    show: show,\n                    el: elId,\n                    order: orderObj,\n                    fx: function (event) {\n                        this.order.processOverlay(this.el, this.show);\n                    }\n                };\n                obj.bfx = obj.fx.bindAsEventListener(obj);\n                this.overlayData.set(elId, obj);\n            } else {\n                obj.show = show;\n                Event.stopObserving(window, 'resize', obj.bfx);\n            }\n\n            Event.observe(window, 'resize', obj.bfx);\n\n            this.processOverlay(elId, show);\n        },\n\n        processOverlay: function (elId, show) {\n            var el = $(elId);\n\n            if (!el) {\n                return;\n            }\n\n            var parentEl = el.up(1);\n            if (show) {\n                parentEl.removeClassName('ignore-validate');\n            } else {\n                parentEl.addClassName('ignore-validate');\n            }\n\n            if (Prototype.Browser.IE) {\n                parentEl.select('select').each(function (elem) {\n                    if (show) {\n                        elem.needShowOnSuccess = false;\n                        elem.style.visibility = '';\n                    } else {\n                        elem.style.visibility = 'hidden';\n                        elem.needShowOnSuccess = true;\n                    }\n                });\n            }\n\n            parentEl.setStyle({position: 'relative'});\n            el.setStyle({\n                display: show ? 'none' : ''\n            });\n        },\n\n        validateVat: function (parameters) {\n            var params = {\n                country: $(parameters.countryElementId).value,\n                vat: $(parameters.vatElementId).value\n            };\n\n            if (this.storeId !== false) {\n                params.store_id = this.storeId;\n            }\n\n            var currentCustomerGroupId = $(parameters.groupIdHtmlId)\n                ? $(parameters.groupIdHtmlId).value : '';\n\n            new Ajax.Request(parameters.validateUrl, {\n                parameters: params,\n                onSuccess: function (response) {\n                    var message = '';\n                    var groupActionRequired = null;\n                    try {\n                        response = response.responseText.evalJSON();\n\n                        if (null === response.group) {\n                            if (true === response.valid) {\n                                message = parameters.vatValidMessage;\n                            } else if (true === response.success) {\n                                message = parameters.vatInvalidMessage.replace(/%s/, params.vat);\n                            } else {\n                                message = parameters.vatValidationFailedMessage;\n                            }\n                        } else {\n                            if (true === response.valid) {\n                                message = parameters.vatValidAndGroupValidMessage;\n                                if (0 === response.group) {\n                                    message = parameters.vatValidAndGroupInvalidMessage;\n                                    groupActionRequired = 'inform';\n                                } else if (currentCustomerGroupId != response.group) {\n                                    message = parameters.vatValidAndGroupChangeMessage;\n                                    groupActionRequired = 'change';\n                                }\n                            } else if (response.success) {\n                                message = parameters.vatInvalidMessage.replace(/%s/, params.vat);\n                                groupActionRequired = 'inform';\n                            } else {\n                                message = parameters.vatValidationFailedMessage;\n                                groupActionRequired = 'inform';\n                            }\n                        }\n                    } catch (e) {\n                        message = parameters.vatValidationFailedMessage;\n                    }\n                    if (null === groupActionRequired) {\n                        alert({\n                            content: message\n                        });\n                    } else {\n                        this.processCustomerGroupChange(\n                            parameters.groupIdHtmlId,\n                            message,\n                            parameters.vatCustomerGroupMessage,\n                            parameters.vatGroupErrorMessage,\n                            response.group,\n                            groupActionRequired\n                        );\n                    }\n                }.bind(this)\n            });\n        },\n\n        processCustomerGroupChange: function (groupIdHtmlId, message, customerGroupMessage, errorMessage, groupId, action) {\n            var groupMessage = '';\n            try {\n                var currentCustomerGroupId = $(groupIdHtmlId).value;\n                var currentCustomerGroupTitle =\n                    $$('#' + groupIdHtmlId + ' > option[value=' + currentCustomerGroupId + ']')[0].text;\n                var customerGroupOption = $$('#' + groupIdHtmlId + ' > option[value=' + groupId + ']')[0];\n                groupMessage = customerGroupMessage.replace(/%s/, customerGroupOption.text);\n            } catch (e) {\n                groupMessage = errorMessage;\n                if (action === 'change') {\n                    message = '';\n                    action = 'inform';\n                }\n            }\n\n            if (action === 'change') {\n                var confirmText = message.replace(/%s/, customerGroupOption.text);\n                confirmText = confirmText.replace(/%s/, currentCustomerGroupTitle);\n                confirm({\n                    content: confirmText,\n                    actions: {\n                        confirm: function() {\n                            $$('#' + groupIdHtmlId + ' option').each(function (o) {\n                                o.selected = o.readAttribute('value') == groupId;\n                            });\n                            this.accountGroupChange();\n                        }.bind(this)\n                    }\n                })\n            } else if (action === 'inform') {\n                alert({\n                    content: message + '\\n' + groupMessage\n                });\n            }\n        }\n    };\n\n    window.OrderFormArea = Class.create();\n    OrderFormArea.prototype = {\n        _name: null,\n        _node: null,\n        _parent: null,\n        _callbackName: null,\n\n        initialize: function (name, node, parent) {\n            if (!node)\n                return;\n            this._name = name;\n            this._parent = parent;\n            this._callbackName = node.callback;\n            if (typeof this._callbackName == 'undefined') {\n                this._callbackName = name + 'Loaded';\n                node.callback = this._callbackName;\n            }\n            parent[this._callbackName] = parent[this._callbackName].wrap((function (proceed) {\n                proceed();\n                this.onLoad();\n            }).bind(this));\n\n            this.setNode(node);\n        },\n\n        setNode: function (node) {\n            if (!node.callback) {\n                node.callback = this._callbackName;\n            }\n            this.node = node;\n        },\n\n        onLoad: function () {\n        }\n    };\n\n    window.ControlButton = Class.create();\n\n    ControlButton.prototype = {\n        _label: '',\n        _node: null,\n\n        initialize: function (label, id) {\n            this._label = label;\n            this._node = new Element('button', {\n                'class': 'action-secondary action-add',\n                'type': 'button'\n            });\n            if (typeof id !== 'undefined') {\n                this._node.setAttribute('id', id)\n            }\n        },\n\n        onClick: function () {\n        },\n\n        insertIn: function (element, position) {\n            var node = Object.extend(this._node),\n                content = {};\n            node.observe('click', this.onClick);\n            node.update('<span>' + this._label + '</span>');\n            content[position] = node;\n            Element.insert(element, content);\n        },\n\n        getLabel: function () {\n            return this._label;\n        }\n    };\n});\n","Magento_Sales/order/create/form.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global AdminOrder */\ndefine([\n    'jquery',\n    'Magento_Sales/order/create/scripts'\n], function (jQuery) {\n    'use strict';\n\n    var $el = jQuery('#edit_form'),\n        config,\n        baseUrl,\n        order,\n        payment;\n\n    if (!$el.length || !$el.data('order-config')) {\n        return;\n    }\n\n    config = $el.data('order-config');\n    baseUrl = $el.data('load-base-url');\n\n    order = new AdminOrder(config);\n    order.setLoadBaseUrl(baseUrl);\n\n    payment = {\n        switchMethod: order.switchPaymentMethod.bind(order)\n    };\n\n    window.order = order;\n    window.payment = payment;\n});\n","Magento_Sales/order/edit/message.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/ui',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.orderEditDialog', {\n        options: {\n            url:     null,\n            message: null,\n            modal:  null\n        },\n\n        /**\n         * @protected\n         */\n        _create: function () {\n            this._prepareDialog();\n        },\n\n        /**\n         * Show modal\n         */\n        showDialog: function () {\n            this.options.dialog.html(this.options.message).modal('openModal');\n        },\n\n        /**\n         * Redirect to edit page\n         */\n        redirect: function () {\n            window.location = this.options.url;\n        },\n\n        /**\n         * Prepare modal\n         * @protected\n         */\n        _prepareDialog: function () {\n            var self = this;\n\n            this.options.dialog = $('<div class=\"ui-dialog-content ui-widget-content\"></div>').modal({\n                type: 'popup',\n                modalClass: 'edit-order-popup',\n                title: $.mage.__('Edit Order'),\n                buttons: [{\n                    text: $.mage.__('Ok'),\n                    'class': 'action-primary',\n\n                    /** @inheritdoc */\n                    click: function () {\n                        self.redirect();\n                    }\n                }]\n            });\n        }\n    });\n\n    return $.mage.orderEditDialog;\n});\n","Magento_Sales/order/edit/address/form.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * Currently Magento App stores both  region_id and region (as text) values.\n     * To prevent missing region (as text) we need to copy it in hidden field.\n     * @param {Array} config\n     * @param {String} element\n     */\n    return function (config, element) {\n        var form = $(element),\n            regionId = form.find('#region_id'),\n\n            /**\n             * Set region callback\n             */\n            setRegion = function () {\n                form.find('#region').val(regionId.filter(':visible').find(':selected').text());\n            };\n\n        if (regionId.is('visible')) {\n            setRegion();\n        }\n\n        regionId.on('change', setRegion);\n        form.find('#country_id').on('change', setRegion);\n    };\n});\n","Magento_Sales/js/bootstrap/order-create-index.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nrequire([\n    'Magento_Sales/order/create/giftmessage'\n]);\n","Magento_Sales/js/bootstrap/order-post-action.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nrequire([\n    'Magento_Sales/order/view/post-wrapper'\n]);\n","Magento_Sales/js/grid/tree-massactions.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    'Magento_Ui/js/grid/tree-massactions'\n], function (_, utils, Massactions) {\n    'use strict';\n\n    return Massactions.extend({\n        /**\n         * Overwrite Default action callback.\n         * Sends selections data with ids\n         * via POST request.\n         *\n         * @param {Object} action - Action data.\n         * @param {Object} data - Selections data.\n         */\n        defaultCallback: function (action, data) {\n            var itemsType = 'selected',\n                selections = {};\n\n            selections[itemsType] = data[itemsType];\n            _.extend(selections, data.params || {});\n            utils.submit({\n                url: action.url,\n                data: selections\n            });\n        }\n    });\n});\n","Magento_InventoryLowQuantityNotificationAdminUi/js/components/use-config-settings.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox'\n], function (checkbox) {\n    'use strict';\n\n    return checkbox.extend({\n        defaults: {\n            valueFromConfig: '',\n            linkedValue: ''\n        },\n\n        /**\n         * @inheritdoc\n         */\n        initObservable: function () {\n            return this\n                ._super()\n                .observe(['valueFromConfig', 'linkedValue']);\n        },\n\n        /**\n         * @inheritdoc\n         */\n        'onCheckedChanged': function (newChecked) {\n            if (newChecked) {\n                this.linkedValue(this.valueFromConfig());\n            }\n\n            this._super(newChecked);\n        },\n\n        /**\n         * @returns {String}\n         */\n        getInitialValue: function () {\n            var values = [this.value(), this.default],\n                value;\n\n            values.some(function (v) {\n                value = v || !!v;\n\n                return value;\n            });\n\n            return this.normalizeData(value);\n        }\n    });\n});\n","Magento_InventoryLowQuantityNotificationAdminUi/js/components/notify-stock-qty.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/abstract'\n], function (AbstractField) {\n    'use strict';\n\n    return AbstractField.extend({\n        defaults: {\n            notifyStockQtyUseDefault: '',\n            manageStock: '',\n            listens: {\n                notifyStockQtyUseDefault: 'onChange',\n                manageStock: 'onChange'\n            }\n        },\n\n        /**\n         * @inheritdoc\n         */\n        initObservable: function () {\n            return this\n                ._super()\n                .observe(['notifyStockQtyUseDefault', 'manageStock']);\n        },\n\n        /**\n         * Disable input when Manage Stock switched off or Notify Quantity Use Default\n         */\n        onChange: function () {\n            this.disabled(\n                this.notifyStockQtyUseDefault() ||\n                this.manageStock()\n            );\n        }\n    });\n});\n","Amasty_ProductAttachment/js/dynamic-rows/filesrows.js":"//TODO rewrite\ndefine([\n    'jquery',\n    'uiRegistry',\n    'prototype',\n    'form',\n    'validation'\n], function (jQuery) {\n    'use strict';\n\n    return function (config) {\n        var attributeOption = {\n            table: $('attribute-options-table'),\n            rendered: 0,\n            template: _.template(config.template),\n            isReadOnly: config.isReadOnly,\n            add: function (data, render) {\n                var element;\n\n                element = this.template({\n                    data: data\n                });\n\n                this.elements += element;\n\n                if (render) {\n                    this.render();\n                }\n            },\n            remove: function (event) {\n                $(Event.findElement(event, 'tr')).remove();\n            },\n            bindRemoveButtons: function () {\n                //update\n                jQuery('#swatch-visual-options-panel').on('click', '.delete-option', this.remove.bind(this));\n            },\n            render: function () {\n                Element.insert($$('[data-role=options-container]')[0], this.elements);\n                this.elements = '';\n            },\n            renderWithDelay: function (data, from, step, delay) {\n                var arrayLength = data.length,\n                    len;\n\n                for (len = from + step; from < len && from < arrayLength; from++) {\n                    this.add(data[from]);\n                }\n                this.render();\n\n                if (from === arrayLength) {\n                    this.rendered = 1;\n                    jQuery('body').trigger('processStop');\n\n                    return true;\n                }\n                setTimeout(this.renderWithDelay.bind(this, data, from, step, delay), delay);\n            }\n        };\n\n        function updateValue()\n        {\n            var files = {};\n            jQuery('#manage-options-panel').find('[data-file-id]').each(function(){\n                files[jQuery(this).attr('data-file-id')] = jQuery(this).val();\n            });\n            jQuery('#' + config.uniqId + 'value').val(JSON.stringify(files).replace(/\\\"/g, '|'));\n        }\n\n        jQuery(document).on('click', '#addSelectedFiles', function () {\n            jQuery('#' + config.uniqId).find('[name=in_files]:checked').each(function() {\n                if (jQuery(this).closest('th').length > 0) {\n                    return true;\n                }\n\n                attributeOption.add({\n                    'file_id': jQuery(this).val(),\n                    'filename': jQuery(this).closest('tr').find('td')[2].innerText,\n                    'label': jQuery(this).closest('tr').find('td')[3].innerText,\n                    'order': ''\n                }, true);\n            });\n            updateValue();\n            setTimeout(function () {\n                jQuery(this).prev().click();\n            }.bind(this), 300);\n        });\n\n        $('manage-options-panel').on('click', '.action-delete', function (event) {\n            attributeOption.remove(event);\n            updateValue();\n        });\n\n        jQuery('#manage-options-panel').on('render', function () {\n            if (attributeOption.rendered) {\n                return false;\n            }\n            jQuery('body').trigger('processStart');\n            attributeOption.renderWithDelay(config.filesData, 0, 100, 300);\n            attributeOption.bindRemoveButtons();\n        });\n\n        if (config.isSortable) {\n            jQuery(function ($) {\n                $('[data-role=options-container]').sortable({\n                    distance: 8,\n                    tolerance: 'pointer',\n                    cancel: 'input, button',\n                    axis: 'y',\n                    update: function () {\n                        $('[data-role=options-container] [data-role=order]').each(function (index, element) {\n                            $(element).val(index + 1);\n                        });\n                        updateValue();\n                    }\n                });\n            });\n        }\n        jQuery(function() {\n            jQuery('#manage-options-panel').trigger('render');\n        });\n    };\n});\n","Amasty_ProductAttachment/js/dynamic-rows/dynamic-rows-grid.js":"/**\n * Missing Prototype library fix\n */\ndefine([\n    'Magento_Ui/js/dynamic-rows/dynamic-rows-grid',\n    'underscore',\n    'prototype'\n], function (dynamicRowsGrid, _) {\n    'use strict';\n\n    return dynamicRowsGrid.extend({\n        _updateData: function (data) {\n            this._super();\n            _.each(this.elems(), function (record) {\n                _.each(record.elems(), function (elem) {\n                   if (_.isFunction(elem.checkState)) {\n                       elem.checkState();\n                   }\n                });\n            });\n        }\n    });\n});\n","Amasty_ProductAttachment/js/dynamic-rows/links-dynamic-rows.js":"define([\n    'Magento_Ui/js/dynamic-rows/dynamic-rows',\n    'uiRegistry',\n    'underscore'\n], function (Dynamicrows, registry, _) {\n    return Dynamicrows.extend({\n        saveLinks: function () {\n            registry.async('index = files')(function (filesContainer) {\n                var data = _.clone(filesContainer.cacheGridData);\n                _.each(this.recordData(), function (record) {\n                    if (!_.isUndefined(record.linkdata)) {\n                        data[data.length] = record.linkdata;\n                    }\n                }.bind(this));\n                this.recordData([]);\n                this.reload();\n                this.showSpinner(false);\n                filesContainer.insertData(data);\n            }.bind(this));\n        }\n    });\n});","Amasty_ProductAttachment/js/dynamic-rows/element/select-label.js":"/**\n * Select Element for dinamic rows\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/form/element/select'\n], function (_, select) {\n    'use strict';\n\n    return select.extend({\n        /**\n         * Replace value id with label text\n         */\n        normalizeData: function () {\n            var value = this._super(),\n                option;\n\n            if (value !== '') {\n                option = this.getOption(value);\n\n                return option && option.label;\n            }\n\n            if (!this.caption()) {\n                return findFirst(this.options);\n            }\n        }\n    });\n});\n","Amasty_ProductAttachment/js/dynamic-rows/element/link-attachment.js":"define([\n    'Magento_Ui/js/form/element/abstract',\n    'jquery',\n    'uiRegistry',\n    'Magento_Ui/js/lib/spinner',\n    'mage/translate'\n], function (Abstract, $, registry, loader, __) {\n    'use strict';\n\n    var newLinksCounter = 1000000;\n\n    return Abstract.extend({\n        validate: function () {\n            var validateStatus = this._super();\n            if (this.hasChanged() && this.value() !== '') {\n                if (validateStatus.valid) {\n                    var formLoader = loader.get(this.ns + '.' + this.ns),\n                        self = this,\n                        validateUrl = $.Deferred();\n                    formLoader.show();\n\n                    $.ajax({\n                        url: this.validationUrl,\n                        data: {'url': this.value()},\n                        dataType: 'json',\n                        success: function (result) {\n                            formLoader.hide();\n                            if (result.status === 'success') {\n\n                                self.source.set(self.parentScope + '.linkdata', {\n                                    file_id: newLinksCounter,\n                                    show_file_id: __('New Link'),\n                                    filename: result.file.filename,\n                                    icon_src: result.file.previewUrl,\n                                    is_visible: \"1\",\n                                    extension: result.file.file_extension,\n                                    label: result.file.filename,\n                                    include_in_order: \"0\",\n                                    customer_groups: \"\",\n                                    link: self.value()\n                                });\n                                validateUrl.resolve({\n                                    valid: true,\n                                    target: self\n                                });\n                                newLinksCounter++;\n                            } else {\n                                self.error(result.message);\n                                self.bubble('error', result.message);\n                                self.source.set('params.invalid', true);\n                                validateUrl.resolve({\n                                    valid: false,\n                                    target: self\n                                });\n                            }\n                        },\n                        complete: function () {\n                            formLoader.hide();\n                            validateUrl.resolve({\n                                valid: false,\n                                target: self\n                            });\n                        }\n                    });\n\n                    return validateUrl.promise();\n                }\n            }\n\n            return validateStatus;\n        }\n    });\n});\n","Amasty_ProductAttachment/js/dynamic-rows/element/multiselect.js":"define([\n    'Magento_Ui/js/form/element/multiselect',\n    'uiRegistry',\n    'underscore'\n], function (Multiselect, registry, _) {\n\n    return Multiselect.extend({\n        defaults: {\n            serviceTemplate: 'ui/form/element/helper/service'\n        },\n        realHasService: true,\n\n        initialize: function() {\n            this._super();\n            this.size = 4;\n        },\n\n        initObservable: function () {\n            this._super();\n\n            this.observe({realHasService : this.realHasService});\n            registry.async(this.provider)(function (provider) {\n                var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                    if (registry.get(this.provider).get(this.dataScope + '_use_defaults')) {\n                        this.disabled(true);\n                    }\n                } else {\n                    this.realHasService(false);\n                }\n            }.bind(this));\n\n            return this;\n        },\n        checkState: function () {\n            registry.async(this.provider)(function (provider) {\n                var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                    if (registry.get(this.provider).get(this.dataScope + '_use_defaults')) {\n                        if (!this.disabled()) {\n                            this.isUseDefault(true);\n                        }\n                    } else {\n                        if (this.disabled()) {\n                            this.isUseDefault(false);\n                        }\n                    }\n                    this.realHasService(true);\n                } else {\n                    this.realHasService(false);\n                }\n            }.bind(this));\n        },\n        toggleUseDefault: function (state) {\n            this._super();\n            registry.async(this.provider)(function (provider) {\n                var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                    provider.set(this.dataScope + '_use_defaults', state);\n                }\n            }.bind(this));\n        },\n        validate: function () {\n            if (!this.disabled()) {\n                this.source.set(this.dataScope + '_output', this.value().join(','));\n            }\n        }\n    });\n});\n","Amasty_ProductAttachment/js/dynamic-rows/element/delete-action.js":"define(\n    [\n        \"Magento_Ui/js/form/element/abstract\",\n        \"uiRegistry\",\n        \"underscore\"\n    ],\n    function (DeleteAction, registry, _) {\n        return DeleteAction.extend({\n            defaults: {\n                links: {\n                    value: false\n                }\n            },\n\n            initObservable: function () {\n                this._super();\n\n                this.checkState();\n\n                return this;\n            },\n            checkState: function () {\n                registry.async(this.provider)(function (provider) {\n                    if (provider.get(this.dataScope + '.not_removable')) {\n                        this.disabled(true);\n                    } else {\n                        this.disabled(false);\n                    }\n                }.bind(this));\n            },\n            deleteRecord: function (index, id) {\n                if (!this.disabled()) {\n                    this.source.set('data.attachments.delete.' + id, true);\n                    if (!_.isUndefined(this.containers[0].containers[0].mappingSettings)) {\n                        this.bubble('deleteRecord', index, id);\n                    } else {\n                        this.containers[0].containers[0].processingDeleteRecord(index, id);\n                    }\n                }\n            }\n        });\n    }\n);\n","Amasty_ProductAttachment/js/dynamic-rows/element/input.js":"define(\n    [\n        \"Magento_Ui/js/form/element/abstract\",\n        \"uiRegistry\"\n    ],\n    function (Element, registry) {\n        return Element.extend({\n            defaults: {\n                serviceTemplate: 'ui/form/element/helper/service'\n            },\n            realHasService: true,\n\n            initObservable: function () {\n                this._super();\n\n                this.observe({realHasService : this.realHasService});\n                registry.async(this.provider)(function (provider) {\n                    var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                    if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                        if (registry.get(this.provider).get(this.dataScope + '_use_defaults')) {\n                            this.disabled(true);\n                        }\n                    } else {\n                        this.realHasService(false);\n                    }\n                }.bind(this));\n\n                return this;\n            },\n            checkState: function () {\n                registry.async(this.provider)(function (provider) {\n                    var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                    if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                        if (registry.get(this.provider).get(this.dataScope + '_use_defaults')) {\n                            if (!this.disabled()) {\n                                this.isUseDefault(true);\n                            }\n                        } else {\n                            if (this.disabled()) {\n                                this.isUseDefault(false);\n                            }\n                        }\n                        this.realHasService(true);\n                    } else {\n                        this.realHasService(false);\n                    }\n                }.bind(this));\n            },\n            toggleUseDefault: function (state) {\n                this._super();\n                registry.async(this.provider)(function (provider) {\n                    var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                    if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                        provider.set(this.dataScope + '_use_defaults', state);\n                    }\n                }.bind(this));\n            }\n        });\n    }\n);\n","Amasty_ProductAttachment/js/dynamic-rows/element/single-checkbox.js":"define(\n    [\n        \"Magento_Ui/js/form/element/single-checkbox\",\n        \"uiRegistry\"\n    ],\n    function (Checkbox, registry) {\n        return Checkbox.extend({\n            defaults: {\n                serviceTemplate: 'ui/form/element/helper/service'\n            },\n            realHasService: true,\n\n            initObservable: function () {\n                this._super();\n\n                this.observe({realHasService : this.realHasService});\n                registry.async(this.provider)(function (provider) {\n                    var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                    if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                        if (registry.get(this.provider).get(this.dataScope + '_use_defaults')) {\n                            this.disabled(true);\n                        }\n                    } else {\n                        this.realHasService(false);\n                    }\n                }.bind(this));\n\n                return this;\n            },\n            checkState: function () {\n                registry.async(this.provider)(function (provider) {\n                    var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                    if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                        if (registry.get(this.provider).get(this.dataScope + '_use_defaults')) {\n                            if (!this.disabled()) {\n                                this.isUseDefault(true);\n                            }\n                        } else {\n                            if (this.disabled()) {\n                                this.isUseDefault(false);\n                            }\n                        }\n                        this.realHasService(true);\n                    } else {\n                        this.realHasService(false);\n                    }\n                }.bind(this));\n            },\n            toggleUseDefault: function (state) {\n                this._super();\n                registry.async(this.provider)(function (provider) {\n                    var useDefaults = provider.get(this.dataScope + '_use_defaults');\n                    if (typeof useDefaults !== 'undefined' && useDefaults !== '') {\n                        provider.set(this.dataScope + '_use_defaults', state);\n                    }\n                }.bind(this));\n            }\n        });\n    }\n);\n","Amasty_ProductAttachment/js/form/validator-rules-mixin.js":"define([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    return function (validator) {\n        var requiredInputRule = validator.getRule('required-entry');\n\n        validator.addRule(\n            'required-entry',\n            function (value) {\n                if (value === null) {\n                    return true;\n                }\n\n                return requiredInputRule.handler(value);\n            },\n            $.mage.__(requiredInputRule.message)\n        );\n\n        return validator;\n    }\n});\n","Amasty_ProductAttachment/js/form/provider.js":"define([\n    'Magento_Ui/js/form/provider'\n], function (Provider) {\n    return Provider.extend({\n        save: function (options) {\n            var data = this.get('data');\n            this.client.save({'filesData': JSON.stringify(data)}, options);\n\n            return this;\n        }\n    });\n});\n","Amasty_ProductAttachment/js/form/form.js":"define([\n    'underscore',\n    'Magento_Ui/js/form/form',\n    'uiRegistry'\n], function (_, Form, registry) {\n    return Form.extend({\n        setAdditionalData: function () {\n            this._super();\n            var generalDataFieldSet = registry.get(this.name + '.general');\n            if (typeof generalDataFieldSet !== 'undefined') {\n                _.each(generalDataFieldSet.elems(), function (elem) {\n                    if (_.isFunction(elem.disabled) && elem.disabled()) {\n                        if (elem.dataType === 'multiselect') {\n                            this.source.set(elem.dataScope + '_output', null);\n                        } else {\n                            this.source.set(elem.dataScope, null);\n                        }\n                    } else if (_.isFunction(elem.elems) && elem.elems()) {\n                        _.each(elem.elems(), function (elem) {\n                            if (_.isFunction(elem.disabled) && elem.disabled()) {\n                                this.source.set(elem.dataScope, null);\n                            }\n                        }, this);\n                    }\n                }, this);\n            }\n\n            return this;\n        }\n    });\n});\n","Amasty_ProductAttachment/js/form/element/file-uploader-simple.js":"define([\n    'Magento_Ui/js/form/element/file-uploader',\n    'underscore',\n    'uiRegistry',\n    'jquery',\n    'mage/translate',\n    'prototype'\n], function (fileUploader, _, registry, $, __) {\n    return fileUploader.extend({\n        newFilesCounter: 500000,\n        getFilePreviewType: function (file) {\n            if (!_.isUndefined(file.previewUrl)) {\n                return 'image';\n            }\n\n            return this._super();\n        },\n        getFileLink: function(file) {\n            return file.url;\n        },\n        getFilePreview: function (file) {\n            if (!_.isUndefined(file.previewUrl)) {\n                return file.previewUrl;\n            }\n\n            return file.url;\n        },\n        addFile: function (file) {\n            registry.async('index = files')(function (filesContainer) {\n                var data = _.clone(filesContainer.cacheGridData);\n\n                data[data.length] = {\n                    file_id: this.newFilesCounter,\n                    show_file_id: __('New File'),\n                    filename: file.filename,\n                    icon_src: file.previewUrl,\n                    is_visible: \"1\",\n                    extension: file.file_extension,\n                    label: file.filename,\n                    include_in_order: \"0\",\n                    customer_groups: \"\",\n                    file: file.file\n                };\n\n                filesContainer.insertData(data);\n                this.newFilesCounter += 1;\n            }.bind(this));\n\n            this._super();\n        },\n        open: function () {\n            $('#' + this.uid).click();\n        }\n    })\n});\n","Amasty_ProductAttachment/js/form/element/link-attachment.js":"define([\n    'Magento_Ui/js/form/element/abstract',\n    'jquery',\n    'uiRegistry',\n    'Magento_Ui/js/lib/spinner'\n], function (Abstract, $, registry, loader) {\n    'use strict';\n\n    return Abstract.extend({\n        validate: function () {\n            var validateStatus = this._super();\n            if (this.hasChanged() && this.value() !== '') {\n                if (validateStatus.valid) {\n                    var formLoader = loader.get(this.ns + '.' + this.ns),\n                        self = this,\n                        validateUrl = $.Deferred();\n                    formLoader.show();\n\n                    $.ajax({\n                        url: this.validationUrl,\n                        data: {'url': this.value()},\n                        dataType: 'json',\n                        success: function (result) {\n                            formLoader.hide();\n                            if (result.status === 'success') {\n                                var fileNameField = registry.get(self.parentName + '.filename_container.filename'),\n                                    labelField = registry.get(self.parentName + '.label');\n\n                                if (typeof fileNameField !== 'undefined' && !fileNameField.value()) {\n                                    fileNameField.value(result.file.filename);\n                                }\n                                if (typeof labelField !== 'undefined' && !labelField.value()) {\n                                    labelField.value(result.file.filename);\n                                }\n                                registry.get(self.parentName + '.filename_container.extension').value(result.file.file_extension);\n                                validateUrl.resolve({\n                                    valid: true,\n                                    target: self\n                                });\n                            } else {\n                                self.error(result.message);\n                                self.bubble('error', result.message);\n                                self.source.set('params.invalid', true);\n                                validateUrl.resolve({\n                                    valid: false,\n                                    target: self\n                                });\n                            }\n                        },\n                        complete: function () {\n                            formLoader.hide();\n                            validateUrl.resolve({\n                                valid: false,\n                                target: self\n                            });\n                        }\n                    });\n\n                    return validateUrl.promise();\n                }\n            }\n\n            return validateStatus;\n        }\n    });\n});\n","Amasty_ProductAttachment/js/form/element/multiselect.js":"define([\n    'Magento_Ui/js/form/element/multiselect',\n    'underscore'\n], function (Multiselect, _) {\n\n    return Multiselect.extend({\n        validate: function () {\n            if (!this.disabled()) {\n                this.source.set(this.dataScope + '_output', this.value().join(','));\n            }\n        }\n    });\n});\n","Amasty_ProductAttachment/js/form/element/file-uploader.js":"define([\n    'Magento_Ui/js/form/element/file-uploader',\n    'underscore',\n    'uiRegistry',\n    'prototype'\n], function (fileUploader, _, registry) {\n    return fileUploader.extend({\n        getFilePreviewType: function (file) {\n            if (!_.isUndefined(file.previewUrl)) {\n                return 'image';\n            }\n\n            return this._super();\n        },\n        getFileLink: function(file) {\n            return file.url;\n        },\n        getFilePreview: function (file) {\n            if (!_.isUndefined(file.previewUrl)) {\n                return file.previewUrl;\n            }\n\n            return file.url;\n        },\n        addFile: function (file) {\n            var fileNameField = registry.get(this.parentName + '.filename_container.filename'),\n                labelField = registry.get(this.parentName + '.label');\n\n            if (typeof fileNameField !== 'undefined' && !fileNameField.value()) {\n                fileNameField.value(file.filename);\n            }\n            if (typeof labelField !== 'undefined' && !labelField.value()) {\n                labelField.value(file.filename);\n            }\n            registry.get(this.parentName + '.filename_container.extension').value(file.file_extension);\n\n            this._super();\n        }\n    })\n});\n","Amasty_ProductAttachment/js/form/element/file-uploader-prototype.js":"define([\n    'Magento_Ui/js/form/element/file-uploader',\n    'prototype'\n], function (fileUploader) {\n    return fileUploader;\n});\n","Magento_InventoryBundleProductAdminUi/js/form/element/quantity-per-source.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'mage/translate',\n    'Magento_Ui/js/form/element/abstract'\n], function ($t, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            elementTmpl: 'Magento_InventoryBundleProductAdminUi/dynamic-rows/cells/cell-source',\n            itemsToDisplay: 3,\n            isFullList: true,\n            showFullListDescription: $t('Show more...'),\n            listens: {\n                value: 'updateItems'\n            }\n        },\n\n        /**\n         * Observe elements.\n         *\n         * @returns {exports}\n         */\n        initObservable: function () {\n            this._super()\n                .observe(['items', 'isFullList']);\n\n            return this;\n        },\n\n        /**\n         * Prepare data to use.\n         *\n         * @param {Object} data\n         * @private\n         */\n        updateItems: function (data) {\n            this.isFullList(data.length > this.itemsToDisplay);\n            this.isFullList() ? this.items(data.slice(0, this.itemsToDisplay)) : this.items(data);\n        }\n    });\n});\n","Magento_InventoryBundleProductAdminUi/js/form/element/grid-column-quantity-per-source.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'mage/translate',\n    'Magento_Ui/js/grid/columns/column'\n], function ($t, Column) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'Magento_InventoryBundleProductAdminUi/grid/column/quantity-per-source',\n            itemsToDisplay: 3,\n            showFullListDescription: $t('Show more...')\n        },\n\n        /**\n         * Get source items from product data.\n         *\n         * @param {Object} rowData\n         * @returns {Array}\n         */\n        getSourceItemsData: function (rowData) {\n            return rowData['quantity_per_source'];\n        }\n    });\n});\n","Magento_Variable/variables.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global Variables, updateElementAtCursor, MagentovariablePlugin, Base64 */\ndefine([\n    'jquery',\n    'mage/backend/notification',\n    'mage/translate',\n    'wysiwygAdapter',\n    'uiRegistry',\n    'mage/apply/main',\n    'mageUtils',\n    'Magento_Variable/js/config-directive-generator',\n    'Magento_Variable/js/custom-directive-generator',\n    'Magento_Ui/js/lib/spinner',\n    'jquery/ui',\n    'prototype',\n    'mage/adminhtml/tools'\n], function (jQuery, notification, $t, wysiwyg, registry, mageApply, utils, configGenerator, customGenerator, loader) {\n    'use strict';\n\n    window.Variables = {\n        textareaElementId: null,\n        variablesContent: null,\n        dialogWindow: null,\n        dialogWindowId: 'variables-chooser',\n        overlayShowEffectOptions: null,\n        overlayHideEffectOptions: null,\n        insertFunction: 'Variables.insertVariable',\n        selectedPlaceholder: null,\n        isEditMode: null,\n        editor: null,\n\n        /**\n         * Initialize Variables handler.\n         *\n         * @param {*} textareaElementId\n         * @param {Function} insertFunction\n         * @param {Object} editor\n         * @param {Object} selectedPlaceholder\n         */\n        init: function (textareaElementId, insertFunction, editor, selectedPlaceholder) {\n            if ($(textareaElementId)) {\n                this.textareaElementId = textareaElementId;\n            }\n\n            if (insertFunction) {\n                this.insertFunction = insertFunction;\n            }\n\n            if (selectedPlaceholder) {\n                this.selectedPlaceholder = selectedPlaceholder;\n            }\n\n            if (editor) {\n                this.editor = editor;\n            }\n        },\n\n        /**\n         * Reset data.\n         */\n        resetData: function () {\n            this.variablesContent = null;\n            this.dialogWindow = null;\n        },\n\n        /**\n         * Open variables chooser slideout.\n         *\n         * @param {Object} variables\n         */\n        openVariableChooser: function (variables) {\n            if (variables) {\n                this.openDialogWindow(variables);\n            }\n        },\n\n        /**\n         * Close variables chooser slideout dialog window.\n         */\n        closeDialogWindow: function () {\n            jQuery('#' + this.dialogWindowId).modal('closeModal');\n        },\n\n        /**\n         * Init ui component grid on the form\n         *\n         * @return void\n         */\n        initUiGrid: function () {\n            mageApply.apply(document.getElementById(this.dialogWindow));\n            jQuery('#' + this.dialogWindowId).applyBindings();\n            loader.get('variables_modal.variables_modal.variables').hide();\n        },\n\n        /**\n         * Open slideout dialog window.\n         *\n         * @param {*} variablesContent\n         * @param {Object} selectedElement\n         */\n        openDialogWindow: function (variablesContent, selectedElement) {\n\n            var html = utils.copy(variablesContent),\n                self = this;\n\n            jQuery('<div id=\"' + this.dialogWindowId + '\">' + html + '</div>').modal({\n                title: self.isEditMode ? $t('Edit Variable') : $t('Insert Variable'),\n                type: 'slide',\n                buttons: self.getButtonsConfig(self.isEditMode),\n\n                /**\n                 * @param {jQuery.Event} e\n                 * @param {Object} modal\n                 */\n                closed: function (e, modal) {\n                    modal.modal.remove();\n                    registry.get(\n                        'variables_modal.variables_modal.variables.variable_selector',\n                        function (radioSelect) {\n                            radioSelect.selectedVariableCode('');\n                        }\n                    );\n                }\n            });\n\n            this.selectedPlaceholder = selectedElement;\n\n            this.addNotAvailableMessage(selectedElement);\n\n            jQuery('#' + this.dialogWindowId).modal('openModal');\n\n            if (typeof selectedElement !== 'undefined') {\n                registry.get(\n                    'variables_modal.variables_modal.variables.variable_selector',\n                    function (radioSelect) {\n                        radioSelect.selectedVariableCode(MagentovariablePlugin.getElementVariablePath(selectedElement));\n                    }\n                );\n            }\n        },\n\n        /**\n         * Add message to slide out that variable is no longer available\n         *\n         * @param {Object} selectedElement\n         */\n        addNotAvailableMessage: function (selectedElement) {\n            var name,\n                msg,\n                variablePath,\n                $wrapper,\n                lostVariableClass = 'magento-placeholder-error';\n\n            if (\n                this.isEditMode &&\n                typeof selectedElement !== 'undefined' &&\n                jQuery(selectedElement).hasClass(lostVariableClass)\n            ) {\n\n                variablePath = MagentovariablePlugin.getElementVariablePath(selectedElement);\n                name = variablePath.split(':');\n                msg = $t('The variable %1 is no longer available. Select a different variable.')\n                    .replace('%1', name[1]);\n\n                jQuery('body').notification('clear')\n                    .notification('add', {\n                        error: true,\n                        message: msg,\n\n                        /**\n                         * @param {String} message\n                         */\n                        insertMethod: function (message) {\n                            $wrapper = jQuery('<div/>').html(message);\n\n                            jQuery('.modal-header .page-main-actions').after($wrapper);\n                        }\n                    });\n            }\n        },\n\n        /**\n         * Get selected variable directive.\n         *\n         * @returns {*}\n         */\n        getVariableCode: function () {\n            var code = registry.get('variables_modal.variables_modal.variables.variable_selector')\n                    .selectedVariableCode(),\n                directive = code;\n\n            // processing switch here as content must contain only path/code without type\n            if (typeof code !== 'undefined') {\n                if (code.match('^default:')) {\n                    directive = configGenerator.processConfig(code.replace('default:', ''));\n                } else if (code.match('^custom:')) {\n                    directive = customGenerator.processConfig(code.replace('custom:', ''));\n                }\n\n                return directive;\n            }\n        },\n\n        /**\n         * Get buttons configuration for slideout dialog.\n         *\n         * @param {Boolean} isEditMode\n         *\n         * @returns {Array}\n         */\n        getButtonsConfig: function (isEditMode) {\n\n            var self = this,\n                buttonsData;\n\n            buttonsData = [\n                {\n\n                    text: $t('Cancel'),\n                    'class': 'action-scalable cancel',\n\n                    /**\n                     * @param {jQuery.Event} event\n                     */\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                },\n                {\n\n                    text: isEditMode ? $t('Save') : $t('Insert Variable'),\n                    class: 'action-primary ' + (isEditMode ? '' : 'disabled'),\n                    attr: {\n                        'id': 'insert_variable'\n                    },\n\n                    /**\n                     * Insert Variable\n                     */\n                    click: function () {\n                        self.insertVariable(self.getVariableCode());\n                    }\n                }\n            ];\n\n            return buttonsData;\n        },\n\n        /**\n         * Prepare variables row.\n         *\n         * @param {String} varValue\n         * @param {*} varLabel\n         * @return {String}\n         * @deprecated This method isn't relevant after ui changes\n         */\n        prepareVariableRow: function (varValue, varLabel) {\n            var value = varValue.replace(/\"/g, '&quot;').replace(/'/g, '\\\\&#39;');\n\n            return '<a href=\"#\" onclick=\"' +\n                this.insertFunction +\n                '(\\'' +\n                value +\n                '\\');return false;\">' +\n                varLabel +\n                '</a>';\n        },\n\n        /**\n         * Insert variable into WYSIWYG editor.\n         *\n         * @param {*} value\n         * @return {Object}\n         */\n        insertVariable: function (value) {\n            var windowId = this.dialogWindowId,\n                textareaElm, scrollPos, wysiwygEditorFocused;\n\n            jQuery('#' + windowId).modal('closeModal');\n            textareaElm = $(this.textareaElementId);\n\n            //to support switching between wysiwyg editors\n            wysiwygEditorFocused = wysiwyg && wysiwyg.activeEditor();\n\n            if (wysiwygEditorFocused && wysiwyg.get(this.textareaElementId)) {\n                if (jQuery(this.selectedPlaceholder).hasClass('magento-placeholder')) {\n                    wysiwyg.setCaretOnElement(this.selectedPlaceholder, 1);\n                }\n                wysiwyg.insertContent(value, false);\n\n                if (this.selectedPlaceholder && jQuery(this.selectedPlaceholder).hasClass('magento-placeholder')) {\n                    this.selectedPlaceholder.remove();\n                }\n\n            } else if (textareaElm) {\n                scrollPos = textareaElm.scrollTop;\n                updateElementAtCursor(textareaElm, value);\n                textareaElm.focus();\n                textareaElm.scrollTop = scrollPos;\n                jQuery(textareaElm).change();\n                textareaElm = null;\n            }\n\n            return this;\n        }\n\n    };\n\n    window.MagentovariablePlugin = {\n        editor: null,\n        variables: null,\n        textareaId: null,\n\n        /**\n         * Bind editor.\n         *\n         * @param {*} editor\n         */\n        setEditor: function (editor) {\n            this.editor = editor;\n        },\n\n        /**\n         * Load variables chooser.\n         *\n         * @param {String} url\n         * @param {*} textareaId\n         * @param {Object} selectedElement\n         *\n         * @return {Object}\n         */\n        loadChooser: function (url, textareaId, selectedElement) {\n            this.textareaId = textareaId;\n\n            new Ajax.Request(url, {\n                parameters: {},\n                onComplete: function (transport) {\n                    Variables.init(this.textareaId, 'MagentovariablePlugin.insertVariable', this.editor);\n                    Variables.isEditMode = !!this.getElementVariablePath(selectedElement);\n                    this.variablesContent = transport.responseText;\n                    Variables.openDialogWindow(this.variablesContent, selectedElement);\n                    Variables.initUiGrid();\n                }.bind(this)\n            });\n\n            return this;\n        },\n\n        /**\n         * Open variables chooser window.\n         *\n         * @param {*} variables\n         * @deprecated This method isn't relevant after ui changes\n         */\n        openChooser: function (variables) {\n            Variables.openVariableChooser(variables);\n        },\n\n        /**\n         * Insert variable.\n         *\n         * @param {*} value\n         *\n         * @return {Object}\n         */\n        insertVariable: function (value) {\n            if (this.textareaId) {\n                Variables.init(this.textareaId);\n                Variables.insertVariable(value);\n            } else {\n                Variables.closeDialogWindow();\n                Variables.insertVariable(value);\n            }\n\n            return this;\n        },\n\n        /**\n         * Get element variable path.\n         *\n         * @param {Object} element\n         * @returns {String}\n         */\n        getElementVariablePath: function (element) {\n            var type, code;\n\n            if (!element || !jQuery(element).hasClass('magento-variable')) {\n                return '';\n            }\n            type = jQuery(element).hasClass('magento-custom-var') ? 'custom' : 'default';\n            code = Base64.idDecode(element.getAttribute('id'));\n\n            return type + ':' + code;\n        }\n    };\n});\n","Magento_Variable/js/config-directive-generator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore'\n], function (_) {\n    'use strict';\n\n    return _.extend({\n        directiveTemplate: '{{config path=\"%s\"}}',\n\n        /**\n         * @param {String} path\n         * @return {String}\n         */\n        processConfig: function (path) {\n            return this.directiveTemplate.replace('%s', path);\n\n        }\n\n    });\n\n});\n","Magento_Variable/js/custom-directive-generator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore'\n], function (_) {\n    'use strict';\n\n    return _.extend({\n        directiveTemplate: '{{customVar code=%s}}',\n\n        /**\n         * @param {String} path\n         * @return {String}\n         */\n        processConfig: function (path) {\n            return this.directiveTemplate.replace('%s', path);\n        }\n\n    });\n\n});\n","Magento_Variable/js/grid/columns/radioselect.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mage/translate',\n    'Magento_Ui/js/grid/columns/column',\n    'jquery'\n], function (_, $t, Column, jQuery) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'Magento_Variable/grid/cells/radioselect',\n            draggable: false,\n            sortable: false,\n            selectedVariableCode: null,\n            selectedVariableType: null\n        },\n\n        /**\n         * Calls 'initObservable' of parent\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super().observe(['selectedVariableCode']);\n\n            return this;\n        },\n\n        /**\n         * Remove disable class from Insert Variable button after Variable has been chosen.\n         *\n         * @return {Boolean}\n         */\n        selectVariable: function () {\n            if (jQuery('#insert_variable').hasClass('disabled')) {\n                jQuery('#insert_variable').removeClass('disabled');\n            }\n\n            return true;\n        }\n    });\n});\n","Amasty_MegaMenu/js/form/fields/error.js":"define([\n    'Magento_Ui/js/form/element/abstract'\n], function (Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            elementTmpl: 'Amasty_MegaMenu/form/error'\n        },\n\n        /**\n         * Subcategories Position Field init method\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            self.visible(!self.hidden);\n        },\n    });\n});\n","Amasty_MegaMenu/js/form/fields/hide-content.js":"/**\n * Amasty MegaMenu Hide Content Field\n */\n\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            activeLevel: 1,\n        },\n\n        /**\n         * Subcategories Position Field init method\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            self.visible(self.validateVisibility());\n        },\n\n\n        /**\n         * Validate Visibility method\n         */\n        validateVisibility: function () {\n            return !this.hidden;\n        }\n    });\n});\n","Amasty_MegaMenu/js/form/fields/subcategories-position.js":"/**\n * Amasty MegaMenu Subcategories Position Field\n */\n\ndefine([\n    'Magento_Ui/js/form/element/select'\n], function (Select) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            activeLevel: 2,\n            listens: {\n                '${ $.provider }:data.hide_content': 'updateVisibility',\n                '${ $.provider }:data.submenu_type': 'updateVisibility'\n            }\n        },\n\n        /**\n         * Subcategories Position Field init method\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            self.visible(self.validateVisibility());\n        },\n\n        /**\n         * Update Visibility method\n         */\n        updateVisibility: function () {\n            this.visible(this.validateVisibility());\n        },\n\n        /**\n         * Validate Visibility method\n         */\n        validateVisibility: function () {\n            return !this.hidden && !parseInt(this.source.data.hide_content) && (parseInt(this.source.data.submenu_type) || parseInt(this.level) > this.activeLevel);\n        }\n    });\n});\n","Amasty_MegaMenu/js/form/fields/width.js":"/**\n * Amasty MegaMenu Width Field\n */\n\ndefine([\n    'Magento_Ui/js/form/element/select'\n], function (Select) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            activeLevel: 2,\n            listens: {\n                '${ $.provider }:data.hide_content': 'updateVisibility'\n            }\n        },\n\n        /**\n         * Subcategories Position Field init method\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            self.visible(self.validateVisibility());\n        },\n\n        /**\n         * Update Visibility method\n         */\n        updateVisibility: function () {\n            this.visible(this.validateVisibility());\n        },\n\n        /**\n         * Validate Visibility method\n         */\n        validateVisibility: function () {\n            return !this.hidden && !parseInt(this.source.data.hide_content);\n        }\n    });\n});\n","Amasty_MegaMenu/js/form/fields/submenu-type.js":"/**\n * Amasty MegaMenu Submenu Type Field\n */\n\ndefine([\n    'Magento_Ui/js/form/element/select'\n], function (Select) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            activeLevel: 2,\n            listens: {\n                '${ $.provider }:data.hide_content': 'updateVisibility'\n            }\n        },\n\n        /**\n         * Submenu Type Field init method\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            if (!this.validateVisibility()) {\n                return false;\n            }\n\n            self.visible(!parseInt(self.source.data.hide_content));\n        },\n\n        /**\n         * Update Visibility method\n         *\n         * @params {String} value\n         */\n        updateVisibility: function (value) {\n            if (!this.validateVisibility()) {\n                return false;\n            }\n\n            this.visible(!parseInt(value));\n        },\n\n        /**\n         * Validate Visibility method\n         */\n        validateVisibility: function () {\n            return !this.hidden;\n        }\n    });\n});\n","Amasty_MegaMenu/js/form/fields/width-value.js":"/**\n * Amasty MegaMenu Width Value Field\n */\n\ndefine([\n    'ko',\n    'Magento_Ui/js/form/element/abstract'\n], function (ko, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            listens: {\n                '${ $.provider }:data.hide_content': 'updateVisibility',\n                '${ $.provider }:data.width': 'updateType'\n            }\n        },\n\n        /**\n         * Width Value field init method\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            if (!this.validateVisibility()) {\n                return false;\n            }\n\n            self.visible(!parseInt(self.source.data.hide_content));\n        },\n\n        /**\n         * Update Visibility method\n         *\n         * @params {String} value\n         */\n        updateVisibility: function (value) {\n            if (!this.validateVisibility()) {\n                return false;\n            }\n\n            this.visible(!parseInt(value));\n        },\n\n        /**\n         * Update Type method\n         */\n        updateType: function () {\n            this.visible(this.validateVisibility());\n        },\n\n        /**\n         * Validate Visibility method\n         */\n        validateVisibility: function () {\n            return !this.hidden && this.source.data.width === '2';\n        }\n    });\n});\n","Amasty_MegaMenu/js/form/fields/column-count.js":"/**\n * Amasty MegaMenu Column Count Field\n */\n\ndefine([\n    'ko',\n    'Magento_Ui/js/form/element/abstract'\n], function (ko, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            activeLevel: 2,\n            listens: {\n                '${ $.provider }:data.hide_content': 'updateVisibility',\n                '${ $.provider }:data.submenu_type': 'updateType'\n            }\n        },\n\n        /**\n         * Column Count Field init method\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            if (!this.validateVisibility()) {\n                return false;\n            }\n\n            if (!parseInt(self.source.data.hide_content)) {\n                self.visible(!parseInt(self.source.data.submenu_type));\n            }\n        },\n\n        /**\n         * Update Visibility method\n         *\n         * @params {String} value\n         */\n        updateVisibility: function (value) {\n            if (!this.validateVisibility()) {\n                return false;\n            }\n\n            if (parseInt(this.source.data.submenu_type)) {\n                return false;\n            }\n\n            this.visible(!parseInt(value));\n        },\n\n        /**\n         * Update Type method\n         *\n         * @params {String} value\n         */\n        updateType: function (value) {\n            var visibility = !parseInt(value);\n\n            if (!this.validateVisibility()) {\n                return false;\n            }\n\n            if (parseInt(this.source.data.hide_content)) {\n                return false;\n            }\n\n            this.visible(visibility);\n        },\n\n        /**\n         * Validate Visibility method\n         */\n        validateVisibility: function () {\n            return !this.hidden;\n        }\n    });\n});\n","Magento_Rule/rules.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate',\n    'prototype'\n], function (jQuery) {\n    'use strict';\n\n    var VarienRulesForm = new Class.create();\n\n    VarienRulesForm.prototype = {\n        initialize: function (parent, newChildUrl) {\n            this.parent = $(parent);\n            this.newChildUrl  = newChildUrl;\n            this.shownElement = null;\n            this.updateElement = null;\n            this.chooserSelectedItems = $H({});\n            this.readOnly = false;\n\n            var elems = this.parent.getElementsByClassName('rule-param');\n\n            for (var i = 0; i < elems.length; i++) {\n                this.initParam(elems[i]);\n            }\n        },\n\n        setReadonly: function (readonly) {\n            this.readOnly = readonly;\n            var elems = this.parent.getElementsByClassName('rule-param-remove');\n\n            for (var i = 0; i < elems.length; i++) {\n                var element = elems[i];\n\n                if (this.readOnly) {\n                    element.hide();\n                } else {\n                    element.show();\n                }\n            }\n\n            var elems = this.parent.getElementsByClassName('rule-param-new-child');\n\n            for (var i = 0; i < elems.length; i++) {\n                var element = elems[i];\n\n                if (this.readOnly) {\n                    element.hide();\n                } else {\n                    element.show();\n                }\n            }\n\n            var elems = this.parent.getElementsByClassName('rule-param');\n\n            for (var i = 0; i < elems.length; i++) {\n                var container = elems[i];\n                var label = Element.down(container, '.label');\n\n                if (label) {\n                    if (this.readOnly) {\n                        label.addClassName('label-disabled');\n                    } else {\n                        label.removeClassName('label-disabled');\n                    }\n                }\n            }\n        },\n\n        initParam: function (container) {\n            container.rulesObject = this;\n            var label = Element.down(container, '.label');\n\n            if (label) {\n                Event.observe(label, 'click', this.showParamInputField.bind(this, container));\n            }\n\n            var elem = Element.down(container, '.element');\n\n            if (elem) {\n                var trig = elem.down('.rule-chooser-trigger');\n\n                if (trig) {\n                    Event.observe(trig, 'click', this.toggleChooser.bind(this, container));\n                }\n\n                var apply = elem.down('.rule-param-apply');\n\n                if (apply) {\n                    Event.observe(apply, 'click', this.hideParamInputField.bind(this, container));\n                } else {\n                    elem = elem.down('.element-value-changer');\n                    elem.container = container;\n\n                    if (!elem.multiple) {\n                        Event.observe(elem, 'change', this.hideParamInputField.bind(this, container));\n\n                        this.changeVisibilityForValueRuleParam(elem);\n\n                    }\n                    Event.observe(elem, 'blur', this.hideParamInputField.bind(this, container));\n                }\n            }\n\n            var remove = Element.down(container, '.rule-param-remove');\n\n            if (remove) {\n                Event.observe(remove, 'click', this.removeRuleEntry.bind(this, container));\n            }\n        },\n\n        showChooserElement: function (chooser) {\n            this.chooserSelectedItems = $H({});\n\n            if (chooser.hasClassName('no-split')) {\n                this.chooserSelectedItems.set(this.updateElement.value, 1);\n            } else {\n                var values = this.updateElement.value.split(','),\n s = '';\n\n                for (var i = 0; i < values.length; i++) {\n                    s = values[i].strip();\n\n                    if (s != '') {\n                        this.chooserSelectedItems.set(s, 1);\n                    }\n                }\n            }\n            new Ajax.Request(chooser.getAttribute('url'), {\n                evalScripts: true,\n                parameters: {\n                    'form_key': FORM_KEY, 'selected[]': this.chooserSelectedItems.keys()\n                },\n                onSuccess: function (transport) {\n                    if (this._processSuccess(transport)) {\n                        jQuery(chooser).html(transport.responseText);\n                        this.showChooserLoaded(chooser, transport);\n                        jQuery(chooser).trigger('contentUpdated');\n                    }\n                }.bind(this),\n                onFailure: this._processFailure.bind(this)\n            });\n        },\n\n        showChooserLoaded: function (chooser, transport) {\n            chooser.style.display = 'block';\n        },\n\n        showChooser: function (container, event) {\n            var chooser = container.up('li');\n\n            if (!chooser) {\n                return;\n            }\n            chooser = chooser.down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n            this.showChooserElement(chooser);\n        },\n\n        hideChooser: function (container, event) {\n            var chooser = container.up('li');\n\n            if (!chooser) {\n                return;\n            }\n            chooser = chooser.down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n            chooser.style.display = 'none';\n        },\n\n        toggleChooser: function (container, event) {\n            if (this.readOnly) {\n                return false;\n            }\n\n            var chooser = container.up('li').down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n\n            if (chooser.style.display == 'block') {\n                chooser.style.display = 'none';\n                this.cleanChooser(container, event);\n            } else {\n                this.showChooserElement(chooser);\n            }\n        },\n\n        cleanChooser: function (container, event) {\n            var chooser = container.up('li').down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n            chooser.innerHTML = '';\n        },\n\n        showParamInputField: function (container, event) {\n            if (this.readOnly) {\n                return false;\n            }\n\n            if (this.shownElement) {\n                this.hideParamInputField(this.shownElement, event);\n            }\n\n            Element.addClassName(container, 'rule-param-edit');\n            var elemContainer = Element.down(container, '.element');\n\n            var elem = Element.down(elemContainer, 'input.input-text');\n\n            jQuery(elem).trigger('contentUpdated');\n\n            if (elem) {\n                elem.focus();\n\n                if (elem && elem.id && elem.id.match(/__value$/)) {\n                    this.updateElement = elem;\n                }\n\n            }\n\n            var elem = Element.down(elemContainer, '.element-value-changer');\n\n            if (elem) {\n                elem.focus();\n            }\n\n            this.shownElement = container;\n        },\n\n        hideParamInputField: function (container, event) {\n            Element.removeClassName(container, 'rule-param-edit');\n            var label = Element.down(container, '.label'),\n elem;\n\n            if (!container.hasClassName('rule-param-new-child')) {\n                elem = Element.down(container, '.element-value-changer');\n\n                if (elem && elem.options) {\n                    var selectedOptions = [];\n\n                    for (var i = 0; i < elem.options.length; i++) {\n                        if (elem.options[i].selected) {\n                            selectedOptions.push(elem.options[i].text);\n                        }\n                    }\n\n                    var str = selectedOptions.join(', ');\n\n                    label.innerHTML = str != '' ? str : '...';\n                }\n\n                this.changeVisibilityForValueRuleParam(elem);\n\n                elem = Element.down(container, 'input.input-text');\n\n                if (elem) {\n                    var str = elem.value.replace(/(^\\s+|\\s+$)/g, '');\n\n                    elem.value = str;\n\n                    if (str == '') {\n                        str = '...';\n                    } else if (str.length > 30) {\n                        str = str.substr(0, 30) + '...';\n                    }\n                    label.innerHTML = str.escapeHTML();\n                }\n            } else {\n                elem = container.down('.element-value-changer');\n\n                if (elem.value) {\n                    this.addRuleNewChild(elem);\n                }\n                elem.value = '';\n            }\n\n            if (elem && elem.id && elem.id.match(/__value$/)) {\n                this.hideChooser(container, event);\n                this.updateElement = null;\n            }\n\n            this.shownElement = null;\n        },\n\n        changeVisibilityForValueRuleParam: function(elem) {\n            var parsedElementId = elem.id.split('__');\n            if (parsedElementId[2] !== 'operator') {\n                return false;\n            }\n\n            var valueElement = jQuery('#' + parsedElementId[0] + '__' + parsedElementId[1] + '__value');\n\n            if(elem.value === '<=>') {\n                valueElement.closest('.rule-param').hide();\n            } else {\n                valueElement.closest('.rule-param').show();\n            }\n\n            return true;\n        },\n\n        addRuleNewChild: function (elem) {\n            var parent_id = elem.id.replace(/^.*__(.*)__.*$/, '$1');\n            var children_ul_id = elem.id.replace(/__/g, ':').replace(/[^:]*$/, 'children').replace(/:/g, '__');\n            var children_ul = $(this.parent).select('#' + children_ul_id)[0];\n            var max_id = 0,\n i;\n            var children_inputs = Selector.findChildElements(children_ul, $A(['input.hidden']));\n\n            if (children_inputs.length) {\n                children_inputs.each(function (el) {\n                    if (el.id.match(/__type$/)) {\n                        i = 1 * el.id.replace(/^.*__.*?([0-9]+)__.*$/, '$1');\n                        max_id = i > max_id ? i : max_id;\n                    }\n                });\n            }\n            var new_id = parent_id + '--' + (max_id + 1);\n            var new_type = elem.value;\n            var new_elem = document.createElement('LI');\n\n            new_elem.className = 'rule-param-wait';\n            new_elem.innerHTML = jQuery.mage.__('This won\\'t take long . . .');\n            children_ul.insertBefore(new_elem, $(elem).up('li'));\n\n            new Ajax.Request(this.newChildUrl, {\n                evalScripts: true,\n                parameters: {\n                    form_key: FORM_KEY, type: new_type.replace('/', '-'), id: new_id\n                },\n                onComplete: this.onAddNewChildComplete.bind(this, new_elem),\n                onSuccess: function (transport) {\n                    if (this._processSuccess(transport)) {\n                        $(new_elem).update(transport.responseText);\n                    }\n                }.bind(this),\n                onFailure: this._processFailure.bind(this)\n            });\n        },\n\n        _processSuccess: function (transport) {\n            if (transport.responseText.isJSON()) {\n                var response = transport.responseText.evalJSON();\n\n                if (response.error) {\n                    alert(response.message);\n                }\n\n                if (response.ajaxExpired && response.ajaxRedirect) {\n                    setLocation(response.ajaxRedirect);\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _processFailure: function (transport) {\n            location.href = BASE_URL;\n        },\n\n        onAddNewChildComplete: function (new_elem) {\n            if (this.readOnly) {\n                return false;\n            }\n\n            $(new_elem).removeClassName('rule-param-wait');\n            var elems = new_elem.getElementsByClassName('rule-param');\n\n            for (var i = 0; i < elems.length; i++) {\n                this.initParam(elems[i]);\n            }\n        },\n\n        removeRuleEntry: function (container, event) {\n            var li = Element.up(container, 'li');\n\n            li.parentNode.removeChild(li);\n        },\n\n        chooserGridInit: function (grid) {\n            //grid.reloadParams = {'selected[]':this.chooserSelectedItems.keys()};\n        },\n\n        chooserGridRowInit: function (grid, row) {\n            if (!grid.reloadParams) {\n                grid.reloadParams = {\n                    'selected[]': this.chooserSelectedItems.keys()\n                };\n            }\n        },\n\n        chooserGridRowClick: function (grid, event) {\n            var trElement = Event.findElement(event, 'tr');\n            var isInput = Event.element(event).tagName == 'INPUT';\n\n            if (trElement) {\n                var checkbox = Element.select(trElement, 'input');\n\n                if (checkbox[0]) {\n                    var checked = isInput ? checkbox[0].checked : !checkbox[0].checked;\n\n                    grid.setCheckboxChecked(checkbox[0], checked);\n\n                }\n            }\n        },\n\n        chooserGridCheckboxCheck: function (grid, element, checked) {\n            if (checked) {\n                if (!element.up('th')) {\n                    this.chooserSelectedItems.set(element.value, 1);\n                }\n            } else {\n                this.chooserSelectedItems.unset(element.value);\n            }\n            grid.reloadParams = {\n                'selected[]': this.chooserSelectedItems.keys()\n            };\n            this.updateElement.value = this.chooserSelectedItems.keys().join(', ');\n        }\n    };\n\n    return VarienRulesForm;\n});\n","Magento_Rule/conditions-data-normalizer.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore'\n], function ($, _) {\n    'use strict';\n\n    /**\n     * @constructor\n     */\n    var ConditionsDataNormalizer = function () {\n        this.patterns = {\n            validate: /^[a-z0-9_.-][a-z0-9_.-]*(?:\\[(?:\\d*|[a-z0-9_.-]+)\\])*$/i,\n            key: /[a-z0-9_.-]+|(?=\\[\\])/gi,\n            push: /^$/,\n            fixed: /^\\d+$/,\n            named: /^[a-z0-9_.-]+$/i\n        };\n    };\n\n    ConditionsDataNormalizer.prototype = {\n        /**\n         * Will convert an object:\n         * {\n         *   \"foo[bar][1][baz]\": 123,\n         *   \"foo[bar][1][blah]\": 321\n         *   \"foo[bar][1--1][ah]\": 456\n         * }\n         *\n         * to\n         * {\n         *   \"foo\": {\n         *     \"bar\": {\n         *       \"1\": {\n         *         \"baz\": 123,\n         *         \"blah\": 321\n         *       },\n         *       \"1--1\": {\n         *         \"ah\": 456\n         *       }\n         *     }\n         *   }\n         * }\n         */\n        normalize: function normalize(value) {\n            var el, _this = this;\n\n            this.pushes = {};\n            this.data = {};\n\n            _.each(value, function (e, i) {\n                el = {};\n                el[i] = e;\n\n                _this._addPair({\n                    name: i,\n                    value: e\n                });\n            });\n\n            return this.data;\n        },\n\n        /**\n         * @param {Object} base\n         * @param {String} key\n         * @param {String} value\n         * @return {Object}\n         * @private\n         */\n        _build: function build(base, key, value) {\n            base[key] = value;\n\n            return base;\n        },\n\n        /**\n         * @param {Object} root\n         * @param {String} value\n         * @return {*}\n         * @private\n         */\n        _makeObject: function makeObject(root, value) {\n            var keys = root.match(this.patterns.key),\n                k, idx; // nest, nest, ..., nest\n\n            while ((k = keys.pop()) !== undefined) {\n                // foo[]\n                if (this.patterns.push.test(k)) {\n                    idx = this._incrementPush(root.replace(/\\[\\]$/, ''));\n                    value = this._build([], idx, value);\n                } // foo[n]\n                else if (this.patterns.fixed.test(k)) {\n                    value = this._build({}, k, value);\n                } // foo; foo[bar]\n                else if (this.patterns.named.test(k)) {\n                    value = this._build({}, k, value);\n                }\n            }\n\n            return value;\n        },\n\n        /**\n         * @param {String} key\n         * @return {Number}\n         * @private\n         */\n        _incrementPush: function incrementPush(key) {\n            if (this.pushes[key] === undefined) {\n                this.pushes[key] = 0;\n            }\n\n            return this.pushes[key]++;\n        },\n\n        /**\n         * @param {Object} pair\n         * @return {Object}\n         * @private\n         */\n        _addPair: function addPair(pair) {\n            var obj = this._makeObject(pair.name, pair.value);\n\n            if (!this.patterns.validate.test(pair.name)) {\n                return this;\n            }\n\n            this.data = $.extend(true, this.data, obj);\n\n            return this;\n        }\n    };\n\n    return ConditionsDataNormalizer;\n});\n","Fastly_Cdn/js/basic-authentication.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"showSuccessMessage\",\n    \"Magento_Ui/js/modal/confirm\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, showSuccessMessage, confirm) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* Auth button messages */\n        let successAuthBtnMsg = $('#fastly-success-auth-button-msg');\n        let errorAuthBtnMsg = $('#fastly-error-auth-button-msg');\n\n        /* Auth list messages */\n        let successAuthListBtnMsg = $('#fastly-success-auth-list-button-msg');\n        let errorAuthListBtnMsg = $('#fastly-error-auth-list-button-msg');\n\n        /* Auth state elements*/\n        let authStateSpan = $('#auth_state_span');\n        let authStateMsgSpan = $('#fastly_auth_state_message_span');\n\n        let authStatus = true;\n        let authDictStatus = null;\n\n        let active_version = serviceStatus.active_version;\n\n        authStateSpan.find('.processing').show();\n\n        /**\n         * Basic Authentication VCL snippet upload modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let authenticationOptions = {\n            title: jQuery.mage.__(' '),\n                content: function () {\n                return document.getElementById('fastly-auth-template').textContent;\n            },\n            actionOk: function () {\n                toggleAuth(active_version);\n            }\n        };\n\n        /**\n         * Basic Authentication container creation modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let authenticationContainerOptions = {\n            title: jQuery.mage.__('Create container for authenticated users'),\n                content: function () {\n                return document.getElementById('fastly-auth-container-template').textContent;\n            },\n            actionOk: function () {\n                createAuth(active_version);\n            }\n        };\n\n        /**\n         * Basic Authentication users modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let authenticationItemsOptions = {\n            title: jQuery.mage.__('Basic Authentication users'),\n                content: function () {\n                return document.getElementById('fastly-auth-items-template').textContent;\n            },\n            actionOk: function () {\n            }\n        };\n\n        /**\n         * Basic Authentication delete all users modal overlay otions\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let authenticationContainerDeleteOptions = {\n            title: jQuery.mage.__('Delete all authenticated users'),\n                content: function () {\n                return document.getElementById('fastly-auth-delete-template').textContent;\n            },\n            actionOk: function () {\n                deleteMainAuth(active_version);\n            }\n        };\n\n        /**\n         * Trigger the Basic Authentication status call\n         */\n        getAuthSetting(active_version).done(function (response) {\n            authStateSpan.find('.processing').hide();\n            let authStateEnabled = authStateMsgSpan.find('#auth_state_enabled');\n            let authStateDisabled = authStateMsgSpan.find('#auth_state_disabled');\n\n            if (response.status === true) {\n                if (authStateDisabled.is(\":hidden\")) {\n                    authStateEnabled.show();\n                }\n            } else if (response.status === false) {\n                if (authStateEnabled.is(\":hidden\")) {\n                    authStateDisabled.show();\n                }\n            } else {\n                authStateMsgSpan.find('#auth_state_unknown').show();\n            }\n        }).fail(function () {\n            authStateSpan.find('.processing').hide();\n            authStateMsgSpan.find('#auth_state_unknown').show();\n        });\n\n\n        /**\n         * Queries the Fastly API to retrieve the Basic Authentication status\n         *\n         * @param active_version\n         * @returns {*}\n         */\n        function getAuthSetting(active_version)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.checkAuthSettingUrl,\n                showLoader: false,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Queries the Fastly API to retrieve the list of Basic Authentication users\n         *\n         * @param active_version\n         * @returns {*}\n         */\n        function listAuths(active_version)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getAuths,\n                showLoader: true,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Process and display basic Authentication users\n         *\n         * @param auths\n         */\n        function processAuths(auths)\n        {\n            let html = '';\n            $.each(auths, function (index, auth) {\n                html += '<tr><td>' +\n                    '<input name=\"auth_user\" value=\"'+ auth.item_key +'\" data-keyid=\"'+ auth.item_key_id +'\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\" disabled></td>' +\n                    '<td><input name=\"auth_pass\" value=\"********\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\" disabled></td>' +\n                    '<td class=\"col-actions\">' +\n                    '<button class=\"action-delete remove_item_auth\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>' +\n                    '</td></tr>';\n            });\n            overlay(authenticationItemsOptions);\n            $('.upload-button').remove();\n\n            if (html !== '') {\n                $('#auth-items-table > tbody').html(html);\n            }\n        }\n\n        /**\n         * Save Basic Authentication user\n         *\n         * @param item_key\n         * @param item_value\n         * @returns {*}\n         */\n        function saveAuthItem(item_key, item_value)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.createAuthItem,\n                showLoader: true,\n                data: {'active_version': active_version, 'auth_user': item_key, 'auth_pass': item_value},\n                beforeSend: function () {\n                    resetAllMessages();\n                }\n            });\n        }\n\n        /**\n         * Delete a Basic Authentication user\n         *\n         * @param item_key_id\n         * @returns {*}\n         */\n        function deleteAuthItem(item_key_id)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.deleteAuthItem,\n                showLoader: true,\n                data: {'active_version': active_version, 'item_key_id': item_key_id},\n                beforeSend: function () {\n                    resetAllMessages();\n                }\n            });\n        }\n\n        /**\n         * Toggle Basic Authentication VCL snippet\n         *\n         * @param active_version\n         */\n        function toggleAuth(active_version)\n        {\n            let activate_auth_flag = false;\n\n            if ($('#fastly_activate_auth').is(':checked')) {\n                activate_auth_flag = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.toggleAuthSettingUrl,\n                data: {\n                    'activate_flag': activate_auth_flag,\n                    'active_version': active_version\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        modal.modal('closeModal');\n                        let disabledOrEnabled = 'disabled';\n                        let statusStr = $.mage.__('disabled');\n\n                        if (authStatus === false) {\n                            disabledOrEnabled = 'enabled';\n                            statusStr = $.mage.__('enabled');\n                        } else {\n                            disabledOrEnabled = 'disabled';\n                        }\n\n                        successAuthBtnMsg.text($.mage.__('Basic Authentication is successfully %1.').replace('%1', statusStr)).show();\n\n                        if (disabledOrEnabled === 'enabled') {\n                            authStateMsgSpan.find('#auth_state_disabled').hide();\n                            authStateMsgSpan.find('#auth_state_enabled').show();\n                        } else {\n                            authStateMsgSpan.find('#auth_state_enabled').hide();\n                            authStateMsgSpan.find('#auth_state_disabled').show();\n                        }\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n\n        /**\n         * Delete the Basic Authentication container and turn off Basic Authentication\n         */\n        function deleteMainAuth()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.deleteAuth,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successAuthBtnMsg.text($.mage.__('Basic Authentication is successfully turned off.')).show();\n                        authStateMsgSpan.find('#auth_state_disabled').show();\n                        authStateMsgSpan.find('#auth_state_enabled').hide();\n                        active_version = response.active_version;\n                        authDictStatus = false;\n                        modal.modal('closeModal');\n                        return successAuthListBtnMsg.text($.mage.__('Authentication users removed.')).show();\n                    } else {\n                        if (response.not_exists === true) {\n                            authDictStatus = false;\n                        }\n                        resetAllMessages();\n                        modal.modal('closeModal');\n                        return errorAuthListBtnMsg.text($.mage.__(response.msg)).show();\n                    }\n                },\n                error: function () {\n                    authStateMsgSpan.find('#enable_auth_state_unknown').show();\n                    return errorAuthListBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Create the Basic Authentication dictionary container\n         */\n        function createAuth()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createAuth,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        authDictStatus = true;\n                        successAuthListBtnMsg.text($.mage.__('Authentication dictionary is successfully created.')).show();\n                        active_version = response.active_version;\n                        modal.modal('closeModal');\n                        processAuths(response.auths);\n                    } else if (response.status === 'empty') {\n                        processAuths([]);\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n\n                },\n                error: function () {\n                    return errorAuthListBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Add Basic Authentication user button on click event\n         */\n        $('body').on('click', '#add-auth-item', function () {\n            $('#auth-items-table > tbody').append('<tr><td><input name=\"auth_user\" required=\"required\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                '<td><input name=\"auth_pass\" required=\"required\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                '<td class=\"col-actions\">' +\n                '<button class=\"action-delete fastly-save-action save_item_auth\" title=\"Save\" type=\"button\"><span>Save</span></button>' +\n                '<button class=\"action-delete remove_item_auth\"  title=\"Delete\" type=\"button\" hidden><span>Delete</span></button>' +\n                '</td></tr>');\n        });\n\n        /**\n         * Save Basic Authentication user button on click event\n         */\n        $('body').on('click', '.save_item_auth', function () {\n            let keyField = $(this).closest('tr').find(\"input[name='auth_user']\");\n            let valueField = $(this).closest('tr').find(\"input[name='auth_pass']\");\n            let item_key = keyField.val();\n            let item_value = valueField.val();\n            let errors = false;\n\n            if (item_value === '') {\n                errors = true;\n                valueField.css('border-color', '#e22626');\n            } else {\n                valueField.css('border-color', '#878787');\n            }\n\n            if (errors) {\n                resetAllMessages();\n                return showErrorMessage($.mage.__('Please enter all required fields.'));\n            }\n\n            let self = this;\n\n            saveAuthItem(item_key, item_value).done(function (response) {\n                if (response.status === true) {\n                    $(self).closest('tr').find(\"input[name='auth_user']\").prop('disabled', true);\n                    $(self).closest('tr').find(\"input[name='auth_user']\").data('keyid', btoa(item_key + ':' + item_value));\n                    $(self).closest('tr').find(\"input[name='auth_pass']\").prop('disabled', true);\n                    $(self).closest('tr').find(\".save_item_auth\").hide();\n                    $(self).closest('tr').find(\".remove_item_auth\").show();\n                    showSuccessMessage($.mage.__('Authentication entry is successfully saved.'));\n                } else {\n                    showErrorMessage(response.msg);\n                }\n            }).fail(function () {\n                showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n            });\n        });\n\n        /**\n         * Remove Basic Authentication user on click event\n         */\n        $('body').on('click', '.remove_item_auth', function () {\n            let valueField = $(this).closest('tr').find(\"input[name='auth_user']\");\n            let self = this;\n            let authItemKeyId = valueField.data('keyid');\n\n            confirm({\n                title: 'Delete Authentication Item',\n                content: \"Are you sure you want to delete this item?\",\n                actions: {\n                    confirm: function () {\n                        deleteAuthItem(authItemKeyId).done(function (response) {\n                            if (response.status === true) {\n                                $(self).closest('tr').remove();\n                                showSuccessMessage($.mage.__('Authentication item is successfully deleted.'));\n                            } else if (response.status === 'empty') {\n                                showErrorMessage($.mage.__(response.msg));\n                            }\n                        }).fail(function () {\n                            showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n                        });\n                    },\n                    cancel: function () {}\n                }\n            });\n        });\n\n        /**\n         * Remove Basic Authentication dictionary button on clikc event\n         */\n        $('body').on('click', '.remove_auth_dictionary', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorAuthListBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                overlay(authenticationContainerDeleteOptions);\n                setServiceLabel(active_version, next_version, service_name);\n\n            }).fail(function () {\n                return errorAuthListBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Toggle Basic Authentication button on click event\n         */\n        $('#fastly_enable_auth_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorAuthBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getAuthSetting(active_version).done(function (response) {\n                    authStatus = response.status;\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'))\n                });\n\n                // Check if Users are available and Auth can be enabled\n                let enableMsg = false;\n                $.ajax({\n                    type: \"GET\",\n                    url: config.checkAuthUsersAvailable,\n                    data: {'active_version': active_version},\n                    showLoader: true,\n                    success: function (response) {\n                        if (response.status === 'empty') {\n                            enableMsg = response.msg;\n                        }\n\n                        overlay(authenticationOptions);\n                        setServiceLabel(active_version, next_version, service_name);\n                        let upload_button = $('.upload-button span');\n\n                        if (authStatus === false) {\n                            $('.modal-title').text($.mage.__('You are about to enable Basic Authentication'));\n                            upload_button.text('Enable');\n                        } else {\n                            $('.modal-title').text($.mage.__('You are about to disable Basic Authentication'));\n                            upload_button.text('Disable');\n                        }\n\n                        if (enableMsg) {\n                            let enableAuthOverlayMsg =  $('.fastly-message-error');\n                            enableAuthOverlayMsg.text($.mage.__(response.msg)).show();\n                        }\n                    }\n                });\n            }).fail(function () {\n                return errorAuthBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Add Basic Authentication dictionary container button on click event\n         */\n        $('#add-auth-container-button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true,\n                success: function (service) {\n                    if (service.status === false) {\n                        return errorAuthListBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                    }\n\n                    active_version = service.active_version;\n                    let next_version = service.next_version;\n                    let service_name = service.service.name;\n\n                    listAuths(active_version).done(function (authResp) {\n                        if (authResp.status === true) {\n                            processAuths(authResp.auths);\n                        } else if (authResp.status === 'empty') {\n                            processAuths([]);\n                        } else {\n                            overlay(authenticationContainerOptions);\n                        }\n                        setServiceLabel(active_version, next_version, service_name);\n                    }).fail(function () {\n                        return errorAuthListBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                    });\n                },\n                fail: function () {\n                    return errorAuthListBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        });\n    }\n});\n","Fastly_Cdn/js/rate-limiting.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"showSuccessMessage\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, showSuccessMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        let active_version = serviceStatus.active_version;\n        let errorPathsBtnMsg = $('#fastly-error-paths-button-msg');\n        let successPathsBtnMsg = $('#fastly-success-paths-button-msg');\n        let errorRateLimitingBtnMsg = $('#fastly-error-rate-limiting-button-msg');\n        let successRateLimitingBtnMsg = $('#fastly-success-rate-limiting-button-msg');\n        let rateLimitingStateSpan = $('#rate_limiting_state_span');\n        let rateLimitingStateMsgSpan = $('#rate_limiting_state_message_span');\n        let rateLimiting = true;\n\n        let rateLimitingOptions = {\n            id: 'fastly-rate-limiting-options',\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('fastly-rate-limiting-template').textContent;\n            },\n            actionOk: function () {\n                toggleRateLimiting(active_version);\n            }\n        };\n\n        let pathsOptions = {\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('fastly-rate-limiting-paths-template').textContent;\n            },\n            actionOk: function () {\n                saveRateLimitingPaths(active_version);\n            }\n        };\n\n        getRateLimitingSetting(active_version, false).done(function (response) {\n            rateLimitingStateSpan.find('.processing').hide();\n            let rateLimitingStateEnabled = rateLimitingStateMsgSpan.find('#rate_limiting_state_enabled');\n            let rateLimitingStateDisabled = rateLimitingStateMsgSpan.find('#rate_limiting_state_disabled');\n\n            if (response.status === true) {\n                if (rateLimitingStateDisabled.is(\":hidden\")) {\n                    rateLimitingStateEnabled.show();\n                }\n            } else if (response.status === false) {\n                if (rateLimitingStateEnabled.is(\":hidden\")) {\n                    rateLimitingStateDisabled.show();\n                }\n            } else {\n                rateLimitingStateMsgSpan.find('#rate_limiting_state_unknown').show();\n            }\n        }).fail(function () {\n            rateLimitingStateSpan.find('.processing').hide();\n            rateLimitingStateMsgSpan.find('#rate_limiting_state_unknown').show();\n        });\n\n        function getRateLimitingSetting(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.checkRateLimitingSettingUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        $('#system_full_page_cache_fastly_fastly_rate_limiting_settings_enable_rate_limiting_master').on('change', function () {\n            if (this.value === '0') {\n                $.ajax({\n                    type: \"POST\",\n                    url: config.disableRateLimitingUrl,\n                    data: {\n                        'active_version': active_version,\n                        'activate_flag': true\n                    },\n                    showLoader: true,\n                    success: function (response) {\n                        if (response.status === true) {\n                            rateLimitingStateMsgSpan.find('#rate_limiting_state_enabled').hide();\n                            rateLimitingStateMsgSpan.find('#rate_limiting_state_disabled').show();\n                            $('#system_full_page_cache_fastly_fastly_rate_limiting_settings_crawler_protection_enable_crawler_protection').val(0);\n                            active_version = response.active_version;\n                        } else {\n                            resetAllMessages();\n                            showErrorMessage(response.msg);\n                        }\n                    },\n                    error: function () {\n                        return errorPathsBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                    }\n                });\n            }\n        });\n\n        $('#fastly_paths_btn').on('click', function () {\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorPathsBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n\n                getRateLimitingSetting(active_version, true).done(function (resp) {\n                    if (resp.status === false) {\n                        return errorPathsBtnMsg.text($.mage.__('Please make sure that Path Protection is enabled.')).show();\n                    }\n                    $.when(\n                        $.ajax({\n                            type:\"GET\",\n                            url: config.getPathsUrl,\n                            showLoader: true\n                        })\n                    ).done(function (response) {\n                        if (response.status === true) {\n                            let paths = response.paths;\n                            let pathsHtml = '';\n                            if (paths.length > 0) {\n                                $.each(paths, function (index, data) {\n                                    pathsHtml += '<tr><td>' +\n                                        '<input name=\"path[]\" data-type=\"path\" value=\"' + data.path + '\" class=\"input-text admin__control-text path-field\" type=\"text\"></td>' +\n                                        '<td><input name=\"comment[]\" data-type=\"path\" value=\"' + data.comment + '\" class=\"input-text admin__control-text path-comment\" type=\"text\"></td>' +\n                                        '<td class=\"col-actions\">' +\n                                        '<button class=\"action-delete remove_path\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>' +\n                                        '</td></tr>';\n                                });\n                            } else {\n                                pathsHtml += '<tr><td>' +\n                                    '<input name=\"path[]\" data-type=\"path\" value=\"\" class=\"input-text admin__control-text path-field\" type=\"text\"></td>' +\n                                    '<td><input name=\"comment[]\" data-type=\"path\" value=\"\" class=\"input-text admin__control-text path-comment\" type=\"text\"></td>' +\n                                    '<td class=\"col-actions\">' +\n                                    '<button class=\"action-delete remove_path\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>' +\n                                    '</td></tr>';\n                            }\n                            overlay(pathsOptions);\n                            $('.upload-button span').text('Save');\n                            $('.modal-title').text($.mage.__('Protected Paths management'));\n\n                            $('#fastly-rate-limiting-table > tbody').html(pathsHtml);\n                        }\n                    });\n                });\n            });\n        });\n\n        $('#fastly_toggle_rate_limiting_btn').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorRateLimitingBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getRateLimitingSetting(active_version, true).done(function (response) {\n                    overlay(rateLimitingOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n                    let upload_button = $('.upload-button span');\n\n                    if (response.status === false) {\n                        $('.modal-title').text($.mage.__('You are about to enable Path Protection'));\n                        upload_button.text('Enable');\n                    } else {\n                        $('.modal-title').text($.mage.__('You are about to disable Path Protection'));\n                        upload_button.text('Disable');\n                    }\n                    rateLimiting = response.status;\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'))\n                });\n\n            }).fail(function () {\n                return errorRateLimitingBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        $('body').on('click', '#add-path', function () {\n            $('#fastly-rate-limiting-table > tbody').append('<tr><td>' +\n                '<input name=\"path[]\" data-type=\"path\" value=\"\" class=\"input-text admin__control-text path-field\" type=\"text\"></td>' +\n                '<td><input name=\"comment[]\" data-type=\"path\" value=\"\" class=\"input-text admin__control-text path-comment\" type=\"text\"></td>' +\n                '<td class=\"col-actions\">' +\n                '<button class=\"action-delete remove_path\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>' +\n                '</td></tr>');\n        });\n\n        $('body').on('click', '.remove_path', function () {\n            $(this).closest('tr').remove();\n        });\n\n        function saveRateLimitingPaths(active_version)\n        {\n            let paths = [];\n            $('input[name=\"path[]\"').each(function () {\n                let path = $(this).val();\n                console.log(path);\n                let comment = $(this).closest('tr').find(\"input[name='comment[]']\").val();\n                paths.push({\n                    path: path,\n                    comment: comment\n                });\n            });\n\n            $.ajax({\n                type: \"POST\",\n                url: config.updatePathsUrl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': true,\n                    'paths': paths\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successPathsBtnMsg.text($.mage.__('Paths successfully updated.')).show();\n                        active_version = response.active_version;\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorPathsBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        function toggleRateLimiting(active_version)\n        {\n            let activate_rate_limiting_flag = false;\n\n            if ($('#fastly_activate_rate_limiting').is(':checked')) {\n                activate_rate_limiting_flag = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.toggleRateLimitingUrl,\n                data: {\n                    'activate_flag': activate_rate_limiting_flag,\n                    'active_version': active_version\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        modal.modal('closeModal');\n                        let disabledOrEnabled = 'disabled';\n                        let statusStr = $.mage.__('disabled');\n\n                        if (rateLimiting === false) {\n                            disabledOrEnabled = 'enabled';\n                            statusStr = $.mage.__('enabled');\n                        } else {\n                            disabledOrEnabled = 'disabled';\n                        }\n\n                        successRateLimitingBtnMsg.text($.mage.__('Path Protection successfully %1.').replace('%1', statusStr)).show();\n\n                        if (disabledOrEnabled === 'enabled') {\n                            rateLimitingStateMsgSpan.find('#rate_limiting_state_disabled').hide();\n                            rateLimitingStateMsgSpan.find('#rate_limiting_state_enabled').show();\n                        } else {\n                            rateLimitingStateMsgSpan.find('#rate_limiting_state_enabled').hide();\n                            rateLimitingStateMsgSpan.find('#rate_limiting_state_disabled').show();\n                        }\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n    }\n});\n","Fastly_Cdn/js/service-label.js":"define([\n    \"jquery\"\n], function ($) {\n    return function setActiveServiceLabel(active_version, next_version, service_name)\n    {\n        /**\n         * Set the Active service label message\n         *\n         * @type {*|jQuery|HTMLElement}\n         */\n        let msgWarning = $('.fastly-message-warning');\n        msgWarning.text($.mage.__('You are about to clone service **%1** active version %2.').replace('%1', service_name).replace('%2', active_version) + ' '\n            + $.mage.__('We\\'ll make changes to version %1.').replace('%1', next_version));\n        msgWarning.show();\n    }\n});\n","Fastly_Cdn/js/error-message.js":"define([\n    \"jquery\"\n], function ($) {\n    return function showErrorMessage(msg)\n    {\n        /**\n         * Show error message\n         *\n         * @type {*|jQuery|HTMLElement}\n         */\n        let msgError = $('.fastly-message-error');\n        msgError.html($.mage.__(msg));\n        msgError.show();\n        msgError.focus();\n    }\n});","Fastly_Cdn/js/custom-synthetic-pages.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* Error page HTML button */\n        let successHtmlBtnMsg = $('#fastly-success-html-page-button-msg');\n        let errorHtmlBtnMsg = $('#fastly-error-html-page-button-msg');\n        /* WAF page HTML button */\n        let successWafBtnMsg = $('#fastly-success-waf-page-button-msg');\n        let errorWafBtnMsg = $('#fastly-error-waf-page-button-msg');\n\n        let active_version = serviceStatus.active_version;\n\n        let maxChars = 65535;\n        let msgWarning = $('.fastly-message-error');\n\n        let wafPageRow = $('#row_system_full_page_cache_fastly_fastly_error_maintenance_page_waf_page');\n        let wafPage = getWafPageRespObj(active_version);\n\n        wafPage.done(function (checkWafResponse) {\n            if (checkWafResponse.status === false) {\n                wafPageRow.hide();\n            }\n        });\n\n        let errorPageOptions = {\n            title: jQuery.mage.__('Update Error Page Content'),\n                content: function () {\n                return document.getElementById('fastly-error-page-template').textContent;\n            },\n            actionOk: function () {\n                saveErrorHtml(active_version);\n            }\n        };\n\n        let wafPageOptions = {\n            title: jQuery.mage.__('Update WAF Page Content'),\n                content: function () {\n                return document.getElementById('fastly-waf-page-template').textContent;\n            },\n            actionOk: function () {\n                saveWafHtml(active_version);\n            }\n        };\n\n        getWafPageRespObj(active_version, false).done(function (checkWafResponse) {\n            if (checkWafResponse.status !== false) {\n                wafPageRow.show();\n            }\n        });\n\n        // Queries Fastly API to retrieve error page response object\n        function getErrorPageRespObj(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getErrorPageRespObj,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        // Queries Fastly API to retrieve WAF page response object\n        function getWafPageRespObj(active_version)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getWafPageRespObj,\n                showLoader: true,\n                data: {'active_version': active_version}\n            });\n        }\n\n        // Save Error Page Html\n        function saveErrorHtml()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n            let errorHtmlChars = $('#error_page_html').val().length;\n            if (errorHtmlChars >= maxChars) {\n                msgWarning.text($.mage.__('The HTML must contain less than %1 characters. Current number of characters: %2').replace('%1', maxChars).replace('%2',errorHtmlChars));\n                msgWarning.show();\n                return;\n            }\n            $.ajax({\n                type: \"POST\",\n                url: config.saveErrorPageHtmlUrl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'html': $('#error_page_html').val()\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successHtmlBtnMsg.text($.mage.__('Error page HTML is successfully updated.')).show();\n                        active_version = response.active_version;\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorHtmlBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        // Save WAF Page Html\n        function saveWafHtml()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n            let wafHtmlChars = $('#waf_page_content').val().length;\n            if (wafHtmlChars >= maxChars) {\n                msgWarning.text($.mage.__('The content must contain less than %1 characters. Current number of characters: %2').replace('%1', maxChars).replace('%2', wafHtmlChars));\n                msgWarning.show();\n                return;\n            }\n            $.ajax({\n                type: \"POST\",\n                url: config.saveWafPageUrl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'content': $('#waf_page_content').val(),\n                    'status': $('#waf_page_status').val(),\n                    'content_type': $('#waf_page_type').val()\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successWafBtnMsg.text($.mage.__('WAF page is successfully updated.')).show();\n                        active_version = response.active_version;\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorWafBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Set Error Page HTML button\n         */\n        $('#fastly_error_page_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorHtmlBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getErrorPageRespObj(active_version, true).done(function (response) {\n                    overlay(errorPageOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n\n                    $('.upload-button span').text('Update');\n                    if (response.status === true) {\n                        $('#error_page_html').text(response.errorPageResp.content).html();\n                    }\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n                });\n\n            }).fail(function () {\n                return errorHtmlBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Set WAF Page HTML button\n         */\n        $('#fastly_waf_page_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorWafBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getWafPageRespObj(active_version, true).done(function (response) {\n                    overlay(wafPageOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n\n                    $('.upload-button span').text('Update');\n                    if (response.status === true) {\n                        $('#waf_page_content').text(response.wafPageResp.content).html();\n                        $('#waf_page_status').val(response.wafPageResp.status);\n                        $('#waf_page_type').val(response.wafPageResp.content_type);\n                    }\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n                });\n\n            }).fail(function () {\n                return errorWafBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n    }\n});\n","Fastly_Cdn/js/custom-snippets.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"showSuccessMessage\",\n    \"Magento_Ui/js/modal/confirm\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, showSuccessMessage, confirm) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n        /* Custom snippet button messages */\n        let successCustomSnippetBtnMsg = $('#fastly-success-custom-snippet-button-msg');\n        let errorCustomSnippetBtnMsg = $('#fastly-error-custom-snippet-button-msg');\n\n        let active_version = serviceStatus.active_version;\n        let snippets;\n        let snippet_id;\n        let closestTr;\n\n        invokeAppendingTableRowWithDivOnTable();\n        checkUpdateFlag();\n\n        function checkUpdateFlag()\n        {\n            $.ajax({\n                type: 'GET',\n                url: config.getUpdateFlag,\n                showLoader: false,\n                success: function (response) {\n                    if (response.flag !== true) {    //if VCL is not Uploaded\n                        $(\".changed-vcl-snippet-warning\").text($.mage.__(response.msg)).show().off('click');\n                    }\n                }\n            })\n        }\n\n        /**\n         * Custom Snippet creation modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let customSnippetOptions = {\n            title: jQuery.mage.__('You are about to create a Custom Snippet '),\n            content: function () {\n                return document.getElementById('fastly-custom-snippet-template').textContent;\n            },\n            actionOk: function () {\n                saveCustomSnippet();\n            }\n        };\n\n        let deleteCustomSnippetOptions = {\n            title: jQuery.mage.__('You are about to delete a Custom Snippet '),\n            content: function () {\n                return document.getElementById('fastly-delete-custom-snippet-template').textContent;\n            },\n            actionOk: function () {\n                deleteCustomSnippet(snippet_id);\n            }\n        };\n\n        /**\n         * Custom Snippet edit modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let customSnippetEditOptions = {\n            title: jQuery.mage.__('You are about to edit a Custom Snippet '),\n            content: function () {\n                return document.getElementById('fastly-custom-snippet-edit-template').textContent;\n            },\n            actionOk: function () {\n                updateCustomSnippet();\n            }\n        };\n\n        function invokeAppendingTableRowWithDivOnTable()\n        {\n            if ($('#warning-message-after-change').length !== 0) {\n                return;\n            }\n\n            appendTableRowWithDiv(\n                $('#row_system_full_page_cache_fastly_fastly_custom_snippets .form-list > tbody'),\n                'warning-message-after-change',\n                'message message-warning changed-vcl-snippet-warning',\n                {\n                    'font-size': '1.2rem',\n                    'margin-top': '5px',\n                    'padding': '1.4rem 4rem 1.4rem 5.5rem',\n                    'display': 'none'\n                }\n            );\n        }\n\n        function appendTableRowWithDiv(field, id, classSelector, style)\n        {\n            let tr = document.createElement('tr');\n            let td = document.createElement('td');\n            let td2 = document.createElement('td');\n            let td3 = document.createElement('td');\n            let div = document.createElement('div');\n            div.setAttribute('class', classSelector);\n            div.setAttribute('id', id);\n            td.setAttribute('class', 'label');\n            tr.append(td);\n            td2.setAttribute('class', 'value');\n            td2.append(div);\n            tr.append(td2);\n            tr.append(td3);\n            field.append(tr);\n            $(\"#\" + id).css(style);\n        }\n\n        /**\n         * Trigger the Custom Snippet list call\n         */\n        getCustomSnippets(false).done(function (response) {\n            $('.loading-snippets').hide();\n            if (response.status !== false) {\n                snippets = response.snippets;\n                processCustomSnippets(snippets);\n            } else {\n                $('.no-snippets').show();\n            }\n        });\n\n        /**\n         * Save a Custom Snippet\n         */\n        function saveCustomSnippet()\n        {\n            let custom_name = $('#custom_snippet_name').val();\n            let custom_type = $('#custom_snippet_type').val();\n            let custom_priority = $('#custom_snippet_priority').val();\n            let custom_vcl = $('#custom_snippet_content').val();\n            let msgWarning = $('.fastly-message-error');\n\n            if (!custom_name || !custom_type || !custom_priority || !custom_vcl) {\n                msgWarning.text($.mage.__('Please fill out the required fields.')).show();\n                return;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createCustomSnippetUrl,\n                data: {\n                    'name': custom_name,\n                    'type': custom_type,\n                    'priority': custom_priority,\n                    'vcl': custom_vcl,\n                    'edit': false\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        active_version = response.active_version;\n                        modal.modal('closeModal');\n                        successCustomSnippetBtnMsg.text($.mage.__('Custom snippet successfully created.')).show();\n                        setUpdateFlagToFalse();\n                        getCustomSnippets().done(function (snippetsResp) {\n                            $('.loading-snippets').hide();\n                            if (snippetsResp.status !== false) {\n                                snippets = snippetsResp.snippets;\n                                processCustomSnippets(snippets);\n                            } else {\n                                $('.no-snippets').show();\n                            }\n                        });\n                    } else {\n                        msgWarning.text($.mage.__(response.msg)).show();\n                    }\n                },\n                error: function () {\n                    return errorCustomSnippetBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Retrieve a Custom Snippet\n         *\n         * @returns {*}\n         */\n        function getCustomSnippets()\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getCustomSnippetsUrl,\n                showLoader: false\n            });\n        }\n\n        /**\n         * Process and display Custom Snippets\n         *\n         * @param snippets\n         */\n        function processCustomSnippets(snippets)\n        {\n            let html = '';\n            $.each(snippets, function (index, snippet) {\n                html += \"<tr id='fastly_\" + index + \"'>\";\n                html += \"<td><input data-snippetId='\" + index + \"' id='snippet_\" + index + \"' value='\" + snippet + \"' disabled='disabled' class='input-text' type='text'></td>\";\n                html += \"<td class='col-actions'><button class='action-delete fastly-edit-snippet-icon' data-snippet-id='\" + snippet + \"' id='fastly-edit-snippet\" + index + \"' title='Edit custom snippet' type='button'></button>\";\n                html += \"<span>&nbsp;&nbsp;</span><button class='action-delete fastly-delete-snippet-icon' data-snippet-id='\" + snippet + \"' id='fastly-delete-snippet\" + index + \"' title='Delete custom snippet' type='button'></button></td></tr>\"\n            });\n            if (html !== '') {\n                $('.no-snippets').hide();\n            }\n            $('#fastly-snippets-list').html(html);\n        }\n\n        /**\n         * set flag \"updated\" to false inside core_config_data when VCL is modified\n         */\n        function setUpdateFlagToFalse()\n        {\n            $.ajax({\n                type: 'GET',\n                url: config.changeUpdateFlag,\n                showLoader: true,\n                success: function (response) {\n                    $(\".changed-vcl-snippet-warning\").text($.mage.__(response.msg)).show().off('click');\n                }\n            })\n        }\n\n        /**\n         * Delete a Custom Snippet\n         *\n         * @param snippet_id\n         * @returns {*}\n         */\n        function deleteCustomSnippet(snippet_id)\n        {\n            let activate_flag = false;\n\n            if ($('#fastly_delete_custom_snippet_activate').is(':checked')) {\n                activate_flag = true;\n            }\n            return $.ajax({\n                type: \"GET\",\n                url: config.deleteCustomSnippet,\n                showLoader: true,\n                data: {\n                    'snippet_id': snippet_id,\n                    'active_version': active_version,\n                    'activate_flag': activate_flag\n                },\n                beforeSend: function () {\n                    resetAllMessages();\n                },\n                success: function (response) {\n                    if (response.status === true) {\n                        modal.modal('closeModal');\n                        closestTr.remove();\n                        successCustomSnippetBtnMsg.text($.mage.__('Custom snippet successfully deleted.')).show();\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n\n        /**\n         * Update a Custom Snippet\n         */\n        function updateCustomSnippet()\n        {\n            let custom_name = $('#custom_snippet_name').val();\n            let original_name = $('#original_snippet_name').val();\n            let custom_type = $('#custom_snippet_type').val();\n            let custom_priority = $('#custom_snippet_priority').val();\n            let custom_vcl = $('#custom_snippet_content').val();\n            let msgWarning = $('.fastly-message-error');\n\n            if (!custom_name || !custom_type || !custom_priority || !custom_vcl) {\n                msgWarning.text($.mage.__('Please fill out the required fields.')).show();\n                return;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createCustomSnippetUrl,\n                data: {\n                    'name': custom_name,\n                    'type': custom_type,\n                    'priority': custom_priority,\n                    'vcl': custom_vcl,\n                    'edit': true,\n                    'original': original_name\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        active_version = response.active_version;\n                        modal.modal('closeModal');\n                        successCustomSnippetBtnMsg.text($.mage.__('Custom snippet successfully updated.')).show();\n                        setUpdateFlagToFalse();\n                        getCustomSnippets(false).done(function (snippetsResp) {\n                            $('.loading-snippets').hide();\n                            if (snippetsResp.status !== false) {\n                                if (snippetsResp.snippets.length > 0) {\n                                    let snippets = snippetsResp.snippets;\n                                    processCustomSnippets(snippets);\n                                } else {\n                                    $('.no-snippets').show();\n                                }\n                            }\n                        })\n                    } else {\n                        msgWarning.text($.mage.__(response.msg)).show();\n                    }\n                },\n                error: function () {\n                    return errorCustomSnippetBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Custom Snippet create button on click event\n         */\n        $('#fastly_custom_vcl_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorCustomSnippetBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n                setServiceLabel(active_version, next_version, service_name);\n                overlay(customSnippetOptions);\n                $('.upload-button span').text('Create');\n            }).fail(function () {\n                return errorCustomSnippetBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Custom Snippet delete button on click event\n         */\n        $('body').on('click', 'button.fastly-delete-snippet-icon', function () {\n            snippet_id = $(this).data('snippet-id');\n            closestTr = $(this).closest('tr');\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorCustomSnippetBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n                overlay(deleteCustomSnippetOptions);\n                $('.fastly-message-notice').text('You are about to delete the ' + snippet_id + ' custom snippet.').show();\n                $('.maintenance-checkbox-container').hide();\n                $.when(\n                    $.ajax({\n                        type: \"GET\",\n                        url: config.checkCustomSnippet,\n                        data: {\n                            'snippet_id': snippet_id,\n                            'active_version': active_version\n                        },\n                        showLoader: true\n                    })\n                ).done(function (response) {\n                    if (response.status === true) {\n                        setServiceLabel(active_version, next_version, service_name);\n                        $('.maintenance-checkbox-container').show();\n                    }\n                });\n                $('.upload-button span').text('Delete');\n            }).fail(function () {\n                return errorCustomSnippetBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Custom Snippet edit button on click event\n         */\n        $('body').on('click', 'button.fastly-edit-snippet-icon', function () {\n            let snippet_id = $(this).data('snippet-id');\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorCustomSnippetBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n                setServiceLabel(active_version, next_version, service_name);\n                $.when(\n                    $.ajax({\n                        type: \"GET\",\n                        url: config.getCustomSnippet,\n                        data: {'snippet_id': snippet_id},\n                        showLoader: true,\n                    })\n                ).done(function (response) {\n                    if (response.status === true) {\n                        overlay(customSnippetEditOptions);\n                        $('.upload-button span').text('Save');\n                        $('#custom_snippet_name').val(response.name);\n                        $('#original_snippet_name').val(response.original);\n                        $('#custom_snippet_type').val(response.type);\n                        $('#custom_snippet_priority').val(response.priority);\n                        $('#custom_snippet_content').val(response.content);\n                    }\n                });\n            }).fail(function () {\n                return errorCustomSnippetBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n    }\n});","Fastly_Cdn/js/handlebars-v4.0.12.js":"// @codingStandardsIgnoreFile\n/**\n * @codingStandardsIgnoreFile\n */\n/**!\n\n @license\n handlebars v4.0.12\n\nCopyright (C) 2011-2017 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Handlebars\"] = factory();\n\telse\n\t\troot[\"Handlebars\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _handlebarsRuntime = __webpack_require__(2);\n\n\tvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);\n\n\t// Compiler imports\n\n\tvar _handlebarsCompilerAst = __webpack_require__(35);\n\n\tvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\n\tvar _handlebarsCompilerBase = __webpack_require__(36);\n\n\tvar _handlebarsCompilerCompiler = __webpack_require__(41);\n\n\tvar _handlebarsCompilerJavascriptCompiler = __webpack_require__(42);\n\n\tvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\n\tvar _handlebarsCompilerVisitor = __webpack_require__(39);\n\n\tvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\n\tvar _handlebarsNoConflict = __webpack_require__(34);\n\n\tvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n\tvar _create = _handlebarsRuntime2['default'].create;\n\tfunction create() {\n\t  var hb = _create();\n\n\t  hb.compile = function (input, options) {\n\t    return _handlebarsCompilerCompiler.compile(input, options, hb);\n\t  };\n\t  hb.precompile = function (input, options) {\n\t    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n\t  };\n\n\t  hb.AST = _handlebarsCompilerAst2['default'];\n\t  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n\t  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n\t  hb.Parser = _handlebarsCompilerBase.parser;\n\t  hb.parse = _handlebarsCompilerBase.parse;\n\n\t  return hb;\n\t}\n\n\tvar inst = create();\n\tinst.create = create;\n\n\t_handlebarsNoConflict2['default'](inst);\n\n\tinst.Visitor = _handlebarsCompilerVisitor2['default'];\n\n\tinst['default'] = inst;\n\n\texports['default'] = inst;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\texports[\"default\"] = function (obj) {\n\t  return obj && obj.__esModule ? obj : {\n\t    \"default\": obj\n\t  };\n\t};\n\n\texports.__esModule = true;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireWildcard = __webpack_require__(3)['default'];\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _handlebarsBase = __webpack_require__(4);\n\n\tvar base = _interopRequireWildcard(_handlebarsBase);\n\n\t// Each of these augment the Handlebars object. No need to setup here.\n\t// (This is done to easily share code between commonjs and browse envs)\n\n\tvar _handlebarsSafeString = __webpack_require__(21);\n\n\tvar _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);\n\n\tvar _handlebarsException = __webpack_require__(6);\n\n\tvar _handlebarsException2 = _interopRequireDefault(_handlebarsException);\n\n\tvar _handlebarsUtils = __webpack_require__(5);\n\n\tvar Utils = _interopRequireWildcard(_handlebarsUtils);\n\n\tvar _handlebarsRuntime = __webpack_require__(22);\n\n\tvar runtime = _interopRequireWildcard(_handlebarsRuntime);\n\n\tvar _handlebarsNoConflict = __webpack_require__(34);\n\n\tvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n\t// For compatibility and usage outside of module systems, make the Handlebars object a namespace\n\tfunction create() {\n\t  var hb = new base.HandlebarsEnvironment();\n\n\t  Utils.extend(hb, base);\n\t  hb.SafeString = _handlebarsSafeString2['default'];\n\t  hb.Exception = _handlebarsException2['default'];\n\t  hb.Utils = Utils;\n\t  hb.escapeExpression = Utils.escapeExpression;\n\n\t  hb.VM = runtime;\n\t  hb.template = function (spec) {\n\t    return runtime.template(spec, hb);\n\t  };\n\n\t  return hb;\n\t}\n\n\tvar inst = create();\n\tinst.create = create;\n\n\t_handlebarsNoConflict2['default'](inst);\n\n\tinst['default'] = inst;\n\n\texports['default'] = inst;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\texports[\"default\"] = function (obj) {\n\t  if (obj && obj.__esModule) {\n\t    return obj;\n\t  } else {\n\t    var newObj = {};\n\n\t    if (obj != null) {\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n\t      }\n\t    }\n\n\t    newObj[\"default\"] = obj;\n\t    return newObj;\n\t  }\n\t};\n\n\texports.__esModule = true;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.HandlebarsEnvironment = HandlebarsEnvironment;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _helpers = __webpack_require__(10);\n\n\tvar _decorators = __webpack_require__(18);\n\n\tvar _logger = __webpack_require__(20);\n\n\tvar _logger2 = _interopRequireDefault(_logger);\n\n\tvar VERSION = '4.0.12';\n\texports.VERSION = VERSION;\n\tvar COMPILER_REVISION = 7;\n\n\texports.COMPILER_REVISION = COMPILER_REVISION;\n\tvar REVISION_CHANGES = {\n\t  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n\t  2: '== 1.0.0-rc.3',\n\t  3: '== 1.0.0-rc.4',\n\t  4: '== 1.x.x',\n\t  5: '== 2.0.0-alpha.x',\n\t  6: '>= 2.0.0-beta.1',\n\t  7: '>= 4.0.0'\n\t};\n\n\texports.REVISION_CHANGES = REVISION_CHANGES;\n\tvar objectType = '[object Object]';\n\n\tfunction HandlebarsEnvironment(helpers, partials, decorators) {\n\t  this.helpers = helpers || {};\n\t  this.partials = partials || {};\n\t  this.decorators = decorators || {};\n\n\t  _helpers.registerDefaultHelpers(this);\n\t  _decorators.registerDefaultDecorators(this);\n\t}\n\n\tHandlebarsEnvironment.prototype = {\n\t  constructor: HandlebarsEnvironment,\n\n\t  logger: _logger2['default'],\n\t  log: _logger2['default'].log,\n\n\t  registerHelper: function registerHelper(name, fn) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      if (fn) {\n\t        throw new _exception2['default']('Arg not supported with multiple helpers');\n\t      }\n\t      _utils.extend(this.helpers, name);\n\t    } else {\n\t      this.helpers[name] = fn;\n\t    }\n\t  },\n\t  unregisterHelper: function unregisterHelper(name) {\n\t    delete this.helpers[name];\n\t  },\n\n\t  registerPartial: function registerPartial(name, partial) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      _utils.extend(this.partials, name);\n\t    } else {\n\t      if (typeof partial === 'undefined') {\n\t        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n\t      }\n\t      this.partials[name] = partial;\n\t    }\n\t  },\n\t  unregisterPartial: function unregisterPartial(name) {\n\t    delete this.partials[name];\n\t  },\n\n\t  registerDecorator: function registerDecorator(name, fn) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      if (fn) {\n\t        throw new _exception2['default']('Arg not supported with multiple decorators');\n\t      }\n\t      _utils.extend(this.decorators, name);\n\t    } else {\n\t      this.decorators[name] = fn;\n\t    }\n\t  },\n\t  unregisterDecorator: function unregisterDecorator(name) {\n\t    delete this.decorators[name];\n\t  }\n\t};\n\n\tvar log = _logger2['default'].log;\n\n\texports.log = log;\n\texports.createFrame = _utils.createFrame;\n\texports.logger = _logger2['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.extend = extend;\n\texports.indexOf = indexOf;\n\texports.escapeExpression = escapeExpression;\n\texports.isEmpty = isEmpty;\n\texports.createFrame = createFrame;\n\texports.blockParams = blockParams;\n\texports.appendContextPath = appendContextPath;\n\tvar escape = {\n\t  '&': '&amp;',\n\t  '<': '&lt;',\n\t  '>': '&gt;',\n\t  '\"': '&quot;',\n\t  \"'\": '&#x27;',\n\t  '`': '&#x60;',\n\t  '=': '&#x3D;'\n\t};\n\n\tvar badChars = /[&<>\"'`=]/g,\n\t    possible = /[&<>\"'`=]/;\n\n\tfunction escapeChar(chr) {\n\t  return escape[chr];\n\t}\n\n\tfunction extend(obj /* , ...source */) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    for (var key in arguments[i]) {\n\t      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n\t        obj[key] = arguments[i][key];\n\t      }\n\t    }\n\t  }\n\n\t  return obj;\n\t}\n\n\tvar toString = Object.prototype.toString;\n\n\texports.toString = toString;\n\t// Sourced from lodash\n\t// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n\t/* eslint-disable func-style */\n\tvar isFunction = function isFunction(value) {\n\t  return typeof value === 'function';\n\t};\n\t// fallback for older versions of Chrome and Safari\n\t/* istanbul ignore next */\n\tif (isFunction(/x/)) {\n\t  exports.isFunction = isFunction = function (value) {\n\t    return typeof value === 'function' && toString.call(value) === '[object Function]';\n\t  };\n\t}\n\texports.isFunction = isFunction;\n\n\t/* eslint-enable func-style */\n\n\t/* istanbul ignore next */\n\tvar isArray = Array.isArray || function (value) {\n\t  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n\t};\n\n\texports.isArray = isArray;\n\t// Older IE versions do not directly support indexOf so we must implement our own, sadly.\n\n\tfunction indexOf(array, value) {\n\t  for (var i = 0, len = array.length; i < len; i++) {\n\t    if (array[i] === value) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\n\tfunction escapeExpression(string) {\n\t  if (typeof string !== 'string') {\n\t    // don't escape SafeStrings, since they're already safe\n\t    if (string && string.toHTML) {\n\t      return string.toHTML();\n\t    } else if (string == null) {\n\t      return '';\n\t    } else if (!string) {\n\t      return string + '';\n\t    }\n\n\t    // Force a string conversion as this will be done by the append regardless and\n\t    // the regex test will do this transparently behind the scenes, causing issues if\n\t    // an object's to string has escaped characters in it.\n\t    string = '' + string;\n\t  }\n\n\t  if (!possible.test(string)) {\n\t    return string;\n\t  }\n\t  return string.replace(badChars, escapeChar);\n\t}\n\n\tfunction isEmpty(value) {\n\t  if (!value && value !== 0) {\n\t    return true;\n\t  } else if (isArray(value) && value.length === 0) {\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\n\tfunction createFrame(object) {\n\t  var frame = extend({}, object);\n\t  frame._parent = object;\n\t  return frame;\n\t}\n\n\tfunction blockParams(params, ids) {\n\t  params.path = ids;\n\t  return params;\n\t}\n\n\tfunction appendContextPath(contextPath, id) {\n\t  return (contextPath ? contextPath + '.' : '') + id;\n\t}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _Object$defineProperty = __webpack_require__(7)['default'];\n\n\texports.__esModule = true;\n\n\tvar errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\n\tfunction Exception(message, node) {\n\t  var loc = node && node.loc,\n\t      line = undefined,\n\t      column = undefined;\n\t  if (loc) {\n\t    line = loc.start.line;\n\t    column = loc.start.column;\n\n\t    message += ' - ' + line + ':' + column;\n\t  }\n\n\t  var tmp = Error.prototype.constructor.call(this, message);\n\n\t  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n\t  for (var idx = 0; idx < errorProps.length; idx++) {\n\t    this[errorProps[idx]] = tmp[errorProps[idx]];\n\t  }\n\n\t  /* istanbul ignore else */\n\t  if (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, Exception);\n\t  }\n\n\t  try {\n\t    if (loc) {\n\t      this.lineNumber = line;\n\n\t      // Work around issue under safari where we can't directly set the column value\n\t      /* istanbul ignore next */\n\t      if (_Object$defineProperty) {\n\t        Object.defineProperty(this, 'column', {\n\t          value: column,\n\t          enumerable: true\n\t        });\n\t      } else {\n\t        this.column = column;\n\t      }\n\t    }\n\t  } catch (nop) {\n\t    /* Ignore if the browser is very particular */\n\t  }\n\t}\n\n\tException.prototype = new Error();\n\n\texports['default'] = Exception;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(8), __esModule: true };\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar $ = __webpack_require__(9);\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $.setDesc(it, key, desc);\n\t};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.registerDefaultHelpers = registerDefaultHelpers;\n\n\tvar _helpersBlockHelperMissing = __webpack_require__(11);\n\n\tvar _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);\n\n\tvar _helpersEach = __webpack_require__(12);\n\n\tvar _helpersEach2 = _interopRequireDefault(_helpersEach);\n\n\tvar _helpersHelperMissing = __webpack_require__(13);\n\n\tvar _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);\n\n\tvar _helpersIf = __webpack_require__(14);\n\n\tvar _helpersIf2 = _interopRequireDefault(_helpersIf);\n\n\tvar _helpersLog = __webpack_require__(15);\n\n\tvar _helpersLog2 = _interopRequireDefault(_helpersLog);\n\n\tvar _helpersLookup = __webpack_require__(16);\n\n\tvar _helpersLookup2 = _interopRequireDefault(_helpersLookup);\n\n\tvar _helpersWith = __webpack_require__(17);\n\n\tvar _helpersWith2 = _interopRequireDefault(_helpersWith);\n\n\tfunction registerDefaultHelpers(instance) {\n\t  _helpersBlockHelperMissing2['default'](instance);\n\t  _helpersEach2['default'](instance);\n\t  _helpersHelperMissing2['default'](instance);\n\t  _helpersIf2['default'](instance);\n\t  _helpersLog2['default'](instance);\n\t  _helpersLookup2['default'](instance);\n\t  _helpersWith2['default'](instance);\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('blockHelperMissing', function (context, options) {\n\t    var inverse = options.inverse,\n\t        fn = options.fn;\n\n\t    if (context === true) {\n\t      return fn(this);\n\t    } else if (context === false || context == null) {\n\t      return inverse(this);\n\t    } else if (_utils.isArray(context)) {\n\t      if (context.length > 0) {\n\t        if (options.ids) {\n\t          options.ids = [options.name];\n\t        }\n\n\t        return instance.helpers.each(context, options);\n\t      } else {\n\t        return inverse(this);\n\t      }\n\t    } else {\n\t      if (options.data && options.ids) {\n\t        var data = _utils.createFrame(options.data);\n\t        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);\n\t        options = { data: data };\n\t      }\n\n\t      return fn(context, options);\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('each', function (context, options) {\n\t    if (!options) {\n\t      throw new _exception2['default']('Must pass iterator to #each');\n\t    }\n\n\t    var fn = options.fn,\n\t        inverse = options.inverse,\n\t        i = 0,\n\t        ret = '',\n\t        data = undefined,\n\t        contextPath = undefined;\n\n\t    if (options.data && options.ids) {\n\t      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n\t    }\n\n\t    if (_utils.isFunction(context)) {\n\t      context = context.call(this);\n\t    }\n\n\t    if (options.data) {\n\t      data = _utils.createFrame(options.data);\n\t    }\n\n\t    function execIteration(field, index, last) {\n\t      if (data) {\n\t        data.key = field;\n\t        data.index = index;\n\t        data.first = index === 0;\n\t        data.last = !!last;\n\n\t        if (contextPath) {\n\t          data.contextPath = contextPath + field;\n\t        }\n\t      }\n\n\t      ret = ret + fn(context[field], {\n\t        data: data,\n\t        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])\n\t      });\n\t    }\n\n\t    if (context && typeof context === 'object') {\n\t      if (_utils.isArray(context)) {\n\t        for (var j = context.length; i < j; i++) {\n\t          if (i in context) {\n\t            execIteration(i, i, i === context.length - 1);\n\t          }\n\t        }\n\t      } else {\n\t        var priorKey = undefined;\n\n\t        for (var key in context) {\n\t          if (context.hasOwnProperty(key)) {\n\t            // We're running the iterations one step out of sync so we can detect\n\t            // the last iteration without have to scan the object twice and create\n\t            // an itermediate keys array.\n\t            if (priorKey !== undefined) {\n\t              execIteration(priorKey, i - 1);\n\t            }\n\t            priorKey = key;\n\t            i++;\n\t          }\n\t        }\n\t        if (priorKey !== undefined) {\n\t          execIteration(priorKey, i - 1, true);\n\t        }\n\t      }\n\t    }\n\n\t    if (i === 0) {\n\t      ret = inverse(this);\n\t    }\n\n\t    return ret;\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('helperMissing', function () /* [args, ]options */{\n\t    if (arguments.length === 1) {\n\t      // A missing field in a {{foo}} construct.\n\t      return undefined;\n\t    } else {\n\t      // Someone is actually trying to call something, blow up.\n\t      throw new _exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('if', function (conditional, options) {\n\t    if (_utils.isFunction(conditional)) {\n\t      conditional = conditional.call(this);\n\t    }\n\n\t    // Default behavior is to render the positive path if the value is truthy and not empty.\n\t    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n\t    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n\t    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n\t      return options.inverse(this);\n\t    } else {\n\t      return options.fn(this);\n\t    }\n\t  });\n\n\t  instance.registerHelper('unless', function (conditional, options) {\n\t    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('log', function () /* message, options */{\n\t    var args = [undefined],\n\t        options = arguments[arguments.length - 1];\n\t    for (var i = 0; i < arguments.length - 1; i++) {\n\t      args.push(arguments[i]);\n\t    }\n\n\t    var level = 1;\n\t    if (options.hash.level != null) {\n\t      level = options.hash.level;\n\t    } else if (options.data && options.data.level != null) {\n\t      level = options.data.level;\n\t    }\n\t    args[0] = level;\n\n\t    instance.log.apply(instance, args);\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('lookup', function (obj, field) {\n\t    return obj && obj[field];\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('with', function (context, options) {\n\t    if (_utils.isFunction(context)) {\n\t      context = context.call(this);\n\t    }\n\n\t    var fn = options.fn;\n\n\t    if (!_utils.isEmpty(context)) {\n\t      var data = options.data;\n\t      if (options.data && options.ids) {\n\t        data = _utils.createFrame(options.data);\n\t        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n\t      }\n\n\t      return fn(context, {\n\t        data: data,\n\t        blockParams: _utils.blockParams([context], [data && data.contextPath])\n\t      });\n\t    } else {\n\t      return options.inverse(this);\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.registerDefaultDecorators = registerDefaultDecorators;\n\n\tvar _decoratorsInline = __webpack_require__(19);\n\n\tvar _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);\n\n\tfunction registerDefaultDecorators(instance) {\n\t  _decoratorsInline2['default'](instance);\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerDecorator('inline', function (fn, props, container, options) {\n\t    var ret = fn;\n\t    if (!props.partials) {\n\t      props.partials = {};\n\t      ret = function (context, options) {\n\t        // Create a new partials stack frame prior to exec.\n\t        var original = container.partials;\n\t        container.partials = _utils.extend({}, original, props.partials);\n\t        var ret = fn(context, options);\n\t        container.partials = original;\n\t        return ret;\n\t      };\n\t    }\n\n\t    props.partials[options.args[0]] = options.fn;\n\n\t    return ret;\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar logger = {\n\t  methodMap: ['debug', 'info', 'warn', 'error'],\n\t  level: 'info',\n\n\t  // Maps a given level value to the `methodMap` indexes above.\n\t  lookupLevel: function lookupLevel(level) {\n\t    if (typeof level === 'string') {\n\t      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n\t      if (levelMap >= 0) {\n\t        level = levelMap;\n\t      } else {\n\t        level = parseInt(level, 10);\n\t      }\n\t    }\n\n\t    return level;\n\t  },\n\n\t  // Can be overridden in the host environment\n\t  log: function log(level) {\n\t    level = logger.lookupLevel(level);\n\n\t    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n\t      var method = logger.methodMap[level];\n\t      if (!console[method]) {\n\t        // eslint-disable-line no-console\n\t        method = 'log';\n\t      }\n\n\t      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        message[_key - 1] = arguments[_key];\n\t      }\n\n\t      console[method].apply(console, message); // eslint-disable-line no-console\n\t    }\n\t  }\n\t};\n\n\texports['default'] = logger;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t// Build out our basic SafeString type\n\t'use strict';\n\n\texports.__esModule = true;\n\tfunction SafeString(string) {\n\t  this.string = string;\n\t}\n\n\tSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n\t  return '' + this.string;\n\t};\n\n\texports['default'] = SafeString;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _Object$seal = __webpack_require__(23)['default'];\n\n\tvar _interopRequireWildcard = __webpack_require__(3)['default'];\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.checkRevision = checkRevision;\n\texports.template = template;\n\texports.wrapProgram = wrapProgram;\n\texports.resolvePartial = resolvePartial;\n\texports.invokePartial = invokePartial;\n\texports.noop = noop;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar Utils = _interopRequireWildcard(_utils);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _base = __webpack_require__(4);\n\n\tfunction checkRevision(compilerInfo) {\n\t  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n\t      currentRevision = _base.COMPILER_REVISION;\n\n\t  if (compilerRevision !== currentRevision) {\n\t    if (compilerRevision < currentRevision) {\n\t      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n\t          compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n\t      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n\t    } else {\n\t      // Use the embedded version info since the runtime doesn't know about this revision yet\n\t      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n\t    }\n\t  }\n\t}\n\n\tfunction template(templateSpec, env) {\n\t  /* istanbul ignore next */\n\t  if (!env) {\n\t    throw new _exception2['default']('No environment passed to template');\n\t  }\n\t  if (!templateSpec || !templateSpec.main) {\n\t    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n\t  }\n\n\t  templateSpec.main.decorator = templateSpec.main_d;\n\n\t  // Note: Using env.VM references rather than local var references throughout this section to allow\n\t  // for external users to override these as psuedo-supported APIs.\n\t  env.VM.checkRevision(templateSpec.compiler);\n\n\t  function invokePartialWrapper(partial, context, options) {\n\t    if (options.hash) {\n\t      context = Utils.extend({}, context, options.hash);\n\t      if (options.ids) {\n\t        options.ids[0] = true;\n\t      }\n\t    }\n\n\t    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\t    var result = env.VM.invokePartial.call(this, partial, context, options);\n\n\t    if (result == null && env.compile) {\n\t      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n\t      result = options.partials[options.name](context, options);\n\t    }\n\t    if (result != null) {\n\t      if (options.indent) {\n\t        var lines = result.split('\\n');\n\t        for (var i = 0, l = lines.length; i < l; i++) {\n\t          if (!lines[i] && i + 1 === l) {\n\t            break;\n\t          }\n\n\t          lines[i] = options.indent + lines[i];\n\t        }\n\t        result = lines.join('\\n');\n\t      }\n\t      return result;\n\t    } else {\n\t      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n\t    }\n\t  }\n\n\t  // Just add water\n\t  var container = {\n\t    strict: function strict(obj, name) {\n\t      if (!(name in obj)) {\n\t        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj);\n\t      }\n\t      return obj[name];\n\t    },\n\t    lookup: function lookup(depths, name) {\n\t      var len = depths.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (depths[i] && depths[i][name] != null) {\n\t          return depths[i][name];\n\t        }\n\t      }\n\t    },\n\t    lambda: function lambda(current, context) {\n\t      return typeof current === 'function' ? current.call(context) : current;\n\t    },\n\n\t    escapeExpression: Utils.escapeExpression,\n\t    invokePartial: invokePartialWrapper,\n\n\t    fn: function fn(i) {\n\t      var ret = templateSpec[i];\n\t      ret.decorator = templateSpec[i + '_d'];\n\t      return ret;\n\t    },\n\n\t    programs: [],\n\t    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n\t      var programWrapper = this.programs[i],\n\t          fn = this.fn(i);\n\t      if (data || depths || blockParams || declaredBlockParams) {\n\t        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n\t      } else if (!programWrapper) {\n\t        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n\t      }\n\t      return programWrapper;\n\t    },\n\n\t    data: function data(value, depth) {\n\t      while (value && depth--) {\n\t        value = value._parent;\n\t      }\n\t      return value;\n\t    },\n\t    merge: function merge(param, common) {\n\t      var obj = param || common;\n\n\t      if (param && common && param !== common) {\n\t        obj = Utils.extend({}, common, param);\n\t      }\n\n\t      return obj;\n\t    },\n\t    // An empty object to use as replacement for null-contexts\n\t    nullContext: _Object$seal({}),\n\n\t    noop: env.VM.noop,\n\t    compilerInfo: templateSpec.compiler\n\t  };\n\n\t  function ret(context) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t    var data = options.data;\n\n\t    ret._setup(options);\n\t    if (!options.partial && templateSpec.useData) {\n\t      data = initData(context, data);\n\t    }\n\t    var depths = undefined,\n\t        blockParams = templateSpec.useBlockParams ? [] : undefined;\n\t    if (templateSpec.useDepths) {\n\t      if (options.depths) {\n\t        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n\t      } else {\n\t        depths = [context];\n\t      }\n\t    }\n\n\t    function main(context /*, options*/) {\n\t      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n\t    }\n\t    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n\t    return main(context, options);\n\t  }\n\t  ret.isTop = true;\n\n\t  ret._setup = function (options) {\n\t    if (!options.partial) {\n\t      container.helpers = container.merge(options.helpers, env.helpers);\n\n\t      if (templateSpec.usePartial) {\n\t        container.partials = container.merge(options.partials, env.partials);\n\t      }\n\t      if (templateSpec.usePartial || templateSpec.useDecorators) {\n\t        container.decorators = container.merge(options.decorators, env.decorators);\n\t      }\n\t    } else {\n\t      container.helpers = options.helpers;\n\t      container.partials = options.partials;\n\t      container.decorators = options.decorators;\n\t    }\n\t  };\n\n\t  ret._child = function (i, data, blockParams, depths) {\n\t    if (templateSpec.useBlockParams && !blockParams) {\n\t      throw new _exception2['default']('must pass block params');\n\t    }\n\t    if (templateSpec.useDepths && !depths) {\n\t      throw new _exception2['default']('must pass parent depths');\n\t    }\n\n\t    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n\t  };\n\t  return ret;\n\t}\n\n\tfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n\t  function prog(context) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t    var currentDepths = depths;\n\t    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n\t      currentDepths = [context].concat(depths);\n\t    }\n\n\t    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n\t  }\n\n\t  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n\t  prog.program = i;\n\t  prog.depth = depths ? depths.length : 0;\n\t  prog.blockParams = declaredBlockParams || 0;\n\t  return prog;\n\t}\n\n\tfunction resolvePartial(partial, context, options) {\n\t  if (!partial) {\n\t    if (options.name === '@partial-block') {\n\t      partial = options.data['partial-block'];\n\t    } else {\n\t      partial = options.partials[options.name];\n\t    }\n\t  } else if (!partial.call && !options.name) {\n\t    // This is a dynamic partial that returned a string\n\t    options.name = partial;\n\t    partial = options.partials[partial];\n\t  }\n\t  return partial;\n\t}\n\n\tfunction invokePartial(partial, context, options) {\n\t  // Use the current closure context to save the partial-block if this partial\n\t  var currentPartialBlock = options.data && options.data['partial-block'];\n\t  options.partial = true;\n\t  if (options.ids) {\n\t    options.data.contextPath = options.ids[0] || options.data.contextPath;\n\t  }\n\n\t  var partialBlock = undefined;\n\t  if (options.fn && options.fn !== noop) {\n\t    (function () {\n\t      options.data = _base.createFrame(options.data);\n\t      // Wrapper function to get access to currentPartialBlock from the closure\n\t      var fn = options.fn;\n\t      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t        // Restore the partial-block from the closure for the execution of the block\n\t        // i.e. the part inside the block of the partial call.\n\t        options.data = _base.createFrame(options.data);\n\t        options.data['partial-block'] = currentPartialBlock;\n\t        return fn(context, options);\n\t      };\n\t      if (fn.partials) {\n\t        options.partials = Utils.extend({}, options.partials, fn.partials);\n\t      }\n\t    })();\n\t  }\n\n\t  if (partial === undefined && partialBlock) {\n\t    partial = partialBlock;\n\t  }\n\n\t  if (partial === undefined) {\n\t    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n\t  } else if (partial instanceof Function) {\n\t    return partial(context, options);\n\t  }\n\t}\n\n\tfunction noop() {\n\t  return '';\n\t}\n\n\tfunction initData(context, data) {\n\t  if (!data || !('root' in data)) {\n\t    data = data ? _base.createFrame(data) : {};\n\t    data.root = context;\n\t  }\n\t  return data;\n\t}\n\n\tfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n\t  if (fn.decorator) {\n\t    var props = {};\n\t    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n\t    Utils.extend(prog, props);\n\t  }\n\t  return prog;\n\t}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(24), __esModule: true };\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(25);\n\tmodule.exports = __webpack_require__(30).Object.seal;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.17 Object.seal(O)\n\tvar isObject = __webpack_require__(26);\n\n\t__webpack_require__(27)('seal', function($seal){\n\t  return function seal(it){\n\t    return $seal && isObject(it) ? $seal(it) : it;\n\t  };\n\t});\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __webpack_require__(28)\n\t  , core    = __webpack_require__(30)\n\t  , fails   = __webpack_require__(33);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(29)\n\t  , core      = __webpack_require__(30)\n\t  , ctx       = __webpack_require__(31)\n\t  , PROTOTYPE = 'prototype';\n\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && key in target;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(param){\n\t        return this instanceof C ? new C(param) : C(param);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;  // forced\n\t$export.G = 2;  // global\n\t$export.S = 4;  // static\n\t$export.P = 8;  // proto\n\t$export.B = 16; // bind\n\t$export.W = 32; // wrap\n\tmodule.exports = $export;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(32);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/* global window */\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (Handlebars) {\n\t  /* istanbul ignore next */\n\t  var root = typeof global !== 'undefined' ? global : window,\n\t      $Handlebars = root.Handlebars;\n\t  /* istanbul ignore next */\n\t  Handlebars.noConflict = function () {\n\t    if (root.Handlebars === Handlebars) {\n\t      root.Handlebars = $Handlebars;\n\t    }\n\t    return Handlebars;\n\t  };\n\t};\n\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\tvar AST = {\n\t  // Public API used to evaluate derived attributes regarding AST nodes\n\t  helpers: {\n\t    // a mustache is definitely a helper if:\n\t    // * it is an eligible helper, and\n\t    // * it has at least one parameter or hash segment\n\t    helperExpression: function helperExpression(node) {\n\t      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);\n\t    },\n\n\t    scopedId: function scopedId(path) {\n\t      return (/^\\.|this\\b/.test(path.original)\n\t      );\n\t    },\n\n\t    // an ID is simple if it only has one part, and that part is not\n\t    // `..` or `this`.\n\t    simpleId: function simpleId(path) {\n\t      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n\t    }\n\t  }\n\t};\n\n\t// Must be exported as an object rather than the root of the module as the jison lexer\n\t// must modify the object to operate properly.\n\texports['default'] = AST;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\tvar _interopRequireWildcard = __webpack_require__(3)['default'];\n\n\texports.__esModule = true;\n\texports.parse = parse;\n\n\tvar _parser = __webpack_require__(37);\n\n\tvar _parser2 = _interopRequireDefault(_parser);\n\n\tvar _whitespaceControl = __webpack_require__(38);\n\n\tvar _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);\n\n\tvar _helpers = __webpack_require__(40);\n\n\tvar Helpers = _interopRequireWildcard(_helpers);\n\n\tvar _utils = __webpack_require__(5);\n\n\texports.parser = _parser2['default'];\n\n\tvar yy = {};\n\t_utils.extend(yy, Helpers);\n\n\tfunction parse(input, options) {\n\t  // Just return if an already-compiled AST was passed in.\n\t  if (input.type === 'Program') {\n\t    return input;\n\t  }\n\n\t  _parser2['default'].yy = yy;\n\n\t  // Altering the shared object here, but this is ok as parser is a sync operation\n\t  yy.locInfo = function (locInfo) {\n\t    return new yy.SourceLocation(options && options.srcName, locInfo);\n\t  };\n\n\t  var strip = new _whitespaceControl2['default'](options);\n\t  return strip.accept(_parser2['default'].parse(input));\n\t}\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\t// File ignored in coverage tests via setting in .istanbul.yml\n\t/* Jison generated parser */\n\t\"use strict\";\n\n\texports.__esModule = true;\n\tvar handlebars = (function () {\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"root\": 3, \"program\": 4, \"EOF\": 5, \"program_repetition0\": 6, \"statement\": 7, \"mustache\": 8, \"block\": 9, \"rawBlock\": 10, \"partial\": 11, \"partialBlock\": 12, \"content\": 13, \"COMMENT\": 14, \"CONTENT\": 15, \"openRawBlock\": 16, \"rawBlock_repetition_plus0\": 17, \"END_RAW_BLOCK\": 18, \"OPEN_RAW_BLOCK\": 19, \"helperName\": 20, \"openRawBlock_repetition0\": 21, \"openRawBlock_option0\": 22, \"CLOSE_RAW_BLOCK\": 23, \"openBlock\": 24, \"block_option0\": 25, \"closeBlock\": 26, \"openInverse\": 27, \"block_option1\": 28, \"OPEN_BLOCK\": 29, \"openBlock_repetition0\": 30, \"openBlock_option0\": 31, \"openBlock_option1\": 32, \"CLOSE\": 33, \"OPEN_INVERSE\": 34, \"openInverse_repetition0\": 35, \"openInverse_option0\": 36, \"openInverse_option1\": 37, \"openInverseChain\": 38, \"OPEN_INVERSE_CHAIN\": 39, \"openInverseChain_repetition0\": 40, \"openInverseChain_option0\": 41, \"openInverseChain_option1\": 42, \"inverseAndProgram\": 43, \"INVERSE\": 44, \"inverseChain\": 45, \"inverseChain_option0\": 46, \"OPEN_ENDBLOCK\": 47, \"OPEN\": 48, \"mustache_repetition0\": 49, \"mustache_option0\": 50, \"OPEN_UNESCAPED\": 51, \"mustache_repetition1\": 52, \"mustache_option1\": 53, \"CLOSE_UNESCAPED\": 54, \"OPEN_PARTIAL\": 55, \"partialName\": 56, \"partial_repetition0\": 57, \"partial_option0\": 58, \"openPartialBlock\": 59, \"OPEN_PARTIAL_BLOCK\": 60, \"openPartialBlock_repetition0\": 61, \"openPartialBlock_option0\": 62, \"param\": 63, \"sexpr\": 64, \"OPEN_SEXPR\": 65, \"sexpr_repetition0\": 66, \"sexpr_option0\": 67, \"CLOSE_SEXPR\": 68, \"hash\": 69, \"hash_repetition_plus0\": 70, \"hashSegment\": 71, \"ID\": 72, \"EQUALS\": 73, \"blockParams\": 74, \"OPEN_BLOCK_PARAMS\": 75, \"blockParams_repetition_plus0\": 76, \"CLOSE_BLOCK_PARAMS\": 77, \"path\": 78, \"dataName\": 79, \"STRING\": 80, \"NUMBER\": 81, \"BOOLEAN\": 82, \"UNDEFINED\": 83, \"NULL\": 84, \"DATA\": 85, \"pathSegments\": 86, \"SEP\": 87, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 5: \"EOF\", 14: \"COMMENT\", 15: \"CONTENT\", 18: \"END_RAW_BLOCK\", 19: \"OPEN_RAW_BLOCK\", 23: \"CLOSE_RAW_BLOCK\", 29: \"OPEN_BLOCK\", 33: \"CLOSE\", 34: \"OPEN_INVERSE\", 39: \"OPEN_INVERSE_CHAIN\", 44: \"INVERSE\", 47: \"OPEN_ENDBLOCK\", 48: \"OPEN\", 51: \"OPEN_UNESCAPED\", 54: \"CLOSE_UNESCAPED\", 55: \"OPEN_PARTIAL\", 60: \"OPEN_PARTIAL_BLOCK\", 65: \"OPEN_SEXPR\", 68: \"CLOSE_SEXPR\", 72: \"ID\", 73: \"EQUALS\", 75: \"OPEN_BLOCK_PARAMS\", 77: \"CLOSE_BLOCK_PARAMS\", 80: \"STRING\", 81: \"NUMBER\", 82: \"BOOLEAN\", 83: \"UNDEFINED\", 84: \"NULL\", 85: \"DATA\", 87: \"SEP\" },\n\t        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$\n\t        /**/) {\n\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 1:\n\t                    return $$[$0 - 1];\n\t                    break;\n\t                case 2:\n\t                    this.$ = yy.prepareProgram($$[$0]);\n\t                    break;\n\t                case 3:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 4:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 5:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 6:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 7:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 8:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 9:\n\t                    this.$ = {\n\t                        type: 'CommentStatement',\n\t                        value: yy.stripComment($$[$0]),\n\t                        strip: yy.stripFlags($$[$0], $$[$0]),\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 10:\n\t                    this.$ = {\n\t                        type: 'ContentStatement',\n\t                        original: $$[$0],\n\t                        value: $$[$0],\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 11:\n\t                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n\t                    break;\n\t                case 12:\n\t                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };\n\t                    break;\n\t                case 13:\n\t                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);\n\t                    break;\n\t                case 14:\n\t                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);\n\t                    break;\n\t                case 15:\n\t                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 16:\n\t                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 17:\n\t                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 18:\n\t                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };\n\t                    break;\n\t                case 19:\n\t                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),\n\t                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);\n\t                    program.chained = true;\n\n\t                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };\n\n\t                    break;\n\t                case 20:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 21:\n\t                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };\n\t                    break;\n\t                case 22:\n\t                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n\t                    break;\n\t                case 23:\n\t                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n\t                    break;\n\t                case 24:\n\t                    this.$ = {\n\t                        type: 'PartialStatement',\n\t                        name: $$[$0 - 3],\n\t                        params: $$[$0 - 2],\n\t                        hash: $$[$0 - 1],\n\t                        indent: '',\n\t                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 25:\n\t                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n\t                    break;\n\t                case 26:\n\t                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };\n\t                    break;\n\t                case 27:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 28:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 29:\n\t                    this.$ = {\n\t                        type: 'SubExpression',\n\t                        path: $$[$0 - 3],\n\t                        params: $$[$0 - 2],\n\t                        hash: $$[$0 - 1],\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 30:\n\t                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 31:\n\t                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 32:\n\t                    this.$ = yy.id($$[$0 - 1]);\n\t                    break;\n\t                case 33:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 34:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 35:\n\t                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 36:\n\t                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 37:\n\t                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 38:\n\t                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 39:\n\t                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 40:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 41:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 42:\n\t                    this.$ = yy.preparePath(true, $$[$0], this._$);\n\t                    break;\n\t                case 43:\n\t                    this.$ = yy.preparePath(false, $$[$0], this._$);\n\t                    break;\n\t                case 44:\n\t                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];\n\t                    break;\n\t                case 45:\n\t                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];\n\t                    break;\n\t                case 46:\n\t                    this.$ = [];\n\t                    break;\n\t                case 47:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 48:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 49:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 50:\n\t                    this.$ = [];\n\t                    break;\n\t                case 51:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 58:\n\t                    this.$ = [];\n\t                    break;\n\t                case 59:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 64:\n\t                    this.$ = [];\n\t                    break;\n\t                case 65:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 70:\n\t                    this.$ = [];\n\t                    break;\n\t                case 71:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 78:\n\t                    this.$ = [];\n\t                    break;\n\t                case 79:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 82:\n\t                    this.$ = [];\n\t                    break;\n\t                case 83:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 86:\n\t                    this.$ = [];\n\t                    break;\n\t                case 87:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 90:\n\t                    this.$ = [];\n\t                    break;\n\t                case 91:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 94:\n\t                    this.$ = [];\n\t                    break;\n\t                case 95:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 98:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 99:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 100:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 101:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 13: 40, 15: [1, 20], 17: 39 }, { 20: 42, 56: 41, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 45, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 48, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 42, 56: 49, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 50, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 51] }, { 72: [1, 35], 86: 52 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 53, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 54, 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 55, 47: [2, 54] }, { 28: 60, 43: 61, 44: [1, 59], 47: [2, 56] }, { 13: 63, 15: [1, 20], 18: [1, 62] }, { 15: [2, 48], 18: [2, 48] }, { 33: [2, 86], 57: 64, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 65, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 66, 47: [1, 67] }, { 30: 68, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 69, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 70, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 71, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 75, 33: [2, 80], 50: 72, 63: 73, 64: 76, 65: [1, 44], 69: 74, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 80] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 51] }, { 20: 75, 53: 81, 54: [2, 84], 63: 82, 64: 76, 65: [1, 44], 69: 83, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 84, 47: [1, 67] }, { 47: [2, 55] }, { 4: 85, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 86, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 87, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 88, 47: [1, 67] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 75, 33: [2, 88], 58: 89, 63: 90, 64: 76, 65: [1, 44], 69: 91, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 92, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 93, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 31: 94, 33: [2, 60], 63: 95, 64: 76, 65: [1, 44], 69: 96, 70: 77, 71: 78, 72: [1, 79], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 66], 36: 97, 63: 98, 64: 76, 65: [1, 44], 69: 99, 70: 77, 71: 78, 72: [1, 79], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 22: 100, 23: [2, 52], 63: 101, 64: 76, 65: [1, 44], 69: 102, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 92], 62: 103, 63: 104, 64: 76, 65: [1, 44], 69: 105, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 106] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 107, 72: [1, 108], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 109], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 110] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 112, 46: 111, 47: [2, 76] }, { 33: [2, 70], 40: 113, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 114] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 75, 63: 116, 64: 76, 65: [1, 44], 67: 115, 68: [2, 96], 69: 117, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 118] }, { 32: 119, 33: [2, 62], 74: 120, 75: [1, 121] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 122, 74: 123, 75: [1, 121] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 124] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 125] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 109] }, { 20: 75, 63: 126, 64: 76, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 75, 33: [2, 72], 41: 127, 63: 128, 64: 76, 65: [1, 44], 69: 129, 70: 77, 71: 78, 72: [1, 79], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 130] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 131] }, { 33: [2, 63] }, { 72: [1, 133], 76: 132 }, { 33: [1, 134] }, { 33: [2, 69] }, { 15: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 135, 74: 136, 75: [1, 121] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 138], 77: [1, 137] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 139] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],\n\t        defaultActions: { 4: [2, 1], 55: [2, 55], 57: [2, 20], 61: [2, 57], 74: [2, 81], 83: [2, 85], 87: [2, 18], 91: [2, 89], 102: [2, 53], 105: [2, 93], 111: [2, 19], 112: [2, 77], 117: [2, 97], 120: [2, 63], 123: [2, 69], 124: [2, 12], 136: [2, 75], 137: [2, 32] },\n\t        parseError: function parseError(str, hash) {\n\t            throw new Error(str);\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = \"\",\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            this.lexer.setInput(input);\n\t            this.lexer.yy = this.yy;\n\t            this.yy.lexer = this.lexer;\n\t            this.yy.parser = this;\n\t            if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n\t            var yyloc = this.lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = this.lexer.options && this.lexer.options.ranges;\n\t            if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            function lex() {\n\t                var token;\n\t                token = self.lexer.lex() || 1;\n\t                if (typeof token !== \"number\") {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            }\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == \"undefined\") {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n\t                    var errStr = \"\";\n\t                    if (!recovering) {\n\t                        expected = [];\n\t                        for (p in table[state]) if (this.terminals_[p] && p > 2) {\n\t                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n\t                        }\n\t                        if (this.lexer.showPosition) {\n\t                            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n\t                        } else {\n\t                            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n\t                        }\n\t                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });\n\t                    }\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(this.lexer.yytext);\n\t                        lstack.push(this.lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = this.lexer.yyleng;\n\t                            yytext = this.lexer.yytext;\n\t                            yylineno = this.lexer.yylineno;\n\t                            yyloc = this.lexer.yylloc;\n\t                            if (recovering > 0) recovering--;\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\t                        if (typeof r !== \"undefined\") {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        }\n\t    };\n\t    /* Jison generated lexer */\n\t    var lexer = (function () {\n\t        var lexer = { EOF: 1,\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t            setInput: function setInput(input) {\n\t                this._input = input;\n\t                this._more = this._less = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };\n\t                if (this.options.ranges) this.yylloc.range = [0, 0];\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) this.yylloc.range[1]++;\n\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n\t                if (lines.length - 1) this.yylineno -= lines.length - 1;\n\t                var r = this.yylloc.range;\n\n\t                this.yylloc = { first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                return this;\n\t            },\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) this.done = true;\n\n\t                var token, match, tempMatch, index, col, lines;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (!this.options.flex) break;\n\t                    }\n\t                }\n\t                if (match) {\n\t                    lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                    if (lines) this.yylineno += lines.length;\n\t                    this.yylloc = { first_line: this.yylloc.last_line,\n\t                        last_line: this.yylineno + 1,\n\t                        first_column: this.yylloc.last_column,\n\t                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length };\n\t                    this.yytext += match[0];\n\t                    this.match += match[0];\n\t                    this.matches = match;\n\t                    this.yyleng = this.yytext.length;\n\t                    if (this.options.ranges) {\n\t                        this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                    }\n\t                    this._more = false;\n\t                    this._input = this._input.slice(match[0].length);\n\t                    this.matched += match[0];\n\t                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n\t                    if (this.done && this._input) this.done = false;\n\t                    if (token) return token;else return;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), { text: \"\", token: null, line: this.yylineno });\n\t                }\n\t            },\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (typeof r !== 'undefined') {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t            popState: function popState() {\n\t                return this.conditionStack.pop();\n\t            },\n\t            _currentRules: function _currentRules() {\n\t                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t            },\n\t            topState: function topState() {\n\t                return this.conditionStack[this.conditionStack.length - 2];\n\t            },\n\t            pushState: function begin(condition) {\n\t                this.begin(condition);\n\t            } };\n\t        lexer.options = {};\n\t        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START\n\t        /**/) {\n\n\t            function strip(start, end) {\n\t                return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng - end);\n\t            }\n\n\t            var YYSTATE = YY_START;\n\t            switch ($avoiding_name_collisions) {\n\t                case 0:\n\t                    if (yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n\t                        strip(0, 1);\n\t                        this.begin(\"mu\");\n\t                    } else if (yy_.yytext.slice(-1) === \"\\\\\") {\n\t                        strip(0, 1);\n\t                        this.begin(\"emu\");\n\t                    } else {\n\t                        this.begin(\"mu\");\n\t                    }\n\t                    if (yy_.yytext) return 15;\n\n\t                    break;\n\t                case 1:\n\t                    return 15;\n\t                    break;\n\t                case 2:\n\t                    this.popState();\n\t                    return 15;\n\n\t                    break;\n\t                case 3:\n\t                    this.begin('raw');return 15;\n\t                    break;\n\t                case 4:\n\t                    this.popState();\n\t                    // Should be using `this.topState()` below, but it currently\n\t                    // returns the second top instead of the first top. Opened an\n\t                    // issue about it at https://github.com/zaach/jison/issues/291\n\t                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {\n\t                        return 15;\n\t                    } else {\n\t                        yy_.yytext = yy_.yytext.substr(5, yy_.yyleng - 9);\n\t                        return 'END_RAW_BLOCK';\n\t                    }\n\n\t                    break;\n\t                case 5:\n\t                    return 15;\n\t                    break;\n\t                case 6:\n\t                    this.popState();\n\t                    return 14;\n\n\t                    break;\n\t                case 7:\n\t                    return 65;\n\t                    break;\n\t                case 8:\n\t                    return 68;\n\t                    break;\n\t                case 9:\n\t                    return 19;\n\t                    break;\n\t                case 10:\n\t                    this.popState();\n\t                    this.begin('raw');\n\t                    return 23;\n\n\t                    break;\n\t                case 11:\n\t                    return 55;\n\t                    break;\n\t                case 12:\n\t                    return 60;\n\t                    break;\n\t                case 13:\n\t                    return 29;\n\t                    break;\n\t                case 14:\n\t                    return 47;\n\t                    break;\n\t                case 15:\n\t                    this.popState();return 44;\n\t                    break;\n\t                case 16:\n\t                    this.popState();return 44;\n\t                    break;\n\t                case 17:\n\t                    return 34;\n\t                    break;\n\t                case 18:\n\t                    return 39;\n\t                    break;\n\t                case 19:\n\t                    return 51;\n\t                    break;\n\t                case 20:\n\t                    return 48;\n\t                    break;\n\t                case 21:\n\t                    this.unput(yy_.yytext);\n\t                    this.popState();\n\t                    this.begin('com');\n\n\t                    break;\n\t                case 22:\n\t                    this.popState();\n\t                    return 14;\n\n\t                    break;\n\t                case 23:\n\t                    return 48;\n\t                    break;\n\t                case 24:\n\t                    return 73;\n\t                    break;\n\t                case 25:\n\t                    return 72;\n\t                    break;\n\t                case 26:\n\t                    return 72;\n\t                    break;\n\t                case 27:\n\t                    return 87;\n\t                    break;\n\t                case 28:\n\t                    // ignore whitespace\n\t                    break;\n\t                case 29:\n\t                    this.popState();return 54;\n\t                    break;\n\t                case 30:\n\t                    this.popState();return 33;\n\t                    break;\n\t                case 31:\n\t                    yy_.yytext = strip(1, 2).replace(/\\\\\"/g, '\"');return 80;\n\t                    break;\n\t                case 32:\n\t                    yy_.yytext = strip(1, 2).replace(/\\\\'/g, \"'\");return 80;\n\t                    break;\n\t                case 33:\n\t                    return 85;\n\t                    break;\n\t                case 34:\n\t                    return 82;\n\t                    break;\n\t                case 35:\n\t                    return 82;\n\t                    break;\n\t                case 36:\n\t                    return 83;\n\t                    break;\n\t                case 37:\n\t                    return 84;\n\t                    break;\n\t                case 38:\n\t                    return 81;\n\t                    break;\n\t                case 39:\n\t                    return 75;\n\t                    break;\n\t                case 40:\n\t                    return 77;\n\t                    break;\n\t                case 41:\n\t                    return 72;\n\t                    break;\n\t                case 42:\n\t                    yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g, '$1');return 72;\n\t                    break;\n\t                case 43:\n\t                    return 'INVALID';\n\t                    break;\n\t                case 44:\n\t                    return 5;\n\t                    break;\n\t            }\n\t        };\n\t        lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/, /^(?:[^\\x00]+)/, /^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/, /^(?:\\{\\{\\{\\{(?=[^\\/]))/, /^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/, /^(?:[^\\x00]*?(?=(\\{\\{\\{\\{)))/, /^(?:[\\s\\S]*?--(~)?\\}\\})/, /^(?:\\()/, /^(?:\\))/, /^(?:\\{\\{\\{\\{)/, /^(?:\\}\\}\\}\\})/, /^(?:\\{\\{(~)?>)/, /^(?:\\{\\{(~)?#>)/, /^(?:\\{\\{(~)?#\\*?)/, /^(?:\\{\\{(~)?\\/)/, /^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\^)/, /^(?:\\{\\{(~)?\\s*else\\b)/, /^(?:\\{\\{(~)?\\{)/, /^(?:\\{\\{(~)?&)/, /^(?:\\{\\{(~)?!--)/, /^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/, /^(?:\\{\\{(~)?\\*?)/, /^(?:=)/, /^(?:\\.\\.)/, /^(?:\\.(?=([=~}\\s\\/.)|])))/, /^(?:[\\/.])/, /^(?:\\s+)/, /^(?:\\}(~)?\\}\\})/, /^(?:(~)?\\}\\})/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\\s)])))/, /^(?:false(?=([~}\\s)])))/, /^(?:undefined(?=([~}\\s)])))/, /^(?:null(?=([~}\\s)])))/, /^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/, /^(?:as\\s+\\|)/, /^(?:\\|)/, /^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/, /^(?:\\[(\\\\\\]|[^\\]])*\\])/, /^(?:.)/, /^(?:$)/];\n\t        lexer.conditions = { \"mu\": { \"rules\": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": false }, \"emu\": { \"rules\": [2], \"inclusive\": false }, \"com\": { \"rules\": [6], \"inclusive\": false }, \"raw\": { \"rules\": [3, 4, 5], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 44], \"inclusive\": true } };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();exports[\"default\"] = handlebars;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _visitor = __webpack_require__(39);\n\n\tvar _visitor2 = _interopRequireDefault(_visitor);\n\n\tfunction WhitespaceControl() {\n\t  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n\t  this.options = options;\n\t}\n\tWhitespaceControl.prototype = new _visitor2['default']();\n\n\tWhitespaceControl.prototype.Program = function (program) {\n\t  var doStandalone = !this.options.ignoreStandalone;\n\n\t  var isRoot = !this.isRootSeen;\n\t  this.isRootSeen = true;\n\n\t  var body = program.body;\n\t  for (var i = 0, l = body.length; i < l; i++) {\n\t    var current = body[i],\n\t        strip = this.accept(current);\n\n\t    if (!strip) {\n\t      continue;\n\t    }\n\n\t    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n\t        _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n\t        openStandalone = strip.openStandalone && _isPrevWhitespace,\n\t        closeStandalone = strip.closeStandalone && _isNextWhitespace,\n\t        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n\t    if (strip.close) {\n\t      omitRight(body, i, true);\n\t    }\n\t    if (strip.open) {\n\t      omitLeft(body, i, true);\n\t    }\n\n\t    if (doStandalone && inlineStandalone) {\n\t      omitRight(body, i);\n\n\t      if (omitLeft(body, i)) {\n\t        // If we are on a standalone node, save the indent info for partials\n\t        if (current.type === 'PartialStatement') {\n\t          // Pull out the whitespace from the final line\n\t          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n\t        }\n\t      }\n\t    }\n\t    if (doStandalone && openStandalone) {\n\t      omitRight((current.program || current.inverse).body);\n\n\t      // Strip out the previous content node if it's whitespace only\n\t      omitLeft(body, i);\n\t    }\n\t    if (doStandalone && closeStandalone) {\n\t      // Always strip the next node\n\t      omitRight(body, i);\n\n\t      omitLeft((current.inverse || current.program).body);\n\t    }\n\t  }\n\n\t  return program;\n\t};\n\n\tWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {\n\t  this.accept(block.program);\n\t  this.accept(block.inverse);\n\n\t  // Find the inverse program that is involed with whitespace stripping.\n\t  var program = block.program || block.inverse,\n\t      inverse = block.program && block.inverse,\n\t      firstInverse = inverse,\n\t      lastInverse = inverse;\n\n\t  if (inverse && inverse.chained) {\n\t    firstInverse = inverse.body[0].program;\n\n\t    // Walk the inverse chain to find the last inverse that is actually in the chain.\n\t    while (lastInverse.chained) {\n\t      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n\t    }\n\t  }\n\n\t  var strip = {\n\t    open: block.openStrip.open,\n\t    close: block.closeStrip.close,\n\n\t    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n\t    // so our parent can determine if we actually are standalone\n\t    openStandalone: isNextWhitespace(program.body),\n\t    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n\t  };\n\n\t  if (block.openStrip.close) {\n\t    omitRight(program.body, null, true);\n\t  }\n\n\t  if (inverse) {\n\t    var inverseStrip = block.inverseStrip;\n\n\t    if (inverseStrip.open) {\n\t      omitLeft(program.body, null, true);\n\t    }\n\n\t    if (inverseStrip.close) {\n\t      omitRight(firstInverse.body, null, true);\n\t    }\n\t    if (block.closeStrip.open) {\n\t      omitLeft(lastInverse.body, null, true);\n\t    }\n\n\t    // Find standalone else statments\n\t    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {\n\t      omitLeft(program.body);\n\t      omitRight(firstInverse.body);\n\t    }\n\t  } else if (block.closeStrip.open) {\n\t    omitLeft(program.body, null, true);\n\t  }\n\n\t  return strip;\n\t};\n\n\tWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {\n\t  return mustache.strip;\n\t};\n\n\tWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {\n\t  /* istanbul ignore next */\n\t  var strip = node.strip || {};\n\t  return {\n\t    inlineStandalone: true,\n\t    open: strip.open,\n\t    close: strip.close\n\t  };\n\t};\n\n\tfunction isPrevWhitespace(body, i, isRoot) {\n\t  if (i === undefined) {\n\t    i = body.length;\n\t  }\n\n\t  // Nodes that end with newlines are considered whitespace (but are special\n\t  // cased for strip operations)\n\t  var prev = body[i - 1],\n\t      sibling = body[i - 2];\n\t  if (!prev) {\n\t    return isRoot;\n\t  }\n\n\t  if (prev.type === 'ContentStatement') {\n\t    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(prev.original);\n\t  }\n\t}\n\tfunction isNextWhitespace(body, i, isRoot) {\n\t  if (i === undefined) {\n\t    i = -1;\n\t  }\n\n\t  var next = body[i + 1],\n\t      sibling = body[i + 2];\n\t  if (!next) {\n\t    return isRoot;\n\t  }\n\n\t  if (next.type === 'ContentStatement') {\n\t    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(next.original);\n\t  }\n\t}\n\n\t// Marks the node to the right of the position as omitted.\n\t// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n\t//\n\t// If i is undefined, then the first child will be marked as such.\n\t//\n\t// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n\t// content is met.\n\tfunction omitRight(body, i, multiple) {\n\t  var current = body[i == null ? 0 : i + 1];\n\t  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {\n\t    return;\n\t  }\n\n\t  var original = current.value;\n\t  current.value = current.value.replace(multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/, '');\n\t  current.rightStripped = current.value !== original;\n\t}\n\n\t// Marks the node to the left of the position as omitted.\n\t// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n\t//\n\t// If i is undefined then the last child will be marked as such.\n\t//\n\t// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n\t// content is met.\n\tfunction omitLeft(body, i, multiple) {\n\t  var current = body[i == null ? body.length - 1 : i - 1];\n\t  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {\n\t    return;\n\t  }\n\n\t  // We omit the last node if it's whitespace only and not preceeded by a non-content node.\n\t  var original = current.value;\n\t  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n\t  current.leftStripped = current.value !== original;\n\t  return current.leftStripped;\n\t}\n\n\texports['default'] = WhitespaceControl;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tfunction Visitor() {\n\t  this.parents = [];\n\t}\n\n\tVisitor.prototype = {\n\t  constructor: Visitor,\n\t  mutating: false,\n\n\t  // Visits a given value. If mutating, will replace the value if necessary.\n\t  acceptKey: function acceptKey(node, name) {\n\t    var value = this.accept(node[name]);\n\t    if (this.mutating) {\n\t      // Hacky sanity check: This may have a few false positives for type for the helper\n\t      // methods but will generally do the right thing without a lot of overhead.\n\t      if (value && !Visitor.prototype[value.type]) {\n\t        throw new _exception2['default']('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n\t      }\n\t      node[name] = value;\n\t    }\n\t  },\n\n\t  // Performs an accept operation with added sanity check to ensure\n\t  // required keys are not removed.\n\t  acceptRequired: function acceptRequired(node, name) {\n\t    this.acceptKey(node, name);\n\n\t    if (!node[name]) {\n\t      throw new _exception2['default'](node.type + ' requires ' + name);\n\t    }\n\t  },\n\n\t  // Traverses a given array. If mutating, empty respnses will be removed\n\t  // for child elements.\n\t  acceptArray: function acceptArray(array) {\n\t    for (var i = 0, l = array.length; i < l; i++) {\n\t      this.acceptKey(array, i);\n\n\t      if (!array[i]) {\n\t        array.splice(i, 1);\n\t        i--;\n\t        l--;\n\t      }\n\t    }\n\t  },\n\n\t  accept: function accept(object) {\n\t    if (!object) {\n\t      return;\n\t    }\n\n\t    /* istanbul ignore next: Sanity code */\n\t    if (!this[object.type]) {\n\t      throw new _exception2['default']('Unknown type: ' + object.type, object);\n\t    }\n\n\t    if (this.current) {\n\t      this.parents.unshift(this.current);\n\t    }\n\t    this.current = object;\n\n\t    var ret = this[object.type](object);\n\n\t    this.current = this.parents.shift();\n\n\t    if (!this.mutating || ret) {\n\t      return ret;\n\t    } else if (ret !== false) {\n\t      return object;\n\t    }\n\t  },\n\n\t  Program: function Program(program) {\n\t    this.acceptArray(program.body);\n\t  },\n\n\t  MustacheStatement: visitSubExpression,\n\t  Decorator: visitSubExpression,\n\n\t  BlockStatement: visitBlock,\n\t  DecoratorBlock: visitBlock,\n\n\t  PartialStatement: visitPartial,\n\t  PartialBlockStatement: function PartialBlockStatement(partial) {\n\t    visitPartial.call(this, partial);\n\n\t    this.acceptKey(partial, 'program');\n\t  },\n\n\t  ContentStatement: function ContentStatement() /* content */{},\n\t  CommentStatement: function CommentStatement() /* comment */{},\n\n\t  SubExpression: visitSubExpression,\n\n\t  PathExpression: function PathExpression() /* path */{},\n\n\t  StringLiteral: function StringLiteral() /* string */{},\n\t  NumberLiteral: function NumberLiteral() /* number */{},\n\t  BooleanLiteral: function BooleanLiteral() /* bool */{},\n\t  UndefinedLiteral: function UndefinedLiteral() /* literal */{},\n\t  NullLiteral: function NullLiteral() /* literal */{},\n\n\t  Hash: function Hash(hash) {\n\t    this.acceptArray(hash.pairs);\n\t  },\n\t  HashPair: function HashPair(pair) {\n\t    this.acceptRequired(pair, 'value');\n\t  }\n\t};\n\n\tfunction visitSubExpression(mustache) {\n\t  this.acceptRequired(mustache, 'path');\n\t  this.acceptArray(mustache.params);\n\t  this.acceptKey(mustache, 'hash');\n\t}\n\tfunction visitBlock(block) {\n\t  visitSubExpression.call(this, block);\n\n\t  this.acceptKey(block, 'program');\n\t  this.acceptKey(block, 'inverse');\n\t}\n\tfunction visitPartial(partial) {\n\t  this.acceptRequired(partial, 'name');\n\t  this.acceptArray(partial.params);\n\t  this.acceptKey(partial, 'hash');\n\t}\n\n\texports['default'] = Visitor;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.SourceLocation = SourceLocation;\n\texports.id = id;\n\texports.stripFlags = stripFlags;\n\texports.stripComment = stripComment;\n\texports.preparePath = preparePath;\n\texports.prepareMustache = prepareMustache;\n\texports.prepareRawBlock = prepareRawBlock;\n\texports.prepareBlock = prepareBlock;\n\texports.prepareProgram = prepareProgram;\n\texports.preparePartialBlock = preparePartialBlock;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tfunction validateClose(open, close) {\n\t  close = close.path ? close.path.original : close;\n\n\t  if (open.path.original !== close) {\n\t    var errorNode = { loc: open.path.loc };\n\n\t    throw new _exception2['default'](open.path.original + \" doesn't match \" + close, errorNode);\n\t  }\n\t}\n\n\tfunction SourceLocation(source, locInfo) {\n\t  this.source = source;\n\t  this.start = {\n\t    line: locInfo.first_line,\n\t    column: locInfo.first_column\n\t  };\n\t  this.end = {\n\t    line: locInfo.last_line,\n\t    column: locInfo.last_column\n\t  };\n\t}\n\n\tfunction id(token) {\n\t  if (/^\\[.*\\]$/.test(token)) {\n\t    return token.substr(1, token.length - 2);\n\t  } else {\n\t    return token;\n\t  }\n\t}\n\n\tfunction stripFlags(open, close) {\n\t  return {\n\t    open: open.charAt(2) === '~',\n\t    close: close.charAt(close.length - 3) === '~'\n\t  };\n\t}\n\n\tfunction stripComment(comment) {\n\t  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n\t}\n\n\tfunction preparePath(data, parts, loc) {\n\t  loc = this.locInfo(loc);\n\n\t  var original = data ? '@' : '',\n\t      dig = [],\n\t      depth = 0;\n\n\t  for (var i = 0, l = parts.length; i < l; i++) {\n\t    var part = parts[i].part,\n\n\t    // If we have [] syntax then we do not treat path references as operators,\n\t    // i.e. foo.[this] resolves to approximately context.foo['this']\n\t    isLiteral = parts[i].original !== part;\n\t    original += (parts[i].separator || '') + part;\n\n\t    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n\t      if (dig.length > 0) {\n\t        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });\n\t      } else if (part === '..') {\n\t        depth++;\n\t      }\n\t    } else {\n\t      dig.push(part);\n\t    }\n\t  }\n\n\t  return {\n\t    type: 'PathExpression',\n\t    data: data,\n\t    depth: depth,\n\t    parts: dig,\n\t    original: original,\n\t    loc: loc\n\t  };\n\t}\n\n\tfunction prepareMustache(path, params, hash, open, strip, locInfo) {\n\t  // Must use charAt to support IE pre-10\n\t  var escapeFlag = open.charAt(3) || open.charAt(2),\n\t      escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n\t  var decorator = /\\*/.test(open);\n\t  return {\n\t    type: decorator ? 'Decorator' : 'MustacheStatement',\n\t    path: path,\n\t    params: params,\n\t    hash: hash,\n\t    escaped: escaped,\n\t    strip: strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n\tfunction prepareRawBlock(openRawBlock, contents, close, locInfo) {\n\t  validateClose(openRawBlock, close);\n\n\t  locInfo = this.locInfo(locInfo);\n\t  var program = {\n\t    type: 'Program',\n\t    body: contents,\n\t    strip: {},\n\t    loc: locInfo\n\t  };\n\n\t  return {\n\t    type: 'BlockStatement',\n\t    path: openRawBlock.path,\n\t    params: openRawBlock.params,\n\t    hash: openRawBlock.hash,\n\t    program: program,\n\t    openStrip: {},\n\t    inverseStrip: {},\n\t    closeStrip: {},\n\t    loc: locInfo\n\t  };\n\t}\n\n\tfunction prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n\t  if (close && close.path) {\n\t    validateClose(openBlock, close);\n\t  }\n\n\t  var decorator = /\\*/.test(openBlock.open);\n\n\t  program.blockParams = openBlock.blockParams;\n\n\t  var inverse = undefined,\n\t      inverseStrip = undefined;\n\n\t  if (inverseAndProgram) {\n\t    if (decorator) {\n\t      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);\n\t    }\n\n\t    if (inverseAndProgram.chain) {\n\t      inverseAndProgram.program.body[0].closeStrip = close.strip;\n\t    }\n\n\t    inverseStrip = inverseAndProgram.strip;\n\t    inverse = inverseAndProgram.program;\n\t  }\n\n\t  if (inverted) {\n\t    inverted = inverse;\n\t    inverse = program;\n\t    program = inverted;\n\t  }\n\n\t  return {\n\t    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n\t    path: openBlock.path,\n\t    params: openBlock.params,\n\t    hash: openBlock.hash,\n\t    program: program,\n\t    inverse: inverse,\n\t    openStrip: openBlock.strip,\n\t    inverseStrip: inverseStrip,\n\t    closeStrip: close && close.strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n\tfunction prepareProgram(statements, loc) {\n\t  if (!loc && statements.length) {\n\t    var firstLoc = statements[0].loc,\n\t        lastLoc = statements[statements.length - 1].loc;\n\n\t    /* istanbul ignore else */\n\t    if (firstLoc && lastLoc) {\n\t      loc = {\n\t        source: firstLoc.source,\n\t        start: {\n\t          line: firstLoc.start.line,\n\t          column: firstLoc.start.column\n\t        },\n\t        end: {\n\t          line: lastLoc.end.line,\n\t          column: lastLoc.end.column\n\t        }\n\t      };\n\t    }\n\t  }\n\n\t  return {\n\t    type: 'Program',\n\t    body: statements,\n\t    strip: {},\n\t    loc: loc\n\t  };\n\t}\n\n\tfunction preparePartialBlock(open, program, close, locInfo) {\n\t  validateClose(open, close);\n\n\t  return {\n\t    type: 'PartialBlockStatement',\n\t    name: open.path,\n\t    params: open.params,\n\t    hash: open.hash,\n\t    program: program,\n\t    openStrip: open.strip,\n\t    closeStrip: close && close.strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* eslint-disable new-cap */\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.Compiler = Compiler;\n\texports.precompile = precompile;\n\texports.compile = compile;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _ast = __webpack_require__(35);\n\n\tvar _ast2 = _interopRequireDefault(_ast);\n\n\tvar slice = [].slice;\n\n\tfunction Compiler() {}\n\n\t// the foundHelper register will disambiguate helper lookup from finding a\n\t// function in a context. This is necessary for mustache compatibility, which\n\t// requires that context functions in blocks are evaluated by blockHelperMissing,\n\t// and then proceed as if the resulting value was provided to blockHelperMissing.\n\n\tCompiler.prototype = {\n\t  compiler: Compiler,\n\n\t  equals: function equals(other) {\n\t    var len = this.opcodes.length;\n\t    if (other.opcodes.length !== len) {\n\t      return false;\n\t    }\n\n\t    for (var i = 0; i < len; i++) {\n\t      var opcode = this.opcodes[i],\n\t          otherOpcode = other.opcodes[i];\n\t      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n\t        return false;\n\t      }\n\t    }\n\n\t    // We know that length is the same between the two arrays because they are directly tied\n\t    // to the opcode behavior above.\n\t    len = this.children.length;\n\t    for (var i = 0; i < len; i++) {\n\t      if (!this.children[i].equals(other.children[i])) {\n\t        return false;\n\t      }\n\t    }\n\n\t    return true;\n\t  },\n\n\t  guid: 0,\n\n\t  compile: function compile(program, options) {\n\t    this.sourceNode = [];\n\t    this.opcodes = [];\n\t    this.children = [];\n\t    this.options = options;\n\t    this.stringParams = options.stringParams;\n\t    this.trackIds = options.trackIds;\n\n\t    options.blockParams = options.blockParams || [];\n\n\t    // These changes will propagate to the other compiler components\n\t    var knownHelpers = options.knownHelpers;\n\t    options.knownHelpers = {\n\t      'helperMissing': true,\n\t      'blockHelperMissing': true,\n\t      'each': true,\n\t      'if': true,\n\t      'unless': true,\n\t      'with': true,\n\t      'log': true,\n\t      'lookup': true\n\t    };\n\t    if (knownHelpers) {\n\t      // the next line should use \"Object.keys\", but the code has been like this a long time and changing it, might\n\t      // cause backwards-compatibility issues... It's an old library...\n\t      // eslint-disable-next-line guard-for-in\n\t      for (var _name in knownHelpers) {\n\t        this.options.knownHelpers[_name] = knownHelpers[_name];\n\t      }\n\t    }\n\n\t    return this.accept(program);\n\t  },\n\n\t  compileProgram: function compileProgram(program) {\n\t    var childCompiler = new this.compiler(),\n\t        // eslint-disable-line new-cap\n\t    result = childCompiler.compile(program, this.options),\n\t        guid = this.guid++;\n\n\t    this.usePartial = this.usePartial || result.usePartial;\n\n\t    this.children[guid] = result;\n\t    this.useDepths = this.useDepths || result.useDepths;\n\n\t    return guid;\n\t  },\n\n\t  accept: function accept(node) {\n\t    /* istanbul ignore next: Sanity code */\n\t    if (!this[node.type]) {\n\t      throw new _exception2['default']('Unknown type: ' + node.type, node);\n\t    }\n\n\t    this.sourceNode.unshift(node);\n\t    var ret = this[node.type](node);\n\t    this.sourceNode.shift();\n\t    return ret;\n\t  },\n\n\t  Program: function Program(program) {\n\t    this.options.blockParams.unshift(program.blockParams);\n\n\t    var body = program.body,\n\t        bodyLength = body.length;\n\t    for (var i = 0; i < bodyLength; i++) {\n\t      this.accept(body[i]);\n\t    }\n\n\t    this.options.blockParams.shift();\n\n\t    this.isSimple = bodyLength === 1;\n\t    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n\t    return this;\n\t  },\n\n\t  BlockStatement: function BlockStatement(block) {\n\t    transformLiteralToPath(block);\n\n\t    var program = block.program,\n\t        inverse = block.inverse;\n\n\t    program = program && this.compileProgram(program);\n\t    inverse = inverse && this.compileProgram(inverse);\n\n\t    var type = this.classifySexpr(block);\n\n\t    if (type === 'helper') {\n\t      this.helperSexpr(block, program, inverse);\n\t    } else if (type === 'simple') {\n\t      this.simpleSexpr(block);\n\n\t      // now that the simple mustache is resolved, we need to\n\t      // evaluate it by executing `blockHelperMissing`\n\t      this.opcode('pushProgram', program);\n\t      this.opcode('pushProgram', inverse);\n\t      this.opcode('emptyHash');\n\t      this.opcode('blockValue', block.path.original);\n\t    } else {\n\t      this.ambiguousSexpr(block, program, inverse);\n\n\t      // now that the simple mustache is resolved, we need to\n\t      // evaluate it by executing `blockHelperMissing`\n\t      this.opcode('pushProgram', program);\n\t      this.opcode('pushProgram', inverse);\n\t      this.opcode('emptyHash');\n\t      this.opcode('ambiguousBlockValue');\n\t    }\n\n\t    this.opcode('append');\n\t  },\n\n\t  DecoratorBlock: function DecoratorBlock(decorator) {\n\t    var program = decorator.program && this.compileProgram(decorator.program);\n\t    var params = this.setupFullMustacheParams(decorator, program, undefined),\n\t        path = decorator.path;\n\n\t    this.useDecorators = true;\n\t    this.opcode('registerDecorator', params.length, path.original);\n\t  },\n\n\t  PartialStatement: function PartialStatement(partial) {\n\t    this.usePartial = true;\n\n\t    var program = partial.program;\n\t    if (program) {\n\t      program = this.compileProgram(partial.program);\n\t    }\n\n\t    var params = partial.params;\n\t    if (params.length > 1) {\n\t      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);\n\t    } else if (!params.length) {\n\t      if (this.options.explicitPartialContext) {\n\t        this.opcode('pushLiteral', 'undefined');\n\t      } else {\n\t        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n\t      }\n\t    }\n\n\t    var partialName = partial.name.original,\n\t        isDynamic = partial.name.type === 'SubExpression';\n\t    if (isDynamic) {\n\t      this.accept(partial.name);\n\t    }\n\n\t    this.setupFullMustacheParams(partial, program, undefined, true);\n\n\t    var indent = partial.indent || '';\n\t    if (this.options.preventIndent && indent) {\n\t      this.opcode('appendContent', indent);\n\t      indent = '';\n\t    }\n\n\t    this.opcode('invokePartial', isDynamic, partialName, indent);\n\t    this.opcode('append');\n\t  },\n\t  PartialBlockStatement: function PartialBlockStatement(partialBlock) {\n\t    this.PartialStatement(partialBlock);\n\t  },\n\n\t  MustacheStatement: function MustacheStatement(mustache) {\n\t    this.SubExpression(mustache);\n\n\t    if (mustache.escaped && !this.options.noEscape) {\n\t      this.opcode('appendEscaped');\n\t    } else {\n\t      this.opcode('append');\n\t    }\n\t  },\n\t  Decorator: function Decorator(decorator) {\n\t    this.DecoratorBlock(decorator);\n\t  },\n\n\t  ContentStatement: function ContentStatement(content) {\n\t    if (content.value) {\n\t      this.opcode('appendContent', content.value);\n\t    }\n\t  },\n\n\t  CommentStatement: function CommentStatement() {},\n\n\t  SubExpression: function SubExpression(sexpr) {\n\t    transformLiteralToPath(sexpr);\n\t    var type = this.classifySexpr(sexpr);\n\n\t    if (type === 'simple') {\n\t      this.simpleSexpr(sexpr);\n\t    } else if (type === 'helper') {\n\t      this.helperSexpr(sexpr);\n\t    } else {\n\t      this.ambiguousSexpr(sexpr);\n\t    }\n\t  },\n\t  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {\n\t    var path = sexpr.path,\n\t        name = path.parts[0],\n\t        isBlock = program != null || inverse != null;\n\n\t    this.opcode('getContext', path.depth);\n\n\t    this.opcode('pushProgram', program);\n\t    this.opcode('pushProgram', inverse);\n\n\t    path.strict = true;\n\t    this.accept(path);\n\n\t    this.opcode('invokeAmbiguous', name, isBlock);\n\t  },\n\n\t  simpleSexpr: function simpleSexpr(sexpr) {\n\t    var path = sexpr.path;\n\t    path.strict = true;\n\t    this.accept(path);\n\t    this.opcode('resolvePossibleLambda');\n\t  },\n\n\t  helperSexpr: function helperSexpr(sexpr, program, inverse) {\n\t    var params = this.setupFullMustacheParams(sexpr, program, inverse),\n\t        path = sexpr.path,\n\t        name = path.parts[0];\n\n\t    if (this.options.knownHelpers[name]) {\n\t      this.opcode('invokeKnownHelper', params.length, name);\n\t    } else if (this.options.knownHelpersOnly) {\n\t      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);\n\t    } else {\n\t      path.strict = true;\n\t      path.falsy = true;\n\n\t      this.accept(path);\n\t      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));\n\t    }\n\t  },\n\n\t  PathExpression: function PathExpression(path) {\n\t    this.addDepth(path.depth);\n\t    this.opcode('getContext', path.depth);\n\n\t    var name = path.parts[0],\n\t        scoped = _ast2['default'].helpers.scopedId(path),\n\t        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n\t    if (blockParamId) {\n\t      this.opcode('lookupBlockParam', blockParamId, path.parts);\n\t    } else if (!name) {\n\t      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n\t      this.opcode('pushContext');\n\t    } else if (path.data) {\n\t      this.options.data = true;\n\t      this.opcode('lookupData', path.depth, path.parts, path.strict);\n\t    } else {\n\t      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);\n\t    }\n\t  },\n\n\t  StringLiteral: function StringLiteral(string) {\n\t    this.opcode('pushString', string.value);\n\t  },\n\n\t  NumberLiteral: function NumberLiteral(number) {\n\t    this.opcode('pushLiteral', number.value);\n\t  },\n\n\t  BooleanLiteral: function BooleanLiteral(bool) {\n\t    this.opcode('pushLiteral', bool.value);\n\t  },\n\n\t  UndefinedLiteral: function UndefinedLiteral() {\n\t    this.opcode('pushLiteral', 'undefined');\n\t  },\n\n\t  NullLiteral: function NullLiteral() {\n\t    this.opcode('pushLiteral', 'null');\n\t  },\n\n\t  Hash: function Hash(hash) {\n\t    var pairs = hash.pairs,\n\t        i = 0,\n\t        l = pairs.length;\n\n\t    this.opcode('pushHash');\n\n\t    for (; i < l; i++) {\n\t      this.pushParam(pairs[i].value);\n\t    }\n\t    while (i--) {\n\t      this.opcode('assignToHash', pairs[i].key);\n\t    }\n\t    this.opcode('popHash');\n\t  },\n\n\t  // HELPERS\n\t  opcode: function opcode(name) {\n\t    this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });\n\t  },\n\n\t  addDepth: function addDepth(depth) {\n\t    if (!depth) {\n\t      return;\n\t    }\n\n\t    this.useDepths = true;\n\t  },\n\n\t  classifySexpr: function classifySexpr(sexpr) {\n\t    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);\n\n\t    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n\t    // a mustache is an eligible helper if:\n\t    // * its id is simple (a single part, not `this` or `..`)\n\t    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);\n\n\t    // if a mustache is an eligible helper but not a definite\n\t    // helper, it is ambiguous, and will be resolved in a later\n\t    // pass or at runtime.\n\t    var isEligible = !isBlockParam && (isHelper || isSimple);\n\n\t    // if ambiguous, we can possibly resolve the ambiguity now\n\t    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n\t    if (isEligible && !isHelper) {\n\t      var _name2 = sexpr.path.parts[0],\n\t          options = this.options;\n\n\t      if (options.knownHelpers[_name2]) {\n\t        isHelper = true;\n\t      } else if (options.knownHelpersOnly) {\n\t        isEligible = false;\n\t      }\n\t    }\n\n\t    if (isHelper) {\n\t      return 'helper';\n\t    } else if (isEligible) {\n\t      return 'ambiguous';\n\t    } else {\n\t      return 'simple';\n\t    }\n\t  },\n\n\t  pushParams: function pushParams(params) {\n\t    for (var i = 0, l = params.length; i < l; i++) {\n\t      this.pushParam(params[i]);\n\t    }\n\t  },\n\n\t  pushParam: function pushParam(val) {\n\t    var value = val.value != null ? val.value : val.original || '';\n\n\t    if (this.stringParams) {\n\t      if (value.replace) {\n\t        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n\t      }\n\n\t      if (val.depth) {\n\t        this.addDepth(val.depth);\n\t      }\n\t      this.opcode('getContext', val.depth || 0);\n\t      this.opcode('pushStringParam', value, val.type);\n\n\t      if (val.type === 'SubExpression') {\n\t        // SubExpressions get evaluated and passed in\n\t        // in string params mode.\n\t        this.accept(val);\n\t      }\n\t    } else {\n\t      if (this.trackIds) {\n\t        var blockParamIndex = undefined;\n\t        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {\n\t          blockParamIndex = this.blockParamIndex(val.parts[0]);\n\t        }\n\t        if (blockParamIndex) {\n\t          var blockParamChild = val.parts.slice(1).join('.');\n\t          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n\t        } else {\n\t          value = val.original || value;\n\t          if (value.replace) {\n\t            value = value.replace(/^this(?:\\.|$)/, '').replace(/^\\.\\//, '').replace(/^\\.$/, '');\n\t          }\n\n\t          this.opcode('pushId', val.type, value);\n\t        }\n\t      }\n\t      this.accept(val);\n\t    }\n\t  },\n\n\t  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {\n\t    var params = sexpr.params;\n\t    this.pushParams(params);\n\n\t    this.opcode('pushProgram', program);\n\t    this.opcode('pushProgram', inverse);\n\n\t    if (sexpr.hash) {\n\t      this.accept(sexpr.hash);\n\t    } else {\n\t      this.opcode('emptyHash', omitEmpty);\n\t    }\n\n\t    return params;\n\t  },\n\n\t  blockParamIndex: function blockParamIndex(name) {\n\t    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n\t      var blockParams = this.options.blockParams[depth],\n\t          param = blockParams && _utils.indexOf(blockParams, name);\n\t      if (blockParams && param >= 0) {\n\t        return [depth, param];\n\t      }\n\t    }\n\t  }\n\t};\n\n\tfunction precompile(input, options, env) {\n\t  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n\t    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);\n\t  }\n\n\t  options = options || {};\n\t  if (!('data' in options)) {\n\t    options.data = true;\n\t  }\n\t  if (options.compat) {\n\t    options.useDepths = true;\n\t  }\n\n\t  var ast = env.parse(input, options),\n\t      environment = new env.Compiler().compile(ast, options);\n\t  return new env.JavaScriptCompiler().compile(environment, options);\n\t}\n\n\tfunction compile(input, options, env) {\n\t  if (options === undefined) options = {};\n\n\t  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n\t    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);\n\t  }\n\n\t  options = _utils.extend({}, options);\n\t  if (!('data' in options)) {\n\t    options.data = true;\n\t  }\n\t  if (options.compat) {\n\t    options.useDepths = true;\n\t  }\n\n\t  var compiled = undefined;\n\n\t  function compileInput() {\n\t    var ast = env.parse(input, options),\n\t        environment = new env.Compiler().compile(ast, options),\n\t        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n\t    return env.template(templateSpec);\n\t  }\n\n\t  // Template is only compiled on first use and cached after that point.\n\t  function ret(context, execOptions) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled.call(this, context, execOptions);\n\t  }\n\t  ret._setup = function (setupOptions) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled._setup(setupOptions);\n\t  };\n\t  ret._child = function (i, data, blockParams, depths) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled._child(i, data, blockParams, depths);\n\t  };\n\t  return ret;\n\t}\n\n\tfunction argEquals(a, b) {\n\t  if (a === b) {\n\t    return true;\n\t  }\n\n\t  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {\n\t    for (var i = 0; i < a.length; i++) {\n\t      if (!argEquals(a[i], b[i])) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t}\n\n\tfunction transformLiteralToPath(sexpr) {\n\t  if (!sexpr.path.parts) {\n\t    var literal = sexpr.path;\n\t    // Casting to string here to make false and 0 literal values play nicely with the rest\n\t    // of the system.\n\t    sexpr.path = {\n\t      type: 'PathExpression',\n\t      data: false,\n\t      depth: 0,\n\t      parts: [literal.original + ''],\n\t      original: literal.original + '',\n\t      loc: literal.loc\n\t    };\n\t  }\n\t}\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _base = __webpack_require__(4);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _codeGen = __webpack_require__(43);\n\n\tvar _codeGen2 = _interopRequireDefault(_codeGen);\n\n\tfunction Literal(value) {\n\t  this.value = value;\n\t}\n\n\tfunction JavaScriptCompiler() {}\n\n\tJavaScriptCompiler.prototype = {\n\t  // PUBLIC API: You can override these methods in a subclass to provide\n\t  // alternative compiled forms for name lookup and buffering semantics\n\t  nameLookup: function nameLookup(parent, name /* , type*/) {\n\t    if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {\n\t      return [parent, '.', name];\n\t    } else {\n\t      return [parent, '[', JSON.stringify(name), ']'];\n\t    }\n\t  },\n\t  depthedLookup: function depthedLookup(name) {\n\t    return [this.aliasable('container.lookup'), '(depths, \"', name, '\")'];\n\t  },\n\n\t  compilerInfo: function compilerInfo() {\n\t    var revision = _base.COMPILER_REVISION,\n\t        versions = _base.REVISION_CHANGES[revision];\n\t    return [revision, versions];\n\t  },\n\n\t  appendToBuffer: function appendToBuffer(source, location, explicit) {\n\t    // Force a source as this simplifies the merge logic.\n\t    if (!_utils.isArray(source)) {\n\t      source = [source];\n\t    }\n\t    source = this.source.wrap(source, location);\n\n\t    if (this.environment.isSimple) {\n\t      return ['return ', source, ';'];\n\t    } else if (explicit) {\n\t      // This is a case where the buffer operation occurs as a child of another\n\t      // construct, generally braces. We have to explicitly output these buffer\n\t      // operations to ensure that the emitted code goes in the correct location.\n\t      return ['buffer += ', source, ';'];\n\t    } else {\n\t      source.appendToBuffer = true;\n\t      return source;\n\t    }\n\t  },\n\n\t  initializeBuffer: function initializeBuffer() {\n\t    return this.quotedString('');\n\t  },\n\t  // END PUBLIC API\n\n\t  compile: function compile(environment, options, context, asObject) {\n\t    this.environment = environment;\n\t    this.options = options;\n\t    this.stringParams = this.options.stringParams;\n\t    this.trackIds = this.options.trackIds;\n\t    this.precompile = !asObject;\n\n\t    this.name = this.environment.name;\n\t    this.isChild = !!context;\n\t    this.context = context || {\n\t      decorators: [],\n\t      programs: [],\n\t      environments: []\n\t    };\n\n\t    this.preamble();\n\n\t    this.stackSlot = 0;\n\t    this.stackVars = [];\n\t    this.aliases = {};\n\t    this.registers = { list: [] };\n\t    this.hashes = [];\n\t    this.compileStack = [];\n\t    this.inlineStack = [];\n\t    this.blockParams = [];\n\n\t    this.compileChildren(environment, options);\n\n\t    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;\n\t    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n\t    var opcodes = environment.opcodes,\n\t        opcode = undefined,\n\t        firstLoc = undefined,\n\t        i = undefined,\n\t        l = undefined;\n\n\t    for (i = 0, l = opcodes.length; i < l; i++) {\n\t      opcode = opcodes[i];\n\n\t      this.source.currentLocation = opcode.loc;\n\t      firstLoc = firstLoc || opcode.loc;\n\t      this[opcode.opcode].apply(this, opcode.args);\n\t    }\n\n\t    // Flush any trailing content that might be pending.\n\t    this.source.currentLocation = firstLoc;\n\t    this.pushSource('');\n\n\t    /* istanbul ignore next */\n\t    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n\t      throw new _exception2['default']('Compile completed with content left on stack');\n\t    }\n\n\t    if (!this.decorators.isEmpty()) {\n\t      this.useDecorators = true;\n\n\t      this.decorators.prepend('var decorators = container.decorators;\\n');\n\t      this.decorators.push('return fn;');\n\n\t      if (asObject) {\n\t        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);\n\t      } else {\n\t        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\\n');\n\t        this.decorators.push('}\\n');\n\t        this.decorators = this.decorators.merge();\n\t      }\n\t    } else {\n\t      this.decorators = undefined;\n\t    }\n\n\t    var fn = this.createFunctionContext(asObject);\n\t    if (!this.isChild) {\n\t      var ret = {\n\t        compiler: this.compilerInfo(),\n\t        main: fn\n\t      };\n\n\t      if (this.decorators) {\n\t        ret.main_d = this.decorators; // eslint-disable-line camelcase\n\t        ret.useDecorators = true;\n\t      }\n\n\t      var _context = this.context;\n\t      var programs = _context.programs;\n\t      var decorators = _context.decorators;\n\n\t      for (i = 0, l = programs.length; i < l; i++) {\n\t        if (programs[i]) {\n\t          ret[i] = programs[i];\n\t          if (decorators[i]) {\n\t            ret[i + '_d'] = decorators[i];\n\t            ret.useDecorators = true;\n\t          }\n\t        }\n\t      }\n\n\t      if (this.environment.usePartial) {\n\t        ret.usePartial = true;\n\t      }\n\t      if (this.options.data) {\n\t        ret.useData = true;\n\t      }\n\t      if (this.useDepths) {\n\t        ret.useDepths = true;\n\t      }\n\t      if (this.useBlockParams) {\n\t        ret.useBlockParams = true;\n\t      }\n\t      if (this.options.compat) {\n\t        ret.compat = true;\n\t      }\n\n\t      if (!asObject) {\n\t        ret.compiler = JSON.stringify(ret.compiler);\n\n\t        this.source.currentLocation = { start: { line: 1, column: 0 } };\n\t        ret = this.objectLiteral(ret);\n\n\t        if (options.srcName) {\n\t          ret = ret.toStringWithSourceMap({ file: options.destName });\n\t          ret.map = ret.map && ret.map.toString();\n\t        } else {\n\t          ret = ret.toString();\n\t        }\n\t      } else {\n\t        ret.compilerOptions = this.options;\n\t      }\n\n\t      return ret;\n\t    } else {\n\t      return fn;\n\t    }\n\t  },\n\n\t  preamble: function preamble() {\n\t    // track the last context pushed into place to allow skipping the\n\t    // getContext opcode when it would be a noop\n\t    this.lastContext = 0;\n\t    this.source = new _codeGen2['default'](this.options.srcName);\n\t    this.decorators = new _codeGen2['default'](this.options.srcName);\n\t  },\n\n\t  createFunctionContext: function createFunctionContext(asObject) {\n\t    var varDeclarations = '';\n\n\t    var locals = this.stackVars.concat(this.registers.list);\n\t    if (locals.length > 0) {\n\t      varDeclarations += ', ' + locals.join(', ');\n\t    }\n\n\t    // Generate minimizer alias mappings\n\t    //\n\t    // When using true SourceNodes, this will update all references to the given alias\n\t    // as the source nodes are reused in situ. For the non-source node compilation mode,\n\t    // aliases will not be used, but this case is already being run on the client and\n\t    // we aren't concern about minimizing the template size.\n\t    var aliasCount = 0;\n\t    for (var alias in this.aliases) {\n\t      // eslint-disable-line guard-for-in\n\t      var node = this.aliases[alias];\n\n\t      if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {\n\t        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n\t        node.children[0] = 'alias' + aliasCount;\n\t      }\n\t    }\n\n\t    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n\t    if (this.useBlockParams || this.useDepths) {\n\t      params.push('blockParams');\n\t    }\n\t    if (this.useDepths) {\n\t      params.push('depths');\n\t    }\n\n\t    // Perform a second pass over the output to merge content when possible\n\t    var source = this.mergeSource(varDeclarations);\n\n\t    if (asObject) {\n\t      params.push(source);\n\n\t      return Function.apply(this, params);\n\t    } else {\n\t      return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n\t    }\n\t  },\n\t  mergeSource: function mergeSource(varDeclarations) {\n\t    var isSimple = this.environment.isSimple,\n\t        appendOnly = !this.forceBuffer,\n\t        appendFirst = undefined,\n\t        sourceSeen = undefined,\n\t        bufferStart = undefined,\n\t        bufferEnd = undefined;\n\t    this.source.each(function (line) {\n\t      if (line.appendToBuffer) {\n\t        if (bufferStart) {\n\t          line.prepend('  + ');\n\t        } else {\n\t          bufferStart = line;\n\t        }\n\t        bufferEnd = line;\n\t      } else {\n\t        if (bufferStart) {\n\t          if (!sourceSeen) {\n\t            appendFirst = true;\n\t          } else {\n\t            bufferStart.prepend('buffer += ');\n\t          }\n\t          bufferEnd.add(';');\n\t          bufferStart = bufferEnd = undefined;\n\t        }\n\n\t        sourceSeen = true;\n\t        if (!isSimple) {\n\t          appendOnly = false;\n\t        }\n\t      }\n\t    });\n\n\t    if (appendOnly) {\n\t      if (bufferStart) {\n\t        bufferStart.prepend('return ');\n\t        bufferEnd.add(';');\n\t      } else if (!sourceSeen) {\n\t        this.source.push('return \"\";');\n\t      }\n\t    } else {\n\t      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n\t      if (bufferStart) {\n\t        bufferStart.prepend('return buffer + ');\n\t        bufferEnd.add(';');\n\t      } else {\n\t        this.source.push('return buffer;');\n\t      }\n\t    }\n\n\t    if (varDeclarations) {\n\t      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n\t    }\n\n\t    return this.source.merge();\n\t  },\n\n\t  // [blockValue]\n\t  //\n\t  // On stack, before: hash, inverse, program, value\n\t  // On stack, after: return value of blockHelperMissing\n\t  //\n\t  // The purpose of this opcode is to take a block of the form\n\t  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n\t  // replace it on the stack with the result of properly\n\t  // invoking blockHelperMissing.\n\t  blockValue: function blockValue(name) {\n\t    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n\t        params = [this.contextName(0)];\n\t    this.setupHelperArgs(name, 0, params);\n\n\t    var blockName = this.popStack();\n\t    params.splice(1, 0, blockName);\n\n\t    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n\t  },\n\n\t  // [ambiguousBlockValue]\n\t  //\n\t  // On stack, before: hash, inverse, program, value\n\t  // Compiler value, before: lastHelper=value of last found helper, if any\n\t  // On stack, after, if no lastHelper: same as [blockValue]\n\t  // On stack, after, if lastHelper: value\n\t  ambiguousBlockValue: function ambiguousBlockValue() {\n\t    // We're being a bit cheeky and reusing the options value from the prior exec\n\t    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n\t        params = [this.contextName(0)];\n\t    this.setupHelperArgs('', 0, params, true);\n\n\t    this.flushInline();\n\n\t    var current = this.topStack();\n\t    params.splice(1, 0, current);\n\n\t    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);\n\t  },\n\n\t  // [appendContent]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: ...\n\t  //\n\t  // Appends the string value of `content` to the current buffer\n\t  appendContent: function appendContent(content) {\n\t    if (this.pendingContent) {\n\t      content = this.pendingContent + content;\n\t    } else {\n\t      this.pendingLocation = this.source.currentLocation;\n\t    }\n\n\t    this.pendingContent = content;\n\t  },\n\n\t  // [append]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: ...\n\t  //\n\t  // Coerces `value` to a String and appends it to the current buffer.\n\t  //\n\t  // If `value` is truthy, or 0, it is coerced into a string and appended\n\t  // Otherwise, the empty string is appended\n\t  append: function append() {\n\t    if (this.isInline()) {\n\t      this.replaceStack(function (current) {\n\t        return [' != null ? ', current, ' : \"\"'];\n\t      });\n\n\t      this.pushSource(this.appendToBuffer(this.popStack()));\n\t    } else {\n\t      var local = this.popStack();\n\t      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n\t      if (this.environment.isSimple) {\n\t        this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n\t      }\n\t    }\n\t  },\n\n\t  // [appendEscaped]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: ...\n\t  //\n\t  // Escape `value` and append it to the buffer\n\t  appendEscaped: function appendEscaped() {\n\t    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));\n\t  },\n\n\t  // [getContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: ...\n\t  // Compiler value, after: lastContext=depth\n\t  //\n\t  // Set the value of the `lastContext` compiler value to the depth\n\t  getContext: function getContext(depth) {\n\t    this.lastContext = depth;\n\t  },\n\n\t  // [pushContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: currentContext, ...\n\t  //\n\t  // Pushes the value of the current context onto the stack.\n\t  pushContext: function pushContext() {\n\t    this.pushStackLiteral(this.contextName(this.lastContext));\n\t  },\n\n\t  // [lookupOnContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: currentContext[name], ...\n\t  //\n\t  // Looks up the value of `name` on the current context and pushes\n\t  // it onto the stack.\n\t  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {\n\t    var i = 0;\n\n\t    if (!scoped && this.options.compat && !this.lastContext) {\n\t      // The depthed query is expected to handle the undefined logic for the root level that\n\t      // is implemented below, so we evaluate that directly in compat mode\n\t      this.push(this.depthedLookup(parts[i++]));\n\t    } else {\n\t      this.pushContext();\n\t    }\n\n\t    this.resolvePath('context', parts, i, falsy, strict);\n\t  },\n\n\t  // [lookupBlockParam]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: blockParam[name], ...\n\t  //\n\t  // Looks up the value of `parts` on the given block param and pushes\n\t  // it onto the stack.\n\t  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {\n\t    this.useBlockParams = true;\n\n\t    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n\t    this.resolvePath('context', parts, 1);\n\t  },\n\n\t  // [lookupData]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: data, ...\n\t  //\n\t  // Push the data lookup operator\n\t  lookupData: function lookupData(depth, parts, strict) {\n\t    if (!depth) {\n\t      this.pushStackLiteral('data');\n\t    } else {\n\t      this.pushStackLiteral('container.data(data, ' + depth + ')');\n\t    }\n\n\t    this.resolvePath('data', parts, 0, true, strict);\n\t  },\n\n\t  resolvePath: function resolvePath(type, parts, i, falsy, strict) {\n\t    // istanbul ignore next\n\n\t    var _this = this;\n\n\t    if (this.options.strict || this.options.assumeObjects) {\n\t      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n\t      return;\n\t    }\n\n\t    var len = parts.length;\n\t    for (; i < len; i++) {\n\t      /* eslint-disable no-loop-func */\n\t      this.replaceStack(function (current) {\n\t        var lookup = _this.nameLookup(current, parts[i], type);\n\t        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n\t        // needs to have the special handling for these values.\n\t        if (!falsy) {\n\t          return [' != null ? ', lookup, ' : ', current];\n\t        } else {\n\t          // Otherwise we can use generic falsy handling\n\t          return [' && ', lookup];\n\t        }\n\t      });\n\t      /* eslint-enable no-loop-func */\n\t    }\n\t  },\n\n\t  // [resolvePossibleLambda]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: resolved value, ...\n\t  //\n\t  // If the `value` is a lambda, replace it on the stack by\n\t  // the return value of the lambda\n\t  resolvePossibleLambda: function resolvePossibleLambda() {\n\t    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n\t  },\n\n\t  // [pushStringParam]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: string, currentContext, ...\n\t  //\n\t  // This opcode is designed for use in string mode, which\n\t  // provides the string value of a parameter along with its\n\t  // depth rather than resolving it immediately.\n\t  pushStringParam: function pushStringParam(string, type) {\n\t    this.pushContext();\n\t    this.pushString(type);\n\n\t    // If it's a subexpression, the string result\n\t    // will be pushed after this opcode.\n\t    if (type !== 'SubExpression') {\n\t      if (typeof string === 'string') {\n\t        this.pushString(string);\n\t      } else {\n\t        this.pushStackLiteral(string);\n\t      }\n\t    }\n\t  },\n\n\t  emptyHash: function emptyHash(omitEmpty) {\n\t    if (this.trackIds) {\n\t      this.push('{}'); // hashIds\n\t    }\n\t    if (this.stringParams) {\n\t      this.push('{}'); // hashContexts\n\t      this.push('{}'); // hashTypes\n\t    }\n\t    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n\t  },\n\t  pushHash: function pushHash() {\n\t    if (this.hash) {\n\t      this.hashes.push(this.hash);\n\t    }\n\t    this.hash = { values: [], types: [], contexts: [], ids: [] };\n\t  },\n\t  popHash: function popHash() {\n\t    var hash = this.hash;\n\t    this.hash = this.hashes.pop();\n\n\t    if (this.trackIds) {\n\t      this.push(this.objectLiteral(hash.ids));\n\t    }\n\t    if (this.stringParams) {\n\t      this.push(this.objectLiteral(hash.contexts));\n\t      this.push(this.objectLiteral(hash.types));\n\t    }\n\n\t    this.push(this.objectLiteral(hash.values));\n\t  },\n\n\t  // [pushString]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: quotedString(string), ...\n\t  //\n\t  // Push a quoted version of `string` onto the stack\n\t  pushString: function pushString(string) {\n\t    this.pushStackLiteral(this.quotedString(string));\n\t  },\n\n\t  // [pushLiteral]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: value, ...\n\t  //\n\t  // Pushes a value onto the stack. This operation prevents\n\t  // the compiler from creating a temporary variable to hold\n\t  // it.\n\t  pushLiteral: function pushLiteral(value) {\n\t    this.pushStackLiteral(value);\n\t  },\n\n\t  // [pushProgram]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: program(guid), ...\n\t  //\n\t  // Push a program expression onto the stack. This takes\n\t  // a compile-time guid and converts it into a runtime-accessible\n\t  // expression.\n\t  pushProgram: function pushProgram(guid) {\n\t    if (guid != null) {\n\t      this.pushStackLiteral(this.programExpression(guid));\n\t    } else {\n\t      this.pushStackLiteral(null);\n\t    }\n\t  },\n\n\t  // [registerDecorator]\n\t  //\n\t  // On stack, before: hash, program, params..., ...\n\t  // On stack, after: ...\n\t  //\n\t  // Pops off the decorator's parameters, invokes the decorator,\n\t  // and inserts the decorator into the decorators list.\n\t  registerDecorator: function registerDecorator(paramSize, name) {\n\t    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n\t        options = this.setupHelperArgs(name, paramSize);\n\n\t    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);\n\t  },\n\n\t  // [invokeHelper]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of helper invocation\n\t  //\n\t  // Pops off the helper's parameters, invokes the helper,\n\t  // and pushes the helper's return value onto the stack.\n\t  //\n\t  // If the helper is not found, `helperMissing` is called.\n\t  invokeHelper: function invokeHelper(paramSize, name, isSimple) {\n\t    var nonHelper = this.popStack(),\n\t        helper = this.setupHelper(paramSize, name),\n\t        simple = isSimple ? [helper.name, ' || '] : '';\n\n\t    var lookup = ['('].concat(simple, nonHelper);\n\t    if (!this.options.strict) {\n\t      lookup.push(' || ', this.aliasable('helpers.helperMissing'));\n\t    }\n\t    lookup.push(')');\n\n\t    this.push(this.source.functionCall(lookup, 'call', helper.callParams));\n\t  },\n\n\t  // [invokeKnownHelper]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of helper invocation\n\t  //\n\t  // This operation is used when the helper is known to exist,\n\t  // so a `helperMissing` fallback is not required.\n\t  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {\n\t    var helper = this.setupHelper(paramSize, name);\n\t    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n\t  },\n\n\t  // [invokeAmbiguous]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of disambiguation\n\t  //\n\t  // This operation is used when an expression like `{{foo}}`\n\t  // is provided, but we don't know at compile-time whether it\n\t  // is a helper or a path.\n\t  //\n\t  // This operation emits more code than the other options,\n\t  // and can be avoided by passing the `knownHelpers` and\n\t  // `knownHelpersOnly` flags at compile-time.\n\t  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {\n\t    this.useRegister('helper');\n\n\t    var nonHelper = this.popStack();\n\n\t    this.emptyHash();\n\t    var helper = this.setupHelper(0, name, helperCall);\n\n\t    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n\t    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n\t    if (!this.options.strict) {\n\t      lookup[0] = '(helper = ';\n\t      lookup.push(' != null ? helper : ', this.aliasable('helpers.helperMissing'));\n\t    }\n\n\t    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('\"function\"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);\n\t  },\n\n\t  // [invokePartial]\n\t  //\n\t  // On stack, before: context, ...\n\t  // On stack after: result of partial invocation\n\t  //\n\t  // This operation pops off a context, invokes a partial with that context,\n\t  // and pushes the result of the invocation back.\n\t  invokePartial: function invokePartial(isDynamic, name, indent) {\n\t    var params = [],\n\t        options = this.setupParams(name, 1, params);\n\n\t    if (isDynamic) {\n\t      name = this.popStack();\n\t      delete options.name;\n\t    }\n\n\t    if (indent) {\n\t      options.indent = JSON.stringify(indent);\n\t    }\n\t    options.helpers = 'helpers';\n\t    options.partials = 'partials';\n\t    options.decorators = 'container.decorators';\n\n\t    if (!isDynamic) {\n\t      params.unshift(this.nameLookup('partials', name, 'partial'));\n\t    } else {\n\t      params.unshift(name);\n\t    }\n\n\t    if (this.options.compat) {\n\t      options.depths = 'depths';\n\t    }\n\t    options = this.objectLiteral(options);\n\t    params.push(options);\n\n\t    this.push(this.source.functionCall('container.invokePartial', '', params));\n\t  },\n\n\t  // [assignToHash]\n\t  //\n\t  // On stack, before: value, ..., hash, ...\n\t  // On stack, after: ..., hash, ...\n\t  //\n\t  // Pops a value off the stack and assigns it to the current hash\n\t  assignToHash: function assignToHash(key) {\n\t    var value = this.popStack(),\n\t        context = undefined,\n\t        type = undefined,\n\t        id = undefined;\n\n\t    if (this.trackIds) {\n\t      id = this.popStack();\n\t    }\n\t    if (this.stringParams) {\n\t      type = this.popStack();\n\t      context = this.popStack();\n\t    }\n\n\t    var hash = this.hash;\n\t    if (context) {\n\t      hash.contexts[key] = context;\n\t    }\n\t    if (type) {\n\t      hash.types[key] = type;\n\t    }\n\t    if (id) {\n\t      hash.ids[key] = id;\n\t    }\n\t    hash.values[key] = value;\n\t  },\n\n\t  pushId: function pushId(type, name, child) {\n\t    if (type === 'BlockParam') {\n\t      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n\t    } else if (type === 'PathExpression') {\n\t      this.pushString(name);\n\t    } else if (type === 'SubExpression') {\n\t      this.pushStackLiteral('true');\n\t    } else {\n\t      this.pushStackLiteral('null');\n\t    }\n\t  },\n\n\t  // HELPERS\n\n\t  compiler: JavaScriptCompiler,\n\n\t  compileChildren: function compileChildren(environment, options) {\n\t    var children = environment.children,\n\t        child = undefined,\n\t        compiler = undefined;\n\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      child = children[i];\n\t      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n\t      var existing = this.matchExistingProgram(child);\n\n\t      if (existing == null) {\n\t        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n\t        var index = this.context.programs.length;\n\t        child.index = index;\n\t        child.name = 'program' + index;\n\t        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n\t        this.context.decorators[index] = compiler.decorators;\n\t        this.context.environments[index] = child;\n\n\t        this.useDepths = this.useDepths || compiler.useDepths;\n\t        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n\t        child.useDepths = this.useDepths;\n\t        child.useBlockParams = this.useBlockParams;\n\t      } else {\n\t        child.index = existing.index;\n\t        child.name = 'program' + existing.index;\n\n\t        this.useDepths = this.useDepths || existing.useDepths;\n\t        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n\t      }\n\t    }\n\t  },\n\t  matchExistingProgram: function matchExistingProgram(child) {\n\t    for (var i = 0, len = this.context.environments.length; i < len; i++) {\n\t      var environment = this.context.environments[i];\n\t      if (environment && environment.equals(child)) {\n\t        return environment;\n\t      }\n\t    }\n\t  },\n\n\t  programExpression: function programExpression(guid) {\n\t    var child = this.environment.children[guid],\n\t        programParams = [child.index, 'data', child.blockParams];\n\n\t    if (this.useBlockParams || this.useDepths) {\n\t      programParams.push('blockParams');\n\t    }\n\t    if (this.useDepths) {\n\t      programParams.push('depths');\n\t    }\n\n\t    return 'container.program(' + programParams.join(', ') + ')';\n\t  },\n\n\t  useRegister: function useRegister(name) {\n\t    if (!this.registers[name]) {\n\t      this.registers[name] = true;\n\t      this.registers.list.push(name);\n\t    }\n\t  },\n\n\t  push: function push(expr) {\n\t    if (!(expr instanceof Literal)) {\n\t      expr = this.source.wrap(expr);\n\t    }\n\n\t    this.inlineStack.push(expr);\n\t    return expr;\n\t  },\n\n\t  pushStackLiteral: function pushStackLiteral(item) {\n\t    this.push(new Literal(item));\n\t  },\n\n\t  pushSource: function pushSource(source) {\n\t    if (this.pendingContent) {\n\t      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n\t      this.pendingContent = undefined;\n\t    }\n\n\t    if (source) {\n\t      this.source.push(source);\n\t    }\n\t  },\n\n\t  replaceStack: function replaceStack(callback) {\n\t    var prefix = ['('],\n\t        stack = undefined,\n\t        createdStack = undefined,\n\t        usedLiteral = undefined;\n\n\t    /* istanbul ignore next */\n\t    if (!this.isInline()) {\n\t      throw new _exception2['default']('replaceStack on non-inline');\n\t    }\n\n\t    // We want to merge the inline statement into the replacement statement via ','\n\t    var top = this.popStack(true);\n\n\t    if (top instanceof Literal) {\n\t      // Literals do not need to be inlined\n\t      stack = [top.value];\n\t      prefix = ['(', stack];\n\t      usedLiteral = true;\n\t    } else {\n\t      // Get or create the current stack name for use by the inline\n\t      createdStack = true;\n\t      var _name = this.incrStack();\n\n\t      prefix = ['((', this.push(_name), ' = ', top, ')'];\n\t      stack = this.topStack();\n\t    }\n\n\t    var item = callback.call(this, stack);\n\n\t    if (!usedLiteral) {\n\t      this.popStack();\n\t    }\n\t    if (createdStack) {\n\t      this.stackSlot--;\n\t    }\n\t    this.push(prefix.concat(item, ')'));\n\t  },\n\n\t  incrStack: function incrStack() {\n\t    this.stackSlot++;\n\t    if (this.stackSlot > this.stackVars.length) {\n\t      this.stackVars.push('stack' + this.stackSlot);\n\t    }\n\t    return this.topStackName();\n\t  },\n\t  topStackName: function topStackName() {\n\t    return 'stack' + this.stackSlot;\n\t  },\n\t  flushInline: function flushInline() {\n\t    var inlineStack = this.inlineStack;\n\t    this.inlineStack = [];\n\t    for (var i = 0, len = inlineStack.length; i < len; i++) {\n\t      var entry = inlineStack[i];\n\t      /* istanbul ignore if */\n\t      if (entry instanceof Literal) {\n\t        this.compileStack.push(entry);\n\t      } else {\n\t        var stack = this.incrStack();\n\t        this.pushSource([stack, ' = ', entry, ';']);\n\t        this.compileStack.push(stack);\n\t      }\n\t    }\n\t  },\n\t  isInline: function isInline() {\n\t    return this.inlineStack.length;\n\t  },\n\n\t  popStack: function popStack(wrapped) {\n\t    var inline = this.isInline(),\n\t        item = (inline ? this.inlineStack : this.compileStack).pop();\n\n\t    if (!wrapped && item instanceof Literal) {\n\t      return item.value;\n\t    } else {\n\t      if (!inline) {\n\t        /* istanbul ignore next */\n\t        if (!this.stackSlot) {\n\t          throw new _exception2['default']('Invalid stack pop');\n\t        }\n\t        this.stackSlot--;\n\t      }\n\t      return item;\n\t    }\n\t  },\n\n\t  topStack: function topStack() {\n\t    var stack = this.isInline() ? this.inlineStack : this.compileStack,\n\t        item = stack[stack.length - 1];\n\n\t    /* istanbul ignore if */\n\t    if (item instanceof Literal) {\n\t      return item.value;\n\t    } else {\n\t      return item;\n\t    }\n\t  },\n\n\t  contextName: function contextName(context) {\n\t    if (this.useDepths && context) {\n\t      return 'depths[' + context + ']';\n\t    } else {\n\t      return 'depth' + context;\n\t    }\n\t  },\n\n\t  quotedString: function quotedString(str) {\n\t    return this.source.quotedString(str);\n\t  },\n\n\t  objectLiteral: function objectLiteral(obj) {\n\t    return this.source.objectLiteral(obj);\n\t  },\n\n\t  aliasable: function aliasable(name) {\n\t    var ret = this.aliases[name];\n\t    if (ret) {\n\t      ret.referenceCount++;\n\t      return ret;\n\t    }\n\n\t    ret = this.aliases[name] = this.source.wrap(name);\n\t    ret.aliasable = true;\n\t    ret.referenceCount = 1;\n\n\t    return ret;\n\t  },\n\n\t  setupHelper: function setupHelper(paramSize, name, blockHelper) {\n\t    var params = [],\n\t        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n\t    var foundHelper = this.nameLookup('helpers', name, 'helper'),\n\t        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');\n\n\t    return {\n\t      params: params,\n\t      paramsInit: paramsInit,\n\t      name: foundHelper,\n\t      callParams: [callContext].concat(params)\n\t    };\n\t  },\n\n\t  setupParams: function setupParams(helper, paramSize, params) {\n\t    var options = {},\n\t        contexts = [],\n\t        types = [],\n\t        ids = [],\n\t        objectArgs = !params,\n\t        param = undefined;\n\n\t    if (objectArgs) {\n\t      params = [];\n\t    }\n\n\t    options.name = this.quotedString(helper);\n\t    options.hash = this.popStack();\n\n\t    if (this.trackIds) {\n\t      options.hashIds = this.popStack();\n\t    }\n\t    if (this.stringParams) {\n\t      options.hashTypes = this.popStack();\n\t      options.hashContexts = this.popStack();\n\t    }\n\n\t    var inverse = this.popStack(),\n\t        program = this.popStack();\n\n\t    // Avoid setting fn and inverse if neither are set. This allows\n\t    // helpers to do a check for `if (options.fn)`\n\t    if (program || inverse) {\n\t      options.fn = program || 'container.noop';\n\t      options.inverse = inverse || 'container.noop';\n\t    }\n\n\t    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n\t    // so we need to pop them off the stack in reverse order\n\t    var i = paramSize;\n\t    while (i--) {\n\t      param = this.popStack();\n\t      params[i] = param;\n\n\t      if (this.trackIds) {\n\t        ids[i] = this.popStack();\n\t      }\n\t      if (this.stringParams) {\n\t        types[i] = this.popStack();\n\t        contexts[i] = this.popStack();\n\t      }\n\t    }\n\n\t    if (objectArgs) {\n\t      options.args = this.source.generateArray(params);\n\t    }\n\n\t    if (this.trackIds) {\n\t      options.ids = this.source.generateArray(ids);\n\t    }\n\t    if (this.stringParams) {\n\t      options.types = this.source.generateArray(types);\n\t      options.contexts = this.source.generateArray(contexts);\n\t    }\n\n\t    if (this.options.data) {\n\t      options.data = 'data';\n\t    }\n\t    if (this.useBlockParams) {\n\t      options.blockParams = 'blockParams';\n\t    }\n\t    return options;\n\t  },\n\n\t  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {\n\t    var options = this.setupParams(helper, paramSize, params);\n\t    options = this.objectLiteral(options);\n\t    if (useRegister) {\n\t      this.useRegister('options');\n\t      params.push('options');\n\t      return ['options=', options];\n\t    } else if (params) {\n\t      params.push(options);\n\t      return '';\n\t    } else {\n\t      return options;\n\t    }\n\t  }\n\t};\n\n\t(function () {\n\t  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');\n\n\t  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n\t  for (var i = 0, l = reservedWords.length; i < l; i++) {\n\t    compilerWords[reservedWords[i]] = true;\n\t  }\n\t})();\n\n\tJavaScriptCompiler.isValidJavaScriptVariableName = function (name) {\n\t  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);\n\t};\n\n\tfunction strictLookup(requireTerminal, compiler, parts, type) {\n\t  var stack = compiler.popStack(),\n\t      i = 0,\n\t      len = parts.length;\n\t  if (requireTerminal) {\n\t    len--;\n\t  }\n\n\t  for (; i < len; i++) {\n\t    stack = compiler.nameLookup(stack, parts[i], type);\n\t  }\n\n\t  if (requireTerminal) {\n\t    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];\n\t  } else {\n\t    return stack;\n\t  }\n\t}\n\n\texports['default'] = JavaScriptCompiler;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* global define */\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar SourceNode = undefined;\n\n\ttry {\n\t  /* istanbul ignore next */\n\t  if (false) {\n\t    // We don't support this in AMD environments. For these environments, we asusme that\n\t    // they are running on the browser and thus have no need for the source-map library.\n\t    var SourceMap = require('source-map');\n\t    SourceNode = SourceMap.SourceNode;\n\t  }\n\t} catch (err) {}\n\t/* NOP */\n\n\t/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\n\tif (!SourceNode) {\n\t  SourceNode = function (line, column, srcFile, chunks) {\n\t    this.src = '';\n\t    if (chunks) {\n\t      this.add(chunks);\n\t    }\n\t  };\n\t  /* istanbul ignore next */\n\t  SourceNode.prototype = {\n\t    add: function add(chunks) {\n\t      if (_utils.isArray(chunks)) {\n\t        chunks = chunks.join('');\n\t      }\n\t      this.src += chunks;\n\t    },\n\t    prepend: function prepend(chunks) {\n\t      if (_utils.isArray(chunks)) {\n\t        chunks = chunks.join('');\n\t      }\n\t      this.src = chunks + this.src;\n\t    },\n\t    toStringWithSourceMap: function toStringWithSourceMap() {\n\t      return { code: this.toString() };\n\t    },\n\t    toString: function toString() {\n\t      return this.src;\n\t    }\n\t  };\n\t}\n\n\tfunction castChunk(chunk, codeGen, loc) {\n\t  if (_utils.isArray(chunk)) {\n\t    var ret = [];\n\n\t    for (var i = 0, len = chunk.length; i < len; i++) {\n\t      ret.push(codeGen.wrap(chunk[i], loc));\n\t    }\n\t    return ret;\n\t  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n\t    // Handle primitives that the SourceNode will throw up on\n\t    return chunk + '';\n\t  }\n\t  return chunk;\n\t}\n\n\tfunction CodeGen(srcFile) {\n\t  this.srcFile = srcFile;\n\t  this.source = [];\n\t}\n\n\tCodeGen.prototype = {\n\t  isEmpty: function isEmpty() {\n\t    return !this.source.length;\n\t  },\n\t  prepend: function prepend(source, loc) {\n\t    this.source.unshift(this.wrap(source, loc));\n\t  },\n\t  push: function push(source, loc) {\n\t    this.source.push(this.wrap(source, loc));\n\t  },\n\n\t  merge: function merge() {\n\t    var source = this.empty();\n\t    this.each(function (line) {\n\t      source.add(['  ', line, '\\n']);\n\t    });\n\t    return source;\n\t  },\n\n\t  each: function each(iter) {\n\t    for (var i = 0, len = this.source.length; i < len; i++) {\n\t      iter(this.source[i]);\n\t    }\n\t  },\n\n\t  empty: function empty() {\n\t    var loc = this.currentLocation || { start: {} };\n\t    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n\t  },\n\t  wrap: function wrap(chunk) {\n\t    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];\n\n\t    if (chunk instanceof SourceNode) {\n\t      return chunk;\n\t    }\n\n\t    chunk = castChunk(chunk, this, loc);\n\n\t    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n\t  },\n\n\t  functionCall: function functionCall(fn, type, params) {\n\t    params = this.generateList(params);\n\t    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n\t  },\n\n\t  quotedString: function quotedString(str) {\n\t    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n\t    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n\t  },\n\n\t  objectLiteral: function objectLiteral(obj) {\n\t    var pairs = [];\n\n\t    for (var key in obj) {\n\t      if (obj.hasOwnProperty(key)) {\n\t        var value = castChunk(obj[key], this);\n\t        if (value !== 'undefined') {\n\t          pairs.push([this.quotedString(key), ':', value]);\n\t        }\n\t      }\n\t    }\n\n\t    var ret = this.generateList(pairs);\n\t    ret.prepend('{');\n\t    ret.add('}');\n\t    return ret;\n\t  },\n\n\t  generateList: function generateList(entries) {\n\t    var ret = this.empty();\n\n\t    for (var i = 0, len = entries.length; i < len; i++) {\n\t      if (i) {\n\t        ret.add(',');\n\t      }\n\n\t      ret.add(castChunk(entries[i], this));\n\t    }\n\n\t    return ret;\n\t  },\n\n\t  generateArray: function generateArray(entries) {\n\t    var ret = this.generateList(entries);\n\t    ret.prepend('[');\n\t    ret.add(']');\n\n\t    return ret;\n\t  }\n\t};\n\n\texports['default'] = CodeGen;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ])\n});\n;","Fastly_Cdn/js/upload-vcl.js":"define(\n    [\n        \"jquery\",\n        \"setServiceLabel\",\n        \"overlay\",\n        \"resetAllMessages\",\n        \"showErrorMessage\",\n        \"Magento_Ui/js/modal/confirm\",\n        'mage/translate'\n    ],\n    function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, confirm) {\n        return function (config, serviceStatus, isAlreadyConfigured) {\n            /* VCL button messages */\n            let successVclBtnMsg = $('#fastly-success-vcl-button-msg');\n            let errorVclBtnMsg = $('#fastly-error-vcl-button-msg');\n            let outdatedErrorMsg = $(\"#fastly-warning-outdated-vcl-button-msg\");\n            let active_version = serviceStatus.active_version;\n\n            $(document).ready(\n                function () {\n                    outdatedErrorMsg.removeClass('fastly-button-messages');\n                    outdatedErrorMsg.addClass('changed-vcl-snippet-warning');\n                    outdatedErrorMsg.css({\n                        'font-size': '1.2rem',\n                        'margin-top': '5px',\n                        'padding': '1.4rem 4rem 1.4rem 5.5rem'\n                    });\n                    checkUpdateFlag();\n                    let uploadOptions = {\n                        title: jQuery.mage.__('You are about to upload VCL to Fastly '),\n                        content: function () {\n                            return document.getElementById('fastly-uploadvcl-template').textContent;\n                        },\n                        actionOk: function () {\n                            uploadVcl(active_version);\n                        }\n                    };\n\n                    function isWarningDismissed(activeVersion)\n                    {\n                        $.ajax(\n                            {\n                                type: 'GET',\n                                url: config.isWarningDismissed,\n                                data: {active_version: activeVersion},\n                                showLoader: false,\n                                success: function (response) {\n                                    if (response.status !== false) {\n                                        resetAllMessages();\n                                        if (response.dismissed !== true) {\n                                            compareVclVersions();\n                                            return;\n                                        }\n\n                                        return;\n                                    }\n\n                                    return errorVclBtnMsg.text($.mage.__(response.msg)).show();\n                                }\n                            }\n                        )\n                    }\n\n                    function checkUpdateFlag()\n                    {\n                        $.ajax({\n                            type: 'GET',\n                            url: config.getUpdateFlag,\n                            showLoader: false,\n                            success: function (response) {\n                                if (response.flag !== true) {    //if VCL is not Uploaded\n                                    $(\".changed-vcl-snippet-warning\").text($.mage.__(response.msg)).show().off('click');\n                                    return;\n                                }\n\n                                isWarningDismissed(active_version);\n                            }\n                        })\n                    }\n\n                    function compareVclVersions()\n                    {\n                        $.ajax(\n                            {\n                                type: 'GET',\n                                url: config.vclComparison,\n                                showLoader: false,\n                                data: {'active_version': active_version},\n                                success: function (response) {\n                                    if (response.status !== true) {\n                                        let span = document.createElement('span');\n                                        span.setAttribute('class', 'fastly-dismiss-warning-action');\n                                        span.setAttribute('title', 'Dismiss Warning');\n                                        outdatedErrorMsg.text($.mage.__(response.msg)).show();\n                                        outdatedErrorMsg.append(span);\n                                        openDismissModalOnClick();\n                                    }\n                                }\n                            }\n                        );\n                    }\n\n                    /**\n                     * VCL Upload button on click event\n                     */\n                    $('#fastly_vcl_upload_button').on(\n                        'click',\n                        function () {\n                            if (isAlreadyConfigured !== true) {\n                                $(this).attr('disabled', true);\n                                return alert($.mage.__('Please save config prior to continuing.'));\n                            }\n\n                            resetAllMessages();\n\n                            $.when(\n                                $.ajax(\n                                    {\n                                        type: \"GET\",\n                                        url: config.serviceInfoUrl,\n                                        showLoader: true\n                                    }\n                                )\n                            ).done(\n                                function (service) {\n                                    if (service.status === false) {\n                                        return errorVclBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                                    }\n\n                                    active_version = service.active_version;\n                                    let next_version = service.next_version;\n                                    let service_name = service.service.name;\n                                    overlay(uploadOptions);\n                                    setServiceLabel(active_version, next_version, service_name);\n\n                                }\n                            ).fail(\n                                function () {\n                                    return errorVclBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                                }\n                            );\n                        }\n                    );\n\n                    /**\n                     * Upload VCL snippets to the Fastly service\n                     */\n                    function uploadVcl()\n                    {\n                        let activate_vcl_flag = false;\n\n                        if ($('#fastly_activate_vcl').is(':checked')) {\n                            activate_vcl_flag = true;\n                        }\n\n                        $.ajax(\n                            {\n                                type: \"POST\",\n                                url: config.vclUploadUrl,\n                                data: {\n                                    'activate_flag': activate_vcl_flag,\n                                    'active_version': active_version\n                                },\n                                showLoader: true\n                            }\n                        ).done(\n                            function (response) {\n                                if (response.status === true) {\n                                    modal.modal('closeModal');\n                                    $(\".changed-vcl-snippet-warning\").text();\n                                    $(\".changed-vcl-snippet-warning\").hide();\n                                    successVclBtnMsg.text($.mage.__('VCL file is successfully uploaded to the Fastly service.')).show();\n                                } else {\n                                    resetAllMessages();\n                                    showErrorMessage(response.msg);\n                                }\n                            }\n                        );\n                    }\n\n                    function openDismissModalOnClick()\n                    {\n                        outdatedErrorMsg.on(\n                            'hover',\n                            function () {\n                                $(this).css('cursor', 'pointer');\n                            }\n                        );\n\n                        outdatedErrorMsg.on(\n                            'click',\n                            function () {\n                                confirm(\n                                    {\n                                        title: 'Dismiss outdated VCL warning',\n                                        content: 'Are you sure you want to dismiss warning for the current version #<b>' + active_version + '</b> ?',\n                                        actions: {\n                                            confirm: function () {\n                                                dismissWarning(active_version);\n                                            },\n                                            cancel: function () {\n                                            }\n                                        }\n                                    }\n                                );\n                            }\n                        );\n\n                        function dismissWarning(version)\n                        {\n                            $.ajax(\n                                {\n                                    type: 'GET',\n                                    url: config.dismissWarning,\n                                    showLoader: true,\n                                    data: {active_version: version},\n                                    success: function (response) {\n                                        if (response.status !== false) {\n                                            resetAllMessages();\n                                            return successVclBtnMsg.text($.mage.__(response.msg)).show();\n                                        }\n\n                                        return errorVclBtnMsg.text($.mage.__(response.msg)).show();\n                                    }\n                                }\n                            );\n                        }\n                    }\n                }\n            );\n        }\n    }\n);","Fastly_Cdn/js/backends.js":"define([\n    \"jquery\",\n    'Magento_Ui/js/modal/confirm',\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate',\n], function ($, confirmation, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        let backends;\n        let backend_name;\n        let active_version = serviceStatus.active_version;\n        let conditionName = null;\n        let applyIf = null;\n        let conditionPriority = null;\n        let backendModal;\n        let conditionModal;\n        let conditions;\n        let oldName;\n\n        /**\n         * Backend modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let backendOptions = {\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('fastly-create-backend-template').textContent;\n            },\n            actionOk: function () {\n                configureBackend(active_version);\n            }\n        };\n\n        let createBackendOptions = {\n            title: jQuery.mage.__('Create Backend'),\n            content: function () {\n                return document.getElementById('fastly-create-backend-template').textContent;\n            },\n            actionOk: function () {\n                createBackend(active_version);\n            }\n        };\n\n        let createConditionOptions = {\n            title: jQuery.mage.__('Create a new request condition'),\n            content: function () {\n                return document.getElementById('fastly-create-condition-template').textContent;\n            },\n            actionOk: function () {\n                createCondition();\n            },\n        };\n\n        /**\n         * Trigger the Backends list call\n         */\n        getBackends(active_version, false).done(function (response) {\n            $('.loading-backends').hide();\n            if (response !== false) {\n                if (response.backends.length > 0) {\n                    backends = response.backends;\n                    processBackends(response.backends);\n                } else {\n                    $('.no-backends').show();\n                }\n            }\n        });\n\n        /**\n         * Get the list of Backends\n         *\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function getBackends(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.fetchBackendsUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        function getAllConditions(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getAllConditionsUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        function renderAllConditions(active_version, loaderVisibility)\n        {\n            $('#condition_name').val('');\n            $('#apply_if').val('');\n            $('#condition_priority').val('');\n            return getAllConditions(active_version, loaderVisibility)\n                .done(function (response) {\n                    let html = '';\n                    $('#attach_span').hide();\n                    if (response !== false) {\n                        conditions = response.conditions;\n                        html += '<option value=\"\">no condition</option>';\n                        $.each(conditions, function (index, condition) {\n                            if (condition.type === \"REQUEST\") {\n                                html += '<option value=\"'+condition.name+'\">'+condition.name+' ('+condition.type+') '+condition.statement+'</option>';\n                            }\n                        });\n                    }\n                    $('#conditions').show();\n                    $('#conditions').prop('disabled', false);\n                    $('#detach').show();\n                    $('#create-condition').show();\n                    $('#sep').show();\n                    $('#conditions').html(html);\n                })\n        }\n\n        /**\n         *\n         * @param {array} dataCenters\n         */\n        function generateDataCenterOptions(dataCenters)\n        {\n            $.each(dataCenters, function (i, group) {\n                let optGroup = $(document.createElement('optgroup'));\n                $(optGroup).attr('label', i);\n\n                $.each(group, function (j, dataCenter) {\n                    let option = $(document.createElement('option'));\n                    let text = $(document.createTextNode(dataCenter.label))\n\n                    $(option).append(text);\n                    $(option).val(dataCenter.value);\n                    $(optGroup).append(option);\n                });\n\n                $('#backend_shield').append(optGroup)\n            });\n        }\n\n        /**\n         * Process and display the list of Backends\n         *\n         * @param backends\n         */\n        function processBackends(backends)\n        {\n            $('#fastly-backends-list').html('');\n            $.each(backends, function (index, backend) {\n                let html = `<tr id=\"fastly_${index}\">\n                    <td>\n                        <input data-backendId='${index}' id='backend_${index}' value='${backend.name}' disabled='disabled' class='input-text' type='text'/>\n                    </td>\n                    <td class='col-actions'>\n                        <button class='action-delete fastly-edit-backend-icon' data-backend-id='${index}' id='fastly-edit-backend_${index}' title='Edit backend' type='button'/>\n                        <button class='action-delete fastly-remove-backend-icon' data-backend-id='${index}' data-backend-name='${backend.name}' id='fastly-remove-backend_${index}' title='Remove backend' type='button'/>\n                    </td>\n                </tr>`;\n                $('#fastly-backends-list').append(html);\n            });\n        }\n\n        /**\n         * Update the Backend configuration\n         */\n        function configureBackend()\n        {\n            let activate_backend = false;\n\n            if ($('#fastly_activate_backend').is(':checked')) {\n                activate_backend = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.configureBackendUrl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_backend,\n                    'old_name': oldName,\n                    'name': $('#backend_name').val(),\n                    'backend_address': $('#backend_address').val(),\n                    'auto_loadbalance': $('#auto_loadbalance').val(),\n                    'weight': $('#weight').val(),\n                    'shield': $('#backend_shield').val(),\n                    'use_ssl': $('input:radio[name=tls-radio]:checked').val(),\n                    'tls_yes_port': $('#tls-yes-port').val(),\n                    'tls_no_port': $('#tls-no-port').val(),\n                    'ssl_check_cert': $('input:radio[name=certificate-radio]:checked').val(),\n                    'ssl_cert_hostname': $('#certificate-hostname').val(),\n                    'ssl_sni_hostname': $('#sni-hostname').val(),\n                    'ssl_ca_cert': $('#tls-ca-certificate').val(),\n                    'min_tls_version': $('#minimum-tls').val(),\n                    'max_tls_version': $('#maximum-tls').val(),\n                    'ssl_ciphers': $('#ciphersuites').val(),\n                    'max_conn': $('#backend_maximum_connections').val(),\n                    'error_threshold': $('#backend_error_threshold').val(),\n                    'connect_timeout': $('#backend_connect_timeout').val(),\n                    'first_byte_timeout': $('#backend_first_byte_timeout').val(),\n                    'between_bytes_timeout': $('#backend_between_bytes_timeout').val(),\n                    'override_host': $('#override_host').val(),\n                    'condition_name': $('#condition_name').val(),\n                    'apply_if': $('#apply_if').val(),\n                    'condition_priority': $('#condition_priority').val(),\n                    'request_condition': $('#conditions').val()\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        $('#fastly-success-backend-button-msg').text($.mage.__('Backend \"%1\" is successfully updated.').replace('%1', backend_name)).show();\n                        active_version = response.active_version;\n                        backendModal.modal('closeModal');\n                        getBackends(active_version, false).done(function (resp) {\n                            $('.loading-backends').hide();\n                            if (resp !== false) {\n                                if (resp.backends.length > 0) {\n                                    backends = resp.backends;\n                                    processBackends(resp.backends);\n                                } else {\n                                    $('.no-backends').show();\n                                }\n                            }\n                        })\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n\n        function createBackend(active_version)\n        {\n            let activate_backend = false;\n\n            if ($('#fastly_activate_backend').is(':checked')) {\n                activate_backend = true;\n            }\n\n            let condition = $('#conditions').val();\n            let backendName = $('#backend_name').val();\n            let backendAddress = $('#backend_address').val();\n            let backendShield = $('#backend_shield').val();\n            let enableTls = $('input:radio[name=tls-radio]:checked').val();\n            let tlsYesPort = $('#tls-yes-port').val();\n            let tlsNoPort = $('#tls-no-port').val();\n            let verifyCertificate = $('input:radio[name=certificate-radio]:checked').val();\n            let certificateHostname = $('#certificate-hostname').val();\n            let sniHostname = $('#sni-hostname').val();\n            let matchSni = $('#match-sni').is(':checked');\n            let tlsCaCertificate = $('#tls-ca-certificate').val();\n            let minimumTls = $('#minimum-tls').val();\n            let maximumTls = $('#maximum-tls').val();\n            let ciphersuites = $('#ciphersuites').val();\n            let tlsClientCertificate = $('#tls-client-certificate').val();\n            let tlsClientKey = $('#tls-client-key').val();\n            let maximumConnections = $('#backend_maximum_connections').val();\n            let errorThreshold = $('#backend_error_threshold').val();\n            let connectionTimeout = $('#backend_connect_timeout').val();\n            let firstByteTimeout = $('#backend_first_byte_timeout').val();\n            let betweenBytesTimeout = $('#backend_between_bytes_timeout').val();\n            let autoLoadBalance = $('#auto_loadbalance').val();\n            let weight = $('#weight').val();\n            let overrideHost = $('#override_host').val();\n            let conditionName = $('#condition_name').val();\n            let applyIf = $('#apply_if').val();\n            let conditionPriority = $('#condition_priority').val();\n            let requestCondition = $('#conditions').val();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createBackendUrl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_backend,\n                    'name': backendName,\n                    'address': backendAddress,\n                    'shield': backendShield,\n                    'use_ssl': enableTls,\n                    'tls_yes_port': tlsYesPort,\n                    'tls_no_port': tlsNoPort,\n                    'ssl_check_cert': verifyCertificate,\n                    'ssl_cert_hostname': certificateHostname,\n                    'ssl_sni_hostname': sniHostname,\n                    'match_sni': matchSni,\n                    'ssl_ca_cert': tlsCaCertificate,\n                    'max_tls_version': maximumTls,\n                    'min_tls_version': minimumTls,\n                    'ssl_ciphers': ciphersuites,\n                    'ssl_client_cert': tlsClientCertificate,\n                    'ssl_client_key': tlsClientKey,\n                    'max_conn': maximumConnections,\n                    'error_threshold': errorThreshold,\n                    'connect_timeout': connectionTimeout,\n                    'first_byte_timeout': firstByteTimeout,\n                    'between_bytes_timeout': betweenBytesTimeout,\n                    'auto_loadbalance': autoLoadBalance,\n                    'weight': weight,\n                    'form': true,\n                    'override_host': overrideHost,\n                    'condition_name': conditionName,\n                    'apply_if': applyIf,\n                    'condition_priority': conditionPriority,\n                    'request_condition': requestCondition\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        $('#fastly-success-backend-button-msg').text($.mage.__('Backend \"%1\" is successfully created.').replace('%1', backendName)).show();\n                        active_version = response.active_version;\n                        backendModal.modal('closeModal');\n                        $('#fastly_add_backend_button').remove();\n                        $('#fastly_cancel_backend_button').remove();\n                        $('.hostname').remove();\n                        $('.backend-note').remove();\n                        $('#fastly_create_backend_button').show();\n                        getBackends(active_version, false).done(function (resp) {\n                            $('.loading-backends').hide();\n                            if (resp !== false) {\n                                if (resp.backends.length > 0) {\n                                    backends = resp.backends;\n                                    processBackends(resp.backends);\n                                } else {\n                                    $('.no-backends').show();\n                                }\n                            }\n                        });\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n\n        function createCondition()\n        {\n            let conditionName = $('#condition_name_modal').val();\n            let applyIf = $('#apply_if_modal').val();\n            let conditionPriority = $('#condition_priority_modal').val();\n            if (applyIf.length > 512) {\n                showErrorMessage('The expression cannot contain more than 512 characters.');\n                return;\n            } else if (applyIf.length < 1 || conditionName.length < 1) {\n                showErrorMessage('Please fill in the required fields.');\n                return;\n            } else if (isNaN(parseInt(conditionPriority))) {\n                showErrorMessage('Priority value must be an integer.');\n                return;\n            }\n\n            $('#conditions').prop('disabled', true);\n            $('#conditions').html('<option value=\"'+conditionName+'\" selected=\"selected\">'+conditionName+' (REQUEST) '+applyIf+'</option>');\n            $('#condition_name').val(conditionName);\n            $('#apply_if').val(applyIf);\n            $('#condition_priority').val(conditionPriority);\n            $('#detach').hide();\n            $('#create-condition').show();\n            $('#sep').hide();\n            conditionModal.modal('closeModal');\n            $('.fastly-message-error').hide();\n        }\n\n        function deleteBackend(active_version, backend_name)\n        {\n            $.ajax({\n                type: \"POST\",\n                url: config.deleteBackendUrl,\n                data: {\n                    'active_version': active_version,\n                    'name': backend_name\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        $('#fastly-success-backend-button-msg').text($.mage.__('Backend \"%1\" was successfully deleted.').replace('%1', backend_name)).show();\n                        active_version = response.active_version;\n                        $('.loading-backends').show();\n                        $('#fastly-backends-list').html('');\n                        getBackends(active_version, false).done(function (resp) {\n                            $('.loading-backends').hide();\n                            if (resp !== false) {\n                                if (resp.backends.length > 0) {\n                                    backends = resp.backends;\n                                    processBackends(resp.backends);\n                                } else {\n                                    $('.no-backends').show();\n                                }\n                            }\n                        });\n                    } else {\n                        $('#fastly-error-backend-button-msg').text(response.msg).show();\n                    }\n                }\n            });\n        }\n\n        $('body').on('click', '#fastly_create_backend_button', function () {\n            let hostname = $('<input type=\"text\" class=\"hostname\">');\n            let addBtn = $('<button id=\"fastly_add_backend_button\" title=\"Add\" type=\"button\" class=\"action-default scalable\" style=\"margin-right: 10px\"><span>Add</span></button>');\n            let cancelBtn = $('<button id=\"fastly_cancel_backend_button\" title=\"Cancel\" type=\"button\" class=\"action-default scalable\" style=\"\"><span>Cancel</span></button>');\n            $(this).after(hostname);\n            hostname.after(addBtn);\n            addBtn.after(cancelBtn);\n            hostname.after('<p class=\"note backend-note\">Enter a hostname or IPv4 address for the backend</p>');\n            $(this).hide();\n            hostname.focus();\n        });\n\n        $('body').on('click', '#fastly_add_backend_button', function () {\n            let hostnameVal = $('.hostname').val();\n            if (hostnameVal !== '') {\n                if (isAlreadyConfigured !== true) {\n                    $(this).attr('disabled', true);\n                    return alert($.mage.__('Please save config prior to continuing.'));\n                }\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                }).done(function (checkService) {\n                    $.ajax({\n                        type: \"POST\",\n                        url: config.createBackendUrl,\n                        showLoader: true,\n                        data: {\n                            address: hostnameVal,\n                            form: false\n                        }\n                    }).done(function (response) {\n                        if (response.status !== false) {\n                            active_version = checkService.active_version;\n                            let next_version = checkService.next_version;\n                            let service_name = checkService.service.name;\n\n                            overlay(createBackendOptions);\n                            backendModal = modal;\n                            setServiceLabel(active_version, next_version, service_name);\n                            $('.upload-button span').text('Create');\n                            $('#conditions').hide();\n                            $('#detach').hide();\n                            $('#create-condition').hide();\n                            $('#sep').hide();\n                            $('#backend_address').val(hostnameVal);\n                            $('#sni-hostname').val(hostnameVal);\n                            $('#certificate-hostname').val(hostnameVal);\n                            verifyCertificateNotification();\n\n                            if ($('#auto_loadbalance').val() === '0') {\n                                $('.weight').hide();\n                            } else {\n                                $('.weight').show();\n                            }\n                            $('#tls-no-port').attr('disabled', true);\n\n                            generateDataCenterOptions(response.data_centers);\n\n                        } else {\n                            $('#fastly-error-create-backend-button-msg').text($.mage.__(response.msg)).show();\n                        }\n                    });\n                });\n            }\n        });\n\n        $('body').on('click', '#fastly_cancel_backend_button', function () {\n            $('#fastly_add_backend_button').remove();\n            $('#fastly_cancel_backend_button').remove();\n            $('.hostname').remove();\n            $('.backend-note').remove();\n            $('#fastly_create_backend_button').show();\n        });\n\n        $('body').on('change', '#auto_loadbalance', function () {\n            if (this.value === '1') {\n                $('.weight').show();\n            } else {\n                $('.weight').hide();\n            }\n        });\n\n        $('body').on('click', 'input:radio[name=tls-radio]', function () {\n            if (this.value === '0') {\n                $('#certificate-yes').attr('disabled', true);\n                $('#certificate-no').attr('disabled', true);\n                $('#certificate-hostname').attr('disabled', true);\n                $('#tls-yes-port').attr('disabled', true);\n                $('#tls-no-port').attr('disabled', false);\n                $('#sni-hostname').attr('disabled', true);\n                $('#match-sni').attr('disabled', true);\n                $('#tls-ca-certificate').attr('disabled', true);\n                $('#minimum-tls').attr('disabled', true);\n                $('#maximum-tls').attr('disabled', true);\n                $('#ciphersuites').attr('disabled', true);\n                $('#tls-client-certificate').attr('disabled', true);\n                $('#tls-client-key').attr('disabled', true);\n            } else {\n                $('#certificate-yes').attr('disabled', false);\n                $('#certificate-no').attr('disabled', false);\n                $('#certificate-hostname').attr('disabled', false);\n                $('#tls-yes-port').attr('disabled', false);\n                $('#tls-no-port').attr('disabled', true);\n                $('#sni-hostname').attr('disabled', false);\n                $('#match-sni').attr('disabled', false);\n                $('#tls-ca-certificate').attr('disabled', false);\n                $('#minimum-tls').attr('disabled', false);\n                $('#maximum-tls').attr('disabled', false);\n                $('#ciphersuites').attr('disabled', false);\n                $('#tls-client-certificate').attr('disabled', false);\n                $('#tls-client-key').attr('disabled', false);\n            }\n        });\n\n        $('body').on('click', 'input:radio[name=certificate-radio]', function () {\n            if (this.value === '0') {\n                $('#certificate-hostname').attr('disabled', true);\n                $('#match-sni').attr('disabled', true);\n            } else {\n                $('#certificate-hostname').attr('disabled', false);\n                $('#match-sni').attr('disabled', false);\n            }\n        });\n\n        function initValues(backend)\n        {\n            $('#backend_name').val(backend.name);\n            $('#backend_address').val(backend.address);\n            $('#backend_shield option[value=\\'' + backend.shield +'\\']').attr('selected','selected');\n            let loadBalance = backend.auto_loadbalance === true ? 1 : 0;\n            $('#auto_loadbalance option[value=\\'' + loadBalance +'\\']').attr('selected', 'selected');\n            $('#weight').val(backend.weight);\n\n            if (!loadBalance) {\n                $('#weight').parent().parent().hide();\n            }\n\n            if (backend.request_condition) {\n                renderAllConditions(active_version, true).done(function () {\n                    $('#conditions').val(backend.request_condition);\n                })\n            } else {\n                $('#conditions').hide();\n                $('#detach').hide();\n                $('#create-condition').hide();\n                $('#sep').hide();\n            }\n\n            if (backend.ssl_check_cert !== false) {\n                $('#certificate-yes').prop('checked', true);\n                $('#certificate-hostname').val(backend.ssl_cert_hostname);\n            } else {\n                $('#certificate-no').prop('checked', true);\n                $('#certificate-hostname').prop('disabled', true);\n                $('#match-sni').prop('disabled', true);\n            }\n\n            if (backend.use_ssl) {\n                $('#tls-yes').prop('checked', true);\n                $('#tls-no').prop('checked', false);\n                $('#tls-no-port').prop('disabled', true);\n            } else {\n                $('#tls-yes').prop('checked', false);\n                $('#tls-no').prop('checked', true);\n                $('#tls-no-port').val(backend.port);\n                $('#certificate-hostname').prop('disabled', true);\n                $('#tls-ca-certificate').prop('disabled', true);\n                $('#certificate-yes').prop('disabled', true);\n                $('#certificate-no').prop('disabled', true);\n                $('#sni-hostname').prop('disabled', true);\n                $('#minimum-tls').prop('disabled', true);\n                $('#match-sni').prop('disabled', true);\n                $('#maximum-tls').prop('disabled', true);\n                $('#ciphersuites').prop('disabled', true);\n                $('#tls-client-key').prop('disabled', true);\n                $('#tls-yes-port').prop('disabled', true);\n                $('#tls-client-certificate').prop('disabled', true);\n            }\n\n            if (backend.auto_loadbalance !== true) {\n                $('#weight').parent().parent().hide();\n            }\n\n            $('#certificate-hostname').val(backend.ssl_cert_hostname);\n            $('#sni-hostname').val(backend.ssl_sni_hostname);\n            $('#tls-ca-certificate').val(backend.ssl_ca_cert);\n            $('#minimum-tls').val(backend.min_tls_version);\n            $('#maximum-tls').val(backend.max_tls_version);\n            $('#ciphersuites').val(backend.ssl_ciphers);\n            $('#tls-client-certificate').val(backend.ssl_client_cert);\n            $('#tls-client-key').val(backend.ssl_client_key);\n            $('#backend_maximum_connections').val(backend.max_conn);\n            $('#backend_error_threshold').val(backend.error_threshold);\n            $('#backend_connect_timeout').val(backend.connect_timeout);\n            $('#backend_first_byte_timeout').val(backend.first_byte_timeout);\n            $('#backend_between_bytes_timeout').val(backend.between_bytes_timeout);\n            $('#override_host').val(backend.override_host);\n        }\n\n        function verifyCertificateNotification()\n        {\n            $('#certificate-no').on('change', function () {\n                $('#certificate-no-msg').empty();\n                let msg = document.createTextNode('Not verifying the certificate has serious security implications,' +\n                    ' including vulnerability to');\n\n                let a = document.createElement('a');\n                let text = document.createTextNode(' man-in-the-middle attacks.');\n                a.appendChild(text);\n                a.title = 'man-in-the-middle attacks';\n                a.href = 'https://en.wikipedia.org/wiki/Man-in-the-middle_attack';\n                a.target = '_blank';\n                $('#certificate-no-msg').append(msg);\n                $('#certificate-no-msg').append(a);\n            });\n            $('#certificate-yes').on('change', function () {\n                $('#certificate-no-msg').empty();\n            });\n        }\n        /**\n         * Edit Backend button on click event\n         */\n        $('body').on('click', 'button.fastly-edit-backend-icon', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            let backend_id = $(this).data('backend-id');\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (checkService) {\n                active_version = checkService.active_version;\n                let next_version = checkService.next_version;\n                let service_name = checkService.service.name;\n\n                getBackends(active_version, true).done(function (response) {\n                    if (response !== false) {\n                        if (response.backends.length > 0) {\n                            backends = response.backends;\n                        }\n                    }\n\n                    if (backends != null && backend_id != null) {\n                        overlay(backendOptions);\n                        backendModal = modal;\n                        setServiceLabel(active_version, next_version, service_name);\n                        generateDataCenterOptions(response.data_centers);\n                        initValues(backends[backend_id]);\n                        verifyCertificateNotification();\n                        oldName = $('#backend_name').val();\n                        $('.upload-button span').text('Update');\n                        backend_name = backends[backend_id].name;\n                        $('.modal-title').text($.mage.__('Backend \"%1\" configuration').replace('%1', backend_name));\n\n                        if (typeof response.data_centers === \"undefined\")\n                            return;   \n                    }\n                });\n            });\n        });\n\n        $('body').on('click', 'button.fastly-remove-backend-icon', function () {\n            let backend_name = $(this).data('backend-name');\n            confirmation({\n                title: $.mage.__('Warning!'),\n                content: $.mage.__('Confirm that you want to delete: %1').replace('%1', backend_name),\n                actions: {\n                    confirm: function() {\n                        $.ajax({\n                            type: \"GET\",\n                            url: config.serviceInfoUrl,\n                            showLoader: true\n                        }).done(function (checkService) {\n                            active_version = checkService.active_version;\n                            deleteBackend(active_version, backend_name);\n                        });\n                    },\n                }\n            });\n        });\n\n        $('body').on('click', '#attach', function () {\n            renderAllConditions(active_version, true)\n        });\n\n        $('body').on('click', '#detach', function () {\n            $('#conditions').html('');\n            $('#conditions').hide();\n            $('#detach').hide();\n            $('#sep').hide();\n            $('#create-condition').hide();\n            $('#attach_span').show();\n        });\n\n        $('body').on('click', '#create-condition', function () {\n            overlay(createConditionOptions);\n            conditionModal = modal;\n            $('.upload-button span').text('Create');\n        });\n    }\n});\n\n","Fastly_Cdn/js/reset-all-messages.js":"define([\n    \"jquery\"\n], function ($) {\n    return function resetAllMessages()\n    {\n        /**\n         * Reset all Fastly Messages\n         *\n         * @type {*|jQuery|HTMLElement}\n         */\n        let msgWarning = $('.fastly-message-warning');\n        let msgError = $('.fastly-message-error');\n        let msgSuccess = $('.fastly-message-success');\n        let buttonMessages = $('.fastly-button-messages');\n\n        // Modal window warning messages\n        msgWarning.text();\n        msgWarning.hide();\n\n        // Modal windows error messages\n        msgError.text();\n        msgError.hide();\n\n        // Modal windows success messages\n        msgSuccess.text();\n        msgSuccess.hide();\n\n        // Button messages\n        buttonMessages.text();\n        buttonMessages.hide();\n    }\n});","Fastly_Cdn/js/overlay.js":"define([\n    \"jquery\",\n    \"Magento_Ui/js/modal/modal\"\n], function ($) {\n    return function showOverlay(options)\n    {\n        let self = this;\n        let divId = options.id;\n\n        /**\n         * Modal overlay options\n         *\n         * @type {*|jQuery}\n         */\n        this.modal = $('<div/>').attr({id: divId}).html(options.content()).modal({\n            modalClass: 'magento',\n            title: options.title,\n            type: 'slide',\n            closed: function (e, modal) {\n                modal.modal.remove();\n            },\n            opened: function () {\n                if (options.opened) {\n                    options.opened.call(self);\n                }\n            },\n            buttons: [{\n                text: $.mage.__('Cancel'),\n                'class': 'action cancel',\n                click: function () {\n                    this.closeModal();\n                }\n            }, {\n                text: $.mage.__('Upload'),\n                'class': 'action primary upload-button',\n                click: function () {\n                    options.actionOk.call(self);\n                }\n            }]\n        });\n        this.modal.modal('openModal');\n    }\n});","Fastly_Cdn/js/tls.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* Force TLS state elements*/\n        let requestStateSpan = $('#request_state_span');\n        let requestStateMsgSpan = $('#fastly_request_state_message_span');\n        let forceTls = true;\n        /* Force TLS button messages */\n        let successTlsBtnMsg = $('#fastly-success-tls-button-msg');\n        let errorTlsBtnMsg = $('#fastly-error-tls-button-msg');\n        let warningTlsBtnMsg = $('#fastly-warning-tls-button-msg');\n\n        let active_version = serviceStatus.active_version;\n\n        requestStateSpan.find('.processing').show();\n\n        /**\n         * Force TLS modal overlay options\n         *\n         * @type {{id: string, title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let tlsOptions = {\n            id: 'fastly-tls-options',\n            title: jQuery.mage.__(' '),\n                content: function () {\n                return document.getElementById('fastly-tls-template').textContent;\n            },\n            actionOk: function () {\n                toggleTls(active_version);\n            }\n        };\n\n        /**\n         * Trigger the TLS setting status call\n         *\n         * @description sets and displays the status of the TLS VCL snippet\n         */\n        getTlsSetting(active_version, false).done(function (response) {\n            requestStateSpan.find('.processing').hide();\n            let tlsStateEnabled = requestStateMsgSpan.find('#force_tls_state_enabled');\n            let tlsStateDisabled = requestStateMsgSpan.find('#force_tls_state_disabled');\n\n            if (response.status === true) {\n                if (tlsStateDisabled.is(\":hidden\")) {\n                    tlsStateEnabled.show();\n                }\n            } else if (response.status === false) {\n                if (tlsStateEnabled.is(\":hidden\")) {\n                    tlsStateDisabled.show();\n                }\n            } else {\n                requestStateMsgSpan.find('#force_tls_state_unknown').show();\n            }\n        }).fail(function () {\n            requestStateSpan.find('.processing').hide();\n            requestStateMsgSpan.find('#force_tls_state_unknown').show();\n        });\n\n        /**\n         * Queries Fastly API to retrieve TLS setting\n         *\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function getTlsSetting(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.checkTlsSettingUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Force TLS button click event\n         *\n         * @description checks the Fastly service status and displays the TLS VCL snippet upload overlay\n         */\n        $('#fastly_force_tls_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorTlsBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getTlsSetting(active_version, true).done(function (response) {\n                    overlay(tlsOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n                    let upload_button = $('.upload-button span');\n\n                    if (response.status === false) {\n                        $('.modal-title').text($.mage.__('You are about to enable Force TLS'));\n                        upload_button.text('Enable');\n                    } else {\n                        $('.modal-title').text($.mage.__('You are about to disable Force TLS'));\n                        upload_button.text('Disable');\n                    }\n                    forceTls = response.status;\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'))\n                });\n\n            }).fail(function () {\n                return errorTlsBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Toggle TLS\n         *\n         * @description uploads/removes the TLS VCL snippet and shows the new status and messages\n         * @param active_version\n         */\n        function toggleTls(active_version)\n        {\n            let activate_tls_flag = false;\n\n            if ($('#fastly_activate_tls').is(':checked')) {\n                activate_tls_flag = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.toggleTlsSettingUrl,\n                data: {\n                    'activate_flag': activate_tls_flag,\n                    'active_version': active_version\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        modal.modal('closeModal');\n                        let disabledOrEnabled = 'disabled';\n                        let statusStr = $.mage.__('disabled');\n\n                        if (forceTls === false) {\n                            disabledOrEnabled = 'enabled';\n                            statusStr = $.mage.__('enabled');\n                        } else {\n                            disabledOrEnabled = 'disabled';\n                        }\n                        successTlsBtnMsg.text($.mage.__('Force TLS is successfully %1.').replace('%1', statusStr)).show();\n                        $('.request_tls_state_span').hide();\n\n                        if (disabledOrEnabled === 'enabled') {\n                            requestStateMsgSpan.find('#force_tls_state_disabled').hide();\n                            requestStateMsgSpan.find('#force_tls_state_enabled').show();\n                        } else {\n                            requestStateMsgSpan.find('#force_tls_state_enabled').hide();\n                            requestStateMsgSpan.find('#force_tls_state_disabled').show();\n                        }\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n    }\n});\n","Fastly_Cdn/js/version-history.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"showSuccessMessage\",\n    \"Magento_Ui/js/modal/confirm\",\n    'uploadVcl',\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, showSuccessMessage, confirm, uploadVcl) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        let active_version = serviceStatus.active_version;\n        let versions_response = [];    //response from config.versionHistory\n        let number_of_pages;    //number that says how many pages are filled with data\n        let versionBtnErrorMsg = $(\"#fastly-error-versions-button-msg\");\n        let versions_per_page = 10;\n        let pagination_switch = false;\n\n        /**\n         * ACL container modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let versionContainerOptions = {\n\n            title: jQuery.mage.__('List of versions'),\n            content: function () {\n                return document.getElementById('fastly-version-history-template').textContent;\n            }\n        };\n\n        let showVCLOptions = {\n            title: jQuery.mage.__('Generated VCL'),\n            content: function () {\n                return document.getElementById('show-VCL-container').textContent;\n            }\n        };\n\n        /**\n         * displays Active version: above list and renders VCL container on click\n         */\n        function displayActiveVersion()\n        {\n            $(\"#pagination-active-version\").empty();\n            let a = document.createElement('a');\n            let span = document.createElement('span');\n            let text = document.createTextNode('Active Version: ');\n            let version = document.createTextNode(active_version);\n            a.setAttribute('data-version-number', active_version);\n            a.append(version);\n            span.append(text);\n            span.append(a);\n            a.on('click', function () {\n                resetAllMessages();\n                let version_number = $(this).data('version-number');\n                overlay(showVCLOptions);\n                $('.upload-button').remove();\n                insertVCLContent(version_number);\n            });\n            $(\"#pagination-active-version\").append(span);\n        }\n\n        /**\n         * method that returns start and end of the array that holds all the service versions\n         * @param perPage\n         * @returns {{start: number, end: *}}\n         */\n        function arraySlice(perPage)\n        {\n            let input = parseInt($(\"#pagination-input\").val());\n            let start = versions_response.number_of_versions - (input * perPage);\n            let end = start + perPage;\n            return {\n                'start': start,\n                'end': end\n            };\n        }\n\n        function insertVCLContent(version)\n        {\n            $.ajax({\n                type: 'GET',\n                url: config.versionReference,\n                showLoader: true,\n                data: {'version': version},\n                success: function (response) {\n                    if (response.status !== true) {\n                        modal.modal('closeModal');\n                        showErrorMessage(response.msg);\n                        return;\n                    }\n\n                    let text = document.createTextNode(response.content);\n                    $(\"#version-vcl-container\").append(text);\n                }\n            });\n        }\n\n        /**\n         * logic that handles paging in pagination nav bar\n         */\n        function paginationLogic()\n        {\n\n            $('body').on('click', 'button.action-next', function () {\n                resetAllMessages();\n                let pagination_input = $(\"#pagination-input\").val();\n                $(\"#pagination-input\").val(++pagination_input);\n                handleInputNumber();\n                let properties = arraySlice(versions_per_page);\n                processVersions(versions_response.versions.slice(properties.start, properties.end));\n            });\n\n            //handle next button\n            $('body').on('click', 'button.action-previous', function () {\n                resetAllMessages();\n                let pagination_input = $(\"#pagination-input\").val();\n                $(\"#pagination-input\").val(--pagination_input);\n                handleInputNumber();\n                let properties = arraySlice(versions_per_page);\n                processVersions(versions_response.versions.slice(properties.start, properties.end));\n\n            });\n\n            //handle pressing enter\n            $('body').on('keypress', function (e) {\n                if (e.which != 13) {\n                    return;\n                }\n                resetAllMessages();\n                handleInputNumber();\n                let properties = arraySlice(versions_per_page);\n                processVersions(versions_response.versions.slice(properties.start, properties.end));\n            });\n\n            function handleInputNumber()\n            {\n                //handle higher/lower then min and max input\n                if ($(\"#pagination-input\").val() > number_of_pages) {\n                    $(\"#pagination-input\").val(number_of_pages)\n                } else if ($(\"#pagination-input\").val() < 1) {\n                    $(\"#pagination-input\").val(1)\n                }\n\n                //handle equal as min and max\n                if (parseInt($(\"#pagination-input\").val()) === 1) {\n                    $(\".action-previous\").attr('disabled', 'disabled');\n                } else if (parseInt($(\"#pagination-input\").val()) === number_of_pages) {\n                    $(\".action-next\").attr('disabled', 'disabled');\n                }\n\n                //handle disabled attributes on prev/next button\n                if ($(\"#pagination-input\").val() > 1 && $(\".action-previous\").attr('disabled') === 'disabled') {\n                    $(\".action-previous\").removeAttr('disabled');\n                } else if ($(\"#pagination-input\").val() < number_of_pages && $(\".action-next\").attr('disabled') === 'disabled') {\n                    $(\".action-next\").removeAttr('disabled');\n                }\n            }\n        }\n\n        /**\n         * Queries Fastly API to retrieve the list of Fastly versions\n         * - set api response into versions_response variable\n         *\n         * @param active_version\n         * @param loaderVisibility\n         */\n        function catchVersions(active_version, loaderVisibility)\n        {\n\n            $.ajax({\n                type: \"GET\",\n                url: config.versionHistory,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version},\n                success: function (response) {\n                    $('.loading-versions').hide();\n                    if (response.status !== false) {\n                        versions_response = response;\n                        number_of_pages = response.number_of_pages;\n                        let properties = arraySlice(versions_per_page);\n                        $(\".admin__control-support-text\").append(document.createTextNode(number_of_pages));\n                        processVersions(response.versions.slice(properties.start, properties.end));\n                        if (!pagination_switch) {\n                            paginationLogic();\n                            pagination_switch = true;\n                        }\n\n                        return;\n                    }\n\n                    showErrorMessage(response.msg);\n                },\n                beforeSend: function () {\n                    $('.loading-versions').show();\n                }\n            });\n        }\n\n        /**\n         * Activate specific version\n         *\n         * @param active_version_param\n         * @param version\n         * @param loaderVisibility\n         */\n        function activateServiceVersion(active_version_param, version, loaderVisibility)\n        {\n            resetAllMessages();\n            $.ajax({\n                type: 'GET',\n                url: config.activateVersion,\n                showLoader: loaderVisibility,\n                data: {'version': version, 'active_version': active_version_param},\n                success: function (response) {\n                    if (!response.status) {\n                        showErrorMessage(response.msg);\n                        return;\n                    }\n                    let text = document.createTextNode('Activated');\n                    let span = document.createElement('span');\n                    let button = document.createElement('button');\n                    button.setAttribute('class', 'fastly-activate-vcl-action activate-action');\n                    button.setAttribute('id', 'action_version_' + response.old_version);\n                    button.setAttribute('title', 'Activate');\n                    button.setAttribute('data-version-number', response.old_version);\n                    button.setAttribute('style', 'margin-right: 2rem;');\n                    span.setAttribute('id', 'action_version_' + response.version);\n                    span.setAttribute('data-version-number', response.version);\n                    span.setAttribute('style', 'margin-right: 2rem;');\n                    span.appendChild(text);\n                    $(\"#action_activate_version_\" + response.old_version).empty();\n                    $(\"#action_activate_version_\" + response.old_version).append(button);\n                    $(\"#action_activate_version_\" + response.version).empty();\n                    $(\"#action_activate_version_\" + response.version).append(span);\n                    active_version = version;\n                    serviceStatus.active_version = active_version;\n                    uploadVcl(config, serviceStatus, isAlreadyConfigured);\n                    displayActiveVersion();\n                    showSuccessMessage('Successfully activated version ' + response.version);\n                }\n            });\n        }\n\n        /**\n         * Process and display the list of versions\n         *\n         * @param versions, list of versions that will be displayed\n         */\n        function processVersions(versions)\n        {\n            $(\".item-container\").empty();\n\n            $.each(versions, function (index, version) {\n                let tr = document.createElement('tr');\n                let versionCell = document.createElement('td');\n                let commentCell = document.createElement('td');\n                let updatedCell = document.createElement('td');\n                let actionCell = document.createElement('td');\n                let span = document.createElement('span');\n\n                let showVCLButton = document.createElement('button');\n                showVCLButton.setAttribute('class', 'fastly-view-vcl-action show-vcl-action');\n                showVCLButton.setAttribute('id', 'action_show_VCL_' + version.number);\n                showVCLButton.setAttribute('title', 'Show VCL');\n                showVCLButton.setAttribute('data-version-number', version.number);\n                span.setAttribute('id', 'action_activate_version_' + version.number);\n\n                let button = '';\n                let versionText = document.createTextNode(version.number);\n                let commentText = document.createTextNode(version.comment);\n                let updatedText = document.createTextNode(version.updated_at);\n                actionCell.setAttribute('id', 'action_cell_' + version.number);\n                if (active_version !== version.number) {\n                    button = document.createElement('button');\n                    button.setAttribute('class', 'fastly-activate-vcl-action activate-action');\n                    button.setAttribute('id', 'action_version_' + version.number);\n                    button.setAttribute('title', 'Activate');\n                    button.setAttribute('data-version-number', version.number);\n                    button.setAttribute('style', 'margin-right: 2rem;');\n                } else {\n                    let text = document.createTextNode('Activated');\n                    button = document.createElement('span');\n                    button.setAttribute('id', 'action_version_' + version.number);\n                    button.setAttribute('data-version-number', version.number);\n                    button.setAttribute('style', 'margin-right: 2rem;');\n                    button.appendChild(text);\n                }\n                span.appendChild(button);\n                versionCell.appendChild(versionText);\n                commentCell.appendChild(commentText);\n                updatedCell.appendChild(updatedText);\n                actionCell.appendChild(span);\n                actionCell.appendChild(showVCLButton);\n                tr.setAttribute('id', 'fastly_version_' + version.number);\n                tr.append(versionCell);\n                tr.append(commentCell);\n                tr.append(updatedCell);\n                tr.append(actionCell);\n\n                $('.item-container').prepend(tr);\n            });\n        }\n\n        /**\n         * Version container list on click event\n         */\n        $('#list-versions-container-button').on('click', function () {\n\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status !== true) {\n                    return versionBtnErrorMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                overlay(versionContainerOptions);\n\n                $('.upload-button').remove();\n                $(\"#pagination-input\").val(1);\n                $(\".action-previous\").attr('disabled', 'disabled');\n                displayActiveVersion();\n\n                setServiceLabel(active_version, next_version, service_name);\n                catchVersions(active_version, true);\n\n            }).fail(function () {\n                return versionBtnErrorMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Activate version\n         */\n        $('body').on('click', 'button.activate-action', function () {\n            resetAllMessages();\n            let version_number = $(this).data('version-number');\n            confirm({\n                title: 'Activate Version',\n                content: 'Are you sure you want to activate the version #<b>' + version_number + '</b> ?',\n                actions: {\n                    confirm: function () {\n                        activateServiceVersion(active_version, version_number, true);\n                    },\n                    cancel: function () {\n                    }\n                }\n            });\n        });\n\n        /**\n         * Show versions's VCL\n         */\n        $('body').on('click', 'button.show-vcl-action', function () {\n            resetAllMessages();\n            let version_number = $(this).data('version-number');\n            overlay(showVCLOptions);\n            $('.upload-button').remove();\n            insertVCLContent(version_number);\n        });\n    }\n});\n","Fastly_Cdn/js/domains.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"Magento_Ui/js/modal/confirm\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, confirm) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        let domains;\n        let current_domains;\n        let active_version = serviceStatus.active_version;\n        let errorDomainsBtnMsg = $('#fastly-error-domains-button-msg');\n        let successDomainsBtnMsg = $('#fastly-success-domains-button-msg');\n\n        let domainsListOptions = {\n            title: jQuery.mage.__('Domains'),\n            content: function () {\n                return document.getElementById('fastly-domains-list-template').textContent;\n            },\n            actionOk: function () {\n                pushDomains(active_version);\n            }\n        };\n\n        /**\n         * Trigger the Domains list call\n         */\n        getDomains(active_version, false).done(function (response) {\n            $('.loading-domains').hide();\n            if (response !== false) {\n                if (response.domains.length > 0) {\n                    domains = response.domains;\n                    processDomains(response.domains);\n                } else {\n                    $('.no-domains').show();\n                }\n            }\n        });\n\n        /**\n         * Get the list of Domains\n         *\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function getDomains(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getDomainsUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Process and display the list of Domains\n         *\n         * @param domains\n         */\n        function processDomains(domains)\n        {\n            $('#fastly-domains-list').html('');\n            $.each(domains, function (index, domain) {\n                let html = \"<tr id='fastly_\" + index + \"'>\";\n                html += \"<td><span><b>\"+domain.name+\"</b></span><p class='note'>\"+domain.comment+\"</p></td></tr>\";\n                $('#fastly-domains-list').append(html);\n            });\n        }\n\n        /**\n         * Process and display the list of domains in the manage Domains modal\n         *\n         * @param domains\n         * @param store\n         */\n        function processDomainsList(domains, store)\n        {\n            let html = '';\n            $.each(domains, function (index, domain) {\n                html += '<tr><td>' +\n                    '<input name=\"domain[]\" value=\"'+ domain.name +'\" class=\"input-text admin__control-text domain-name-field\" type=\"text\" disabled></td>' +\n                    '<td><input name=\"comment[]\" value=\"'+ domain.comment +'\" class=\"input-text admin__control-text comment-field\" type=\"text\" disabled></td>' +\n                    '<td class=\"col-actions\">';\n\n                if (store.indexOf(domain.name) < 0) {\n                    html += '<button class=\"action-delete remove_domain\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>';\n                }\n                html += '</td></tr>';\n            });\n            overlay(domainsListOptions);\n            $('.upload-button span').text('Activate');\n            if (html !== '') {\n                $('#domains-list-table > tbody').html(html);\n            }\n        }\n\n        function pushDomains(active_version)\n        {\n            let domains = [];\n            $('input[name=\"domain[]\"').each(function () {\n                let new_domain = $(this).val();\n                let new_comment = $(this).closest('tr').find(\"input[name='comment[]']\").val();\n                domains.push({\n                    name: new_domain,\n                    comment: new_comment\n                });\n            });\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.pushDomainsUrl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'domains': domains,\n                    'current_domains': current_domains\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successDomainsBtnMsg.text($.mage.__('Domains successfully updated.')).show();\n                        active_version = response.active_version;\n                        getDomains(active_version, false).done(function (response) {\n                            $('.loading-domains').hide();\n                            if (response !== false) {\n                                if (response.domains.length > 0) {\n                                    domains = response.domains;\n                                    processDomains(response.domains);\n                                } else {\n                                    $('.no-domains').show();\n                                }\n                            }\n                        });\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorDomainsBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Manage domains button on click event\n         */\n        $('#manage-domains-button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true,\n                success: function (service) {\n                    if (service.status === false) {\n                        return errorDomainsBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                    }\n\n                    active_version = service.active_version;\n                    let next_version = service.next_version;\n                    let service_name = service.service.name;\n\n                    getDomains(active_version, true).done(function (response) {\n                        if (response.status === true) {\n                            processDomainsList(response.domains, response.store);\n                            current_domains = response.domains;\n                        } else {\n                            processDomainsList([]);\n                        }\n                        setServiceLabel(active_version, next_version, service_name);\n                    }).fail(function () {\n                        return errorDomainsBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                    });\n                },\n                fail: function () {\n                    return errorDomainsBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        });\n\n        $('body').on('click', '#add-domain', function () {\n            $('#domains-list-table > tbody').append('<tr><td>' +\n                '<input name=\"domain[]\" value=\"\" class=\"input-text admin__control-text domain-name-field\" type=\"text\"></td>' +\n                '<td><input name=\"comment[]\" value=\"\" class=\"input-text admin__control-text comment-field\" type=\"text\"></td>' +\n                '<td class=\"col-actions\">' +\n                '<button class=\"action-delete remove_domain\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>' +\n                '</td></tr>');\n        });\n\n        $('body').on('click', '.remove_domain', function () {\n            let closestTr = $(this).closest('tr');\n            let domainName = closestTr.find('.domain-name-field').val();\n            if (!domainName) {\n                closestTr.remove();\n            } else {\n                confirm({\n                    title: 'Remove Domain',\n                    content: 'Are you sure you want to remove the <b>'+domainName+'</b> domain?',\n                    actions: {\n                        confirm: function () {\n                            closestTr.remove();\n                        },\n                        cancel: function () {}\n                    }\n                });\n            }\n        });\n    }\n});\n","Fastly_Cdn/js/warning-message.js":"define([\n    \"jquery\"\n], function ($) {\n    return function showSuccessMessage(msg)\n    {\n        /**\n         * Show warning message\n         *\n         * @type {*|jQuery|HTMLElement}\n         */\n        let msgSuccess = $('.fastly-message-warning');\n        msgSuccess.html($.mage.__(msg));\n        msgSuccess.show();\n        msgSuccess.focus();\n    }\n});","Fastly_Cdn/js/import.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate',\n    'importExportRenderer'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, translate, importExportRenderer) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n        let successButtonMsg = $(\"#fastly-success-import-button-msg\");\n        let errorButtonMsg = $(\"#fastly-error-import-button-msg\");\n        let warningButtonMsg = $(\"#fastly-warning-import-button-msg\");\n\n        let active_version = serviceStatus.active_version;\n\n        let importOptions = {\n            id: 'fastly-import-options',\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('fastly-import-template').textContent;\n            },\n            actionOk: function () {\n                fastlyImport(active_version);\n            }\n        };\n\n        $('#fastly_import').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorButtonMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n\n                getImportData(active_version, true).done(function (response) {\n                    overlay(importOptions);\n                    $('.modal-title').text($.mage.__('Import Edge ACLs, Edge Dictionaries, Active Edge Modules and Custom Snippets'));\n                    $('.upload-button span').text('Import');\n                    let html = '';\n\n                    let acls = [];\n                    let aclDetails = []\n                    for (const name in response.acls) {\n                        if (response.acls.hasOwnProperty(name)) {\n                            acls.push({id: name, name: name});\n                            aclDetails.push({\n                                id: name,\n                                data: response.acls[name].items.map((item) => {\n                                    return importExportRenderer.stringifyAclDetail(null, item);\n                                })\n                            })\n                        }\n                    }\n\n                    html += importExportRenderer.renderEdgeAcls(acls, false);\n                    for (const detail of aclDetails) {\n                        html += importExportRenderer.renderDetails(detail.id, detail.data)\n                    }\n\n                    let dictionaries = [];\n                    let dictionaryDetails = []\n                    for (const name in response.dictionaries) {\n                        if (response.dictionaries.hasOwnProperty(name)) {\n                            dictionaries.push({id: name, name: name});\n                            dictionaryDetails.push({\n                                id: name,\n                                data: response.dictionaries[name].items.map((item) => {\n                                    return importExportRenderer.stringifyDictionaryDetail(null, item);\n                                })\n                            })\n                        }\n                    }\n\n                    html += importExportRenderer.renderEdgeDisctionaries(dictionaries, false);\n                    for (const detail of dictionaryDetails) {\n                        html += importExportRenderer.renderDetails(detail.id, detail.data)\n                    }\n\n                    html += importExportRenderer.renderCustomSnippets(response.custom_snippets);\n\n                    let edgeModules = [];\n                    for (const name in response.active_modules) {\n                        if (response.active_modules.hasOwnProperty(name)) {\n                            let values = response.active_modules[name].manifest_values;\n                            edgeModules.push({\n                                manifest_id: name,\n                                manifest_name: response.active_modules[name].manifest_content.name,\n                                manifest_description: response.active_modules[name].manifest_content.description,\n                                values: (Array.isArray(values)) ? values.pop() : {},\n                            });\n                        }\n                    }\n                    html += importExportRenderer.renderActiveEdgeModules(edgeModules);\n\n                    $('.question').html(html);\n                });\n            });\n        });\n\n        function getImportData(active_version, loaderVisibility)\n        {\n            let fileInput = document.getElementById('system_full_page_cache_fastly_fastly_tools_import_file');\n            let file = fileInput.files[0];\n            let formData = new FormData();\n            formData.append('file', file);\n            formData.append('form_key', window.FORM_KEY)\n            return $.ajax({\n                type: \"POST\",\n                url: config.getImportDataUrl,\n                showLoader: loaderVisibility,\n                data: formData,\n                processData: false,\n                contentType: false\n            });\n        }\n\n        function fastlyImport()\n        {\n            let formData = new FormData(document.getElementById('fastly-import-form'));\n            let fileInput = document.getElementById('system_full_page_cache_fastly_fastly_tools_import_file');\n            let file = fileInput.files[0];\n            formData.append('file', file);\n            formData.append('form_key', window.FORM_KEY);\n            formData.append('active_version', active_version);\n\n            return $.ajax({\n                type: \"POST\",\n                url: config.importDataUrl,\n                showLoader: true,\n                data: formData,\n                processData: false,\n                contentType: false\n            }).done(function (response) {\n                if (response.status) {\n                    modal.modal('closeModal');\n                    return successButtonMsg.text($.mage.__('Successfully imported.')).show();\n                } else {\n                    resetAllMessages();\n                    showErrorMessage(response.msg);\n                }\n            });\n        }\n    }\n});","Fastly_Cdn/js/waf.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n        /* Web Application Firewall state elements */\n        let wafStateSpan = $('#waf_state_span');\n        let wafStateMsgSpan = $('#fastly_waf_state_message_span');\n        let wafStateEnabled = wafStateMsgSpan.find('#waf_state_enabled');\n        let wafStateDisabled = wafStateMsgSpan.find('#waf_state_disabled');\n        let wafStateBlocking = wafStateMsgSpan.find('#waf_state_blocking');\n        let wafStateLogging = wafStateMsgSpan.find('#waf_state_logging');\n\n        /* Web Application Firewall button messages */\n        let successWafBtnMsg = $('#fastly-success-waf-button-msg');\n        let errorWafBtnMsg = $('#fastly-error-waf-button-msg');\n        let warningWafBtnMsg = $('#fastly-warning-waf-button-msg');\n\n        /* OWASP rows */\n        let owaspRestrictedExtensionsRow = $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_owasp_restricted_extensions');\n        let owaspAllowedMethodsRow = $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_owasp_allowed_methods');\n\n        /* OWASP fields */\n        let owaspRestrictedExtensionsField = $('#system_full_page_cache_fastly_fastly_web_application_firewall_owasp_restricted_extensions');\n        let owaspAllowedMethodsField = $('#system_full_page_cache_fastly_fastly_web_application_firewall_owasp_allowed_methods');\n\n        owaspRestrictedExtensionsField.prop('disabled', true);\n        owaspAllowedMethodsField.prop('disabled', true);\n\n        /**\n         * Trigger the WAF status call\n         */\n        getServiceInfo().done(function (response) {\n            if (response.status !== false) {\n                let service_info = response.service_info;\n                let active_version_info = service_info.active_version;\n                let wafs = active_version_info.wafs;\n                if (wafs !== undefined) {\n                    warningWafBtnMsg.hide();\n                    $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_waf_bypass').show();\n                    $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_update_waf_bypass').show();\n                    $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_waf_allow_by_acl').show();\n                    requirejs(['wafBypass'], function (wafBypass) {\n                        wafBypass(config, serviceStatus, isAlreadyConfigured);\n                    });\n                    $.each(wafs, function (waf, info) {\n                        getWafSettings(info.id).done(function (wafResponse) {\n                            wafStateSpan.find('.processing').hide();\n                            let wafSettings = wafResponse.waf_settings;\n                            let wafData = wafSettings.data;\n                            let wafAttributes = wafData.attributes;\n                            if (wafAttributes.disabled) {\n                                wafStateDisabled.show();\n                            } else {\n                                if (wafAttributes.rule_statuses_block_count > 0) {\n                                    wafStateBlocking.show();\n                                } else if (wafAttributes.rule_statuses_log_count > 0) {\n                                    wafStateLogging.show();\n                                } else {\n                                    wafStateEnabled.show();\n                                }\n                            }\n                        });\n                        getOwaspSettings(info.id).done(function (owaspResponse) {\n                            if (owaspResponse.status !== false) {\n                                let owaspSettings = owaspResponse.owasp_settings;\n                                let owaspSettingsData = owaspSettings.data;\n                                let owaspDataAttributes = owaspSettingsData.attributes;\n                                let owaspAllowedMethods = owaspDataAttributes.allowed_methods;\n                                let owaspRestricedExtensions = owaspDataAttributes.restricted_extensions;\n\n                                owaspAllowedMethodsRow.show();\n                                owaspAllowedMethodsField.val(owaspAllowedMethods);\n                                owaspRestrictedExtensionsRow.show();\n                                owaspRestrictedExtensionsField.val(owaspRestricedExtensions);\n                            }\n\n                        });\n                    });\n                } else {\n                    wafStateSpan.find('.processing').hide();\n                    wafStateDisabled.show();\n                    warningWafBtnMsg.text(\n                        $.mage.__(\n                            'Please contact your sales rep or send an email to support@fastly.com to request Web Application Firewall activation for your Fastly service.'\n                        )\n                    ).show();\n                    owaspAllowedMethodsRow.show();\n                    owaspRestrictedExtensionsRow.show();\n                }\n            }\n        });\n\n        /**\n         * Retrieve advanced information about the Fastly service\n         *\n         * @returns {*}\n         */\n        function getServiceInfo()\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getFastlyServiceInfoUrl\n            });\n        }\n\n        /**\n         * Retrieve WAF settings\n         *\n         * @param id\n         * @returns {*}\n         */\n        function getWafSettings(id)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.getWafSettingsUrl,\n                data: {\n                    'id': id\n                }\n            });\n        }\n\n        /**\n         * Retrieve OWASP settings\n         *\n         * @param id\n         * @returns {*}\n         */\n        function getOwaspSettings(id)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.getOwaspSettingsUrl,\n                data: {\n                    'id': id\n                }\n            })\n        }\n    }\n});\n","Fastly_Cdn/js/import-export-renderer.js":"define(\n    [\n        'jquery'\n    ],\n    function ($) {\n        'use strict';\n        return {\n            renderEdgeAcls: function (data, withButton = true) {\n                let button = (withButton) ? `<button class=\"action-delete export-list-icon acl-items-btn\" title=\"Show Items\" type=\"button\">` : '';\n                let html = this._renderTitle('Edge ACLs');\n                $.each(data, function (index, acl) {\n                    html += `<div class=\"admin__field field\">\n                        <div class=\"admin__field-control export-field\">\n                            <div class=\"admin__field-option admin__control-table\">\n                                <input class=\"admin__control-checkbox export-checkbox export-acl\" type=\"checkbox\" name=\"edge_acls[${acl.name}]\" id=\"${acl.id}\" checked/>\n                                <label class=\"admin__field-label\" for=\"${acl.id}\">${acl.name}</label>\n                                ${button}\n                            </div>\n                        </div>\n                    </div>`;\n                });\n                html += this._renderEmptyLabel(data, 'There are no Edge ACLs');\n                return html;\n            },\n\n            renderEdgeDisctionaries: function (data, withButton = true) {\n                let button = (withButton) ? `<button class=\"action-delete export-list-icon dictionary-items-btn\" title=\"Show Items\" type=\"button\">` : '';\n                let html = this._renderTitle('Edge Dictionaries');\n                $.each(data, function (index, dictionary) {\n                    let checked = (dictionary.name.split('_', 1)[0] === 'magentomodule') ? '' : 'checked';\n                    html += `<div class=\"admin__field field\">\n                        <div class=\"admin__field-control export-field\">\n                            <div class=\"admin__field-option admin__control-table\">\n                                <input class=\"admin__control-checkbox export-checkbox export-dictionary\" type=\"checkbox\" name=\"edge_dictionaries[${dictionary.name}]\" id=\"${dictionary.id}\" ${checked}/>\n                                <label class=\"admin__field-label\" for=\"${dictionary.id}\">${dictionary.name}</label>\n                                ${button}\n                            </div>\n                        </div>\n                    </div>`;\n                });\n                html += this._renderEmptyLabel(data, 'There are no Edge Dictionaries');\n                return html;\n            },\n\n            renderCustomSnippets: function (data) {\n                let html = this._renderTitle('Custom Snippets');\n                $.each(data, function (index, content) {\n                    html += `<div class=\"admin__field field\">\n                        <div class=\"admin__field-control export-field\">\n                            <div class=\"admin__field-option admin__control-table\">\n                                <input class=\"admin__control-checkbox export-checkbox export-custom-snippet\" type=\"checkbox\" id=\"${index}\" name=\"custom_snippets[${index}]\" checked/>\n                                <label class=\"admin__field-label\" for=\"${index}\">${index}</label>\n                                <div class=\"admin__field field\">\n                                    <div class=\"admin__field-note export-note\">${content}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>`;\n                });\n                html += this._renderEmptyLabel(data, 'There are no Custom Snippets');\n                return html;\n            },\n\n            renderActiveEdgeModules: function (data) {\n                let html = this._renderTitle('Active Edge Modules');\n                $.each(data, function (index, edgeModule) {\n                    html += `<div class=\"admin__field field\">\n                        <div class=\"admin__field-control export-field\">\n                            <div class=\"admin__field-option admin__control-table\">\n                                <input class=\"admin__control-checkbox export-checkbox export-active-modules\" type=\"checkbox\" name=\"active_modules[${edgeModule.manifest_id}]\" id=\"${edgeModule.manifest_id}\" checked/>\n                                <label class=\"admin__field-label\" for=\"${edgeModule.manifest_id}\">${edgeModule.manifest_name}</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"admin__field field\">\n                        <div class=\"admin__field-note export-note\" id=\"${index}\">${edgeModule.manifest_description}</div>\n                    </div>`;\n                    for (const key in edgeModule.values) {\n                        if (edgeModule.values.hasOwnProperty(key)) {\n                            html += `<div class=\"admin__field field\">\n                                <div class=\"admin__field-note export-note\"><strong>${key}: </strong>${edgeModule.values[key]}</div>\n                            </div>`;\n                        }\n                    }\n                });\n                html += this._renderEmptyLabel(data, 'There are no Active Modules');\n                return html;\n            },\n\n            renderAdminPathTimeout: function (data) {\n                let html = this._renderTitle('Admin Path Timeout');\n                html += `<div class=\"admin__field field\">\n                    <div class=\"admin__field-note export-note\">${data}s</div>\n                </div>`;\n                return html;\n            },\n\n            renderDetails: function (id, data) {\n                let html = `<div class=\"admin__field field export-dictionary-items ${id}\">`;\n                $.each(data, function (index, text) {\n                    html += `<div class=\"admin__field field\">\n                        <div class=\"admin__field-note export-note\">${text}</div>\n                    </div>`;\n                });\n                if (data === undefined || data.length === 0) {\n                    html += `<div class=\"admin__field field\">\n                        <div class=\"admin__field-note export-note\">no items</div>\n                    </div>`;\n                }\n                html += `</div>`;\n                return html;\n            },\n\n            _renderTitle: function (title) {\n                return this._renderLabel(`<b>${title}</b>`);\n            },\n            _renderEmptyLabel: function (data, text) {\n                if (data === undefined || data.length === 0) {\n                    return this._renderLabel(text);\n                }\n                return '';\n            },\n            _renderLabel: function (label) {\n                return `<div class=\"admin__field field\">\n                    <div class=\"admin__field-control export-field\">\n                        <div class=\"admin__field-option admin__control-table\">\n                            <label class=\"admin__field-label\">${label}</label>\n                        </div>\n                    </div>\n                </div>`;\n            },\n\n            stringifyDictionaryDetail: function (index, item) {\n                return `${item.item_key} (${item.item_value})`\n            },\n\n            stringifyAclDetail: function (index, item) {\n                let ip = (item.negated === '1') ? '!' : '';\n                ip += item.ip\n                ip += (item.subnet) ? `/${item.subnet}` : '';\n                let comment = (item.comment !== '') ? ` (${item.comment})` : '';\n                let created_at = new Date(item.created_at);\n                return `${ip}${comment} ${created_at.toUTCString()}`;\n            }\n        };\n    }\n);\n","Fastly_Cdn/js/edge-acl.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"showSuccessMessage\",\n    \"Magento_Ui/js/modal/confirm\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, showSuccessMessage, confirm) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* ACL button messages */\n        let successAclBtnMsg = $('#fastly-success-acl-button-msg');\n        let errorAclBtnMsg = $('#fastly-error-acl-button-msg');\n        let warningAclBtnMsg = $('#fastly-warning-acl-button-msg');\n\n        /* ACL negated checkbox title */\n        let acl_negated_title = \"Negates another ACL entry.\\n\\n\" +\n            \"Example: If you have a purge_allow_acl that has \"+\n            \"192.168.1.0/24 but you add negated IP : 192.168.1.4, \"+\n            \"it means every IP in 192.168.1.0/24 range has access except for 192.168.1.4.\";\n\n        let itemsHtml;\n        let aclItems;\n        let acl_id;\n        let acls;\n\n        let active_version = serviceStatus.active_version;\n\n        /**\n         * ACL container modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let aclContainerOptions = {\n            title: jQuery.mage.__('Create ACL container'),\n            content: function () {\n                return document.getElementById('fastly-acl-container-template').textContent;\n            },\n            actionOk: function () {\n                createAcl(active_version);\n            }\n        };\n\n        /**\n         * ACL container item modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let aclItemOptions = {\n            title: jQuery.mage.__('ACL items'),\n            content: function () {\n                return document.getElementById('fastly-acl-items-template').textContent;\n            },\n            actionOk: function () {\n            }\n        };\n\n        /**\n         * ACL container delete modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let aclDeleteContainerOptions = {\n            title: jQuery.mage.__('Delete ACL containers'),\n            content: function () {\n                return document.getElementById('fastly-delete-acl-container-template').textContent;\n            },\n            actionOk: function () {\n                deleteAcl(active_version);\n            }\n        };\n\n        /**\n         * Trigger ACL container list\n         */\n        listAcls(active_version, false).done(function (response) {\n            $('.loading-acls').hide();\n            if (response.status !== false) {\n                if (response.status !== false) {\n                    if (response.acls.length > 0) {\n                        acls = response.acls;\n                        processAcls(response.acls);\n                    } else {\n                        $('.no-acls').show();\n                    }\n                }\n            }\n        }).fail(function () {\n            return errorAclBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n        });\n\n        /**\n         * Create ACL container\n         */\n        function createAcl()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createAcl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'acl_name': $('#acl_name').val()\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successAclBtnMsg.text($.mage.__('ACL is successfully created.')).show();\n                        active_version = response.active_version;\n                        // Fetch acls\n                        listAcls(active_version, false).done(function (list) {\n                            $('.loading-acls').hide();\n                            if (list.status !== false) {\n                                if (list.status !== false) {\n                                    if (list.acls.length > 0) {\n                                        acls = list.acls;\n                                        processAcls(list.acls);\n                                        $('.no-acls').hide();\n                                    } else {\n                                        $('.no-acls').show();\n                                    }\n                                }\n                            }\n                        }).fail(function () {\n                            return errorAclBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                        });\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorAclBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Process and display the list of ACL containers\n         *\n         * @param acls\n         */\n        function processAcls(acls)\n        {\n            let html = '';\n            $.each(acls, function (index, acl) {\n                html += \"<tr id='fastly_acl_\" + index + \"'>\";\n                html += \"<td><input data-aclId='\"+ acl.id + \"' id='acl_\" + index + \"' value='\"+ acl.name +\"' disabled='disabled' class='input-text' type='text'></td>\";\n                html += \"<td class='col-actions'>\" +\n                    \"<button class='action-delete fastly-edit-acl-icon' data-acl-id='\" + acl.id + \"' data-acl-name='\" + acl.name + \"'id='fastly-edit-acl_\"+ index + \"' title='Edit ACL' type='button'>\" +\n                    \"<button class='action-delete fastly-delete-acl-icon' data-acl-id='\" + acl.name + \"' id='fastly-delete-acl_\"+ index + \"' title='Delete ACL' type='button'>\" +\n                    \"</td></tr>\";\n            });\n            if (html !== '') {\n                $('.no-acls').hide();\n            }\n            $('#fastly-acls-list').html(html);\n        }\n\n        /**\n         * Queries Fastly API to retrieve the list of ACL containers\n         *\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function listAcls(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getAcls,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version},\n                beforeSend: function () {\n                    $('.loading-acls').show();\n                }\n            });\n        }\n\n        /**\n         * Save ACL container item\n         *\n         * @param acl_id\n         * @param item_value\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function saveEdgeAclItem(acl_id, item_value, comment_value, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.createAclItem,\n                showLoader: loaderVisibility,\n                data: {'acl_id': acl_id, 'item_value': item_value, 'comment_value': comment_value},\n                beforeSend: function () {\n                    resetAllMessages();\n                }\n            });\n        }\n\n        /**\n         * Delete ACL container\n         */\n        function deleteAcl()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n\n            let del_acl = $(\"input[name='acl']\").val();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.deleteAcl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'acl': del_acl\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successAclBtnMsg.text($.mage.__('ACL successfully deleted.')).show();\n                        active_version = response.active_version;\n                        // Fetch ACLs\n                        listAcls(active_version, false).done(function (aclResp) {\n                            $('.loading-acls').hide();\n                            if (aclResp.status !== false) {\n                                if (aclResp.acls.length > 0) {\n                                    acls = aclResp.acls;\n                                    processAcls(aclResp.acls);\n                                } else {\n                                    $('#fastly-acls-list').html('');\n                                    $('.no-acls').show();\n                                }\n                            }\n                        }).fail(function () {\n                            return errorAclBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                        });\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorAclBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Delete ACL container item\n         *\n         * @param acl_id\n         * @param acl_item_id\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function deleteEdgeAclItem(acl_id, acl_item_id, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.deleteAclItem,\n                showLoader: loaderVisibility,\n                data: {'acl_id': acl_id, 'acl_item_id': acl_item_id},\n                beforeSend: function () {\n                    resetAllMessages();\n                }\n            });\n        }\n\n        function updateEdgeAclItem(acl_id, acl_item_id, item_value, comment_value, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.updateAclItem,\n                showLoader: loaderVisibility,\n                data: {'acl_id': acl_id, 'acl_item_id': acl_item_id, 'item_value': item_value, 'comment_value': comment_value},\n                beforeSend: function () {\n                    resetAllMessages();\n                }\n            });\n        }\n\n        /**\n         * ACL container add button on click event\n         */\n        $('#add-acl-container-button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorAclBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                overlay(aclContainerOptions);\n                setServiceLabel(active_version, next_version, service_name);\n                $('.upload-button span').text('Create');\n\n            }).fail(function () {\n                return errorAclBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * ACL container edit button on click event\n         */\n        $('body').on('click', 'button.fastly-edit-acl-icon', function () {\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (checkService) {\n                active_version = checkService.active_version;\n                let next_version = checkService.next_version;\n                let service_name = checkService.service.name;\n                setServiceLabel(active_version, next_version, service_name);\n            });\n\n            acl_id = $(this).data('acl-id');\n            let acl_name = $(this).data('acl-name');\n\n            // Handle ACLs\n            if (acls != null && acl_id != null) {\n                $.ajax({\n                    type: \"POST\",\n                    url: config.getAclItems,\n                    showLoader: true,\n                    data: {'acl_id': acl_id}\n                }).done(function (response) {\n                    if (response.status !== false) {\n                        aclItems = response.aclItems;\n                        itemsHtml = '';\n                        if (response.aclItems.length > 0) {\n                            $.each(response.aclItems, function (index, item) {\n                                let ip_output;\n                                if (item.subnet) {\n                                    ip_output = item.ip + '/' + item.subnet;\n                                } else {\n                                    ip_output = item.ip;\n                                }\n                                if (item.negated === '1') {\n                                    ip_output = '!' + ip_output;\n                                }\n                                let created_at = new Date(item.created_at);\n                                itemsHtml += '<tr><td>' +\n                                    '<input name=\"value\" data-type=\"acl\" data-id=\"'+ item.id +'\" value=\"'+ ip_output +'\" class=\"input-text admin__control-text acl-items-field\" type=\"text\" disabled></td>' +\n                                    '<td><input name=\"comment\" data-type=\"acl\" value=\"'+ item.comment +'\" class=\"input-text admin__control-text acl-comment\" type=\"text\" disabled></td>' +\n                                    '<td><div class=\"admin__control-text dialog-item acl-date\">' + created_at.toUTCString() + '</div></td>' +\n                                    '<td class=\"col-actions\">' +\n                                    '<button class=\"action-delete fastly-edit-action edit_acl_item\"  title=\"Edit\" type=\"button\"><span>Edit</span></button>' +\n                                    '<button class=\"action-delete remove_acl_item\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>' +\n                                    '</td></tr>';\n                            });\n                        } else {\n                            itemsHtml += '<tr><td>' +\n                                '<input name=\"value\" data-type=\"acl\" data-id=\"\" value=\"\" class=\"input-text admin__control-text acl-items-field\" type=\"text\"></td>' +\n                                '<td><input name=\"comment\" data-type=\"acl\" value=\"\" class=\"input-text admin__control-text acl-comment\" type=\"text\"></div></td>' +\n                                '<td><div class=\"admin__control-text dialog-item acl-date\"></div></td>' +\n                                '<td class=\"col-actions\">' +\n                                '<button class=\"action-delete fastly-save-action save_acl_item\" title=\"Save\" type=\"button\"><span>Save</span></button>' +\n                                '</td></tr>';\n                        }\n                    }\n\n                    overlay(aclItemOptions);\n                    $('.modal-title').text($.mage.__('\"%1\" ACL container items').replace('%1', acl_name));\n                    $('.upload-button').remove();\n\n                    $('#acl-items-table > tbody').html(itemsHtml);\n                });\n            }\n        });\n\n        /**\n         * ACL container add item button on click event\n         */\n        $('body').on('click', '#add-acl-item', function (e) {\n            $('#acl-items-table > tbody').append('<tr>' +\n                '<td><input name=\"value\" data-type=\"acl\" data-id=\"\" required=\"required\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                '<td><input name=\"comment\" data-type=\"acl\" value=\"\" class=\"input-text admin__control-text acl-comment\" type=\"text\"></div></td>' +\n                '<td><div class=\"admin__control-text dialog-item acl-date\"></div></td>' +\n                '<td class=\"col-actions\">' +\n                '<button class=\"action-delete fastly-save-action save_acl_item\" title=\"Save\" type=\"button\"><span>Save</span></button>' +\n                '</td></tr>');\n        });\n\n        /**\n         * ACL container save item button on click event\n         */\n        $('body').on('click', '.save_acl_item', function () {\n            let valueField = $(this).closest('tr').find(\"input[name='value']\");\n            let commentField = $(this).closest('tr').find(\"input[name='comment']\");\n            let item_value = valueField.val();\n            let comment_value = commentField.val();\n            let errors = false;\n\n            if (item_value === '') {\n                errors = true;\n                valueField.css('border-color', '#e22626');\n            } else {\n                valueField.css('border-color', '#878787');\n            }\n\n            if (errors) {\n                resetAllMessages();\n                return showErrorMessage($.mage.__('Please enter all required fields.'));\n            }\n\n            let self = this;\n\n            saveEdgeAclItem(acl_id, item_value, comment_value, true).done(function (response) {\n                if (response.status === true) {\n                    let created_at = new Date(response.created_at);\n                    $(self).closest('tr').find(\"input[name='value']\").prop('disabled', true);\n                    $(self).closest('tr').find(\"input[name='comment']\").prop('disabled', true);\n                    $(self).closest('tr').find(\".acl-comment\").val(response.comment);\n                    $(self).closest('tr').find(\".acl-date\").html(created_at.toUTCString());\n                    let newElement = $(self).closest('tr').find(\"input[name='value']\")[0];\n                    newElement.setAttribute('data-id', response.id);\n                    $(self).closest('tr').find(\".col-actions\").html(\n                        '<button class=\"action-delete fastly-edit-action edit_acl_item\"  title=\"Edit\" type=\"button\"><span>Edit</span></button>'+\n                        '<button class=\"action-delete remove_acl_item\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>'\n                    );\n\n                    showSuccessMessage($.mage.__('ACL item is successfully saved.'));\n                } else {\n                    showErrorMessage(response.msg);\n                }\n            }).fail(function () {\n                showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n            });\n        });\n\n        /**\n         * ACL container remove item button on click event\n         */\n        $('body').on('click', '.remove_acl_item', function () {\n            let valueField = $(this).closest('tr').find(\"input[name='value']\");\n            let acl_item_id = valueField.data('id');\n            let acl_item_name = valueField.val();\n            let self = this;\n\n            confirm({\n                title: 'Delete Dictionary Item',\n                content: 'Are you sure you want to delete the ACL item with the \"'+acl_item_name+'\" IP value?',\n                actions: {\n                    confirm: function () {\n                        deleteEdgeAclItem(acl_id, acl_item_id, true).done(function (response) {\n                            if (response.status === true) {\n                                $(self).closest('tr').remove();\n                                showSuccessMessage($.mage.__('ACL item is successfully deleted.'));\n                            }\n                        }).fail(function () {\n                            showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n                        });\n                    },\n                    cancel: function () {}\n                }\n            });\n        });\n\n        $('body').on('click', '.edit_acl_item', function () {\n            let valueField = $(this).closest('tr').find(\"input[name='value']\");\n            let commentField = $(this).closest('tr').find(\"input[name='comment']\");\n            let self = this;\n            valueField.prop('disabled', false);\n            commentField.prop('disabled', false);\n            $(self).removeClass('fastly-edit-action');\n            $(self).removeClass('edit_acl_item');\n            $(self).addClass('fastly-save-action');\n            $(self).addClass('update_acl_item');\n        });\n\n        $('body').on('click', '.update_acl_item', function () {\n            let valueField = $(this).closest('tr').find(\"input[name='value']\");\n            let commentField = $(this).closest('tr').find(\"input[name='comment']\");\n            let acl_item_id = valueField.data('id');\n            let item_value = valueField.val();\n            let comment_value = commentField.val();\n            let self = this;\n\n            updateEdgeAclItem(acl_id, acl_item_id, item_value, comment_value, true).done(function (response) {\n                if (response.status === true) {\n                    $(self).closest('tr').find(\"input[name='value']\").prop('disabled', true);\n                    $(self).closest('tr').find(\"input[name='comment']\").prop('disabled', true);\n                    $(self).closest('tr').find(\".acl-comment\").val(response.comment);\n                    $(self).closest('tr').find(\".col-actions\").html(\n                        '<button class=\"action-delete fastly-edit-action edit_acl_item\"  title=\"Edit\" type=\"button\"><span>Edit</span></button>'+\n                        '<button class=\"action-delete remove_acl_item\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>'\n                    );\n                    showSuccessMessage($.mage.__('ACL item is successfully updated.'));\n                } else {\n                    showErrorMessage(response.msg);\n                }\n            }).fail(function () {\n                showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n            });\n        });\n\n        /**\n         * ACL container delete button on click event\n         */\n        $('body').on('click', 'button.fastly-delete-acl-icon', function () {\n            acl_id = $(this).data('acl-id');\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (checkService) {\n                active_version = checkService.active_version;\n                let next_version = checkService.next_version;\n                let service_name = checkService.service.name;\n\n                if (acls != null && acl_id != null) {\n                    let aclHtml = '<input name=\"acl\" value=\"' + acl_id + '\" class=\"input-text admin__control-text acl-field\" type=\"hidden\" disabled>';\n                    overlay(aclDeleteContainerOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n                    let containerWarning = $('#fastly-container-warning');\n                    $('.modal-title').text($.mage.__('Delete \"%1\" ACL container').replace('%1', acl_id));\n                    containerWarning.text($.mage.__('You are about to delete the \"%1\" ACL container.').replace('%1', acl_id));\n                    containerWarning.show();\n                    if (aclHtml !== '') {\n                        $('#delete-acl-container').html(aclHtml);\n                    }\n                }\n            });\n        });\n\n    }\n});\n","Fastly_Cdn/js/edge-dictionaries.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"showSuccessMessage\",\n    \"Magento_Ui/js/modal/confirm\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, showSuccessMessage, confirm) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* Dictionary button messages */\n        let successDictionaryBtnMsg = $('#fastly-success-dictionary-button-msg');\n        let errorDictionaryBtnMsg = $('#fastly-error-dictionary-button-msg');\n\n        let itemsHtml;\n        let dictionaryItems;\n        let dictionary_id;\n        let dictionaries;\n\n        let active_version = serviceStatus.active_version;\n\n        /**\n         * Dictionary container modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let dictionaryContainerOptions = {\n            title: jQuery.mage.__('Create dictionary container'),\n                content: function () {\n                return document.getElementById('fastly-dictionary-container-template').textContent;\n            },\n            actionOk: function () {\n                createDictionary(active_version);\n            }\n        };\n\n        /**\n         * Dictionary container items modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let dictionaryItemOptions = {\n            title: jQuery.mage.__('Dictionary items'),\n                content: function () {\n                return document.getElementById('fastly-dictionary-item-template').textContent;\n            },\n            actionOk: function () {\n            }\n        };\n\n        /**\n         * Dictionary container delete modal overlay options\n         *\n         * @type {{title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let dictionaryDeleteContainerOptions = {\n            title: jQuery.mage.__('Delete dictionary containers'),\n                content: function () {\n                return document.getElementById('fastly-delete-dictionary-container-template').textContent;\n            },\n            actionOk: function () {\n                deleteDictionary(active_version);\n            }\n        };\n\n        /**\n         * Trigger Dictionary container list\n         */\n        listDictionaries(active_version, false).done(function (response) {\n            $('.loading-dictionaries').hide();\n            if (response.status !== false) {\n                if (response.status !== false) {\n                    if (response.dictionaries.length > 0) {\n                        dictionaries = response.dictionaries;\n                        processDictionaries(response.dictionaries);\n                    } else {\n                        $('.no-dictionaries').show();\n                    }\n                }\n            }\n        }).fail(function () {\n            return errorDictionaryBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n        });\n\n        /**\n         * Create Dictionary container\n         */\n        function createDictionary()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createDictionary,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'dictionary_name': $('#dictionary_name').val()\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successDictionaryBtnMsg.text($.mage.__('Dictionary is successfully created.')).show();\n                        active_version = response.active_version;\n                        // Fetch dictionaries\n                        listDictionaries(active_version, false).done(function (list) {\n                            $('.loading-dictionaries').hide();\n                            if (list.status !== false) {\n                                if (list.status !== false) {\n                                    if (list.dictionaries.length > 0) {\n                                        dictionaries = list.dictionaries;\n                                        processDictionaries(list.dictionaries);\n                                        $('.no-dictionaries').hide();\n                                    } else {\n                                        $('.no-dictionaries').show();\n                                    }\n                                }\n                            }\n                        }).fail(function () {\n                            return errorDictionaryBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                        });\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorDictionaryBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Process and display Dictionary container\n         *\n         * @param dictionaries\n         */\n        function processDictionaries(dictionaries)\n        {\n            let html = '';\n            $.each(dictionaries, function (index, dictionary) {\n                html += \"<tr id='fastly_dict_\" + index + \"'>\";\n                html += \"<td><input data-dictionaryId='\"+ dictionary.id + \"' id='dict_\" + index + \"' value='\"+ dictionary.name +\"' disabled='disabled' class='input-text' type='text'></td>\";\n                html += \"<td class='col-actions'>\" +\n                    \"<button class='action-delete fastly-edit-dictionary-icon' data-dictionary-id='\" + dictionary.id + \"' data-dictionary-name='\" + dictionary.name + \"' id='fastly-edit-dictionary_\"+ index + \"' title='Edit dictionary' type='button'>\" +\n                    \"<button class='action-delete fastly-delete-dictionary-icon' data-dictionary-id='\" + dictionary.name + \"' id='fastly-delete-dictionary_\"+ index + \"' title='Delete dictionary' type='button'>\" +\n                    \"</td></tr>\";\n            });\n            if (html !== '') {\n                $('.no-dictionaries').hide();\n            }\n            $('#fastly-dictionaries-list').html(html);\n        }\n\n        /**\n         * Queries Fastly API to retrieve the list of Dictionary containers\n         *\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function listDictionaries(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getDictionaries,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version},\n                beforeSend: function () {\n                    $('.loading-dictionaries').show();\n                }\n            });\n        }\n\n        /**\n         * Save Dictionary container item\n         *\n         * @param dictionary_id\n         * @param item_key\n         * @param item_value\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function saveEdgeDictionaryItem(dictionary_id, item_key, item_value, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.createDictionaryItem,\n                showLoader: loaderVisibility,\n                data: {'dictionary_id': dictionary_id, 'item_key': item_key, 'item_value': item_value},\n                beforeSend: function () {\n                    resetAllMessages();\n                }\n            });\n        }\n\n        /**\n         * Delete Dictionary container\n         */\n        function deleteDictionary()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n\n            let del_dictionary = $(\"input[name='dictionary']\").val();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.deleteDictionary,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'dictionary': del_dictionary\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        successDictionaryBtnMsg.text($.mage.__('Dictionary successfully deleted.')).show();\n                        active_version = response.active_version;\n                        // Fetch dictionaries\n                        listDictionaries(active_version, false).done(function (dictResp) {\n                            $('.loading-dictionaries').hide();\n                            if (dictResp.status !== false) {\n                                if (dictResp.dictionaries.length > 0) {\n                                    dictionaries = dictResp.dictionaries;\n                                    processDictionaries(dictResp.dictionaries);\n                                } else {\n                                    $('#fastly-dictionaries-list').html('');\n                                    $('.no-dictionaries').show();\n                                }\n                            }\n                        }).fail(function () {\n                            return errorDictionaryBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                        });\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return errorDictionaryBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        }\n\n        /**\n         * Delete Dictionary container item\n         *\n         * @param dictionary_id\n         * @param item_key\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function deleteEdgeDictionaryItem(dictionary_id, item_key, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.deleteDictionaryItem,\n                showLoader: loaderVisibility,\n                data: {'dictionary_id': dictionary_id, 'item_key': item_key},\n                beforeSend: function () {\n                    resetAllMessages();\n                }\n            });\n        }\n\n        /**\n         * Dictionary container add button on click event\n         */\n        $('#add-dictionary-container-button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                })\n            ).done(function (service) {\n                if (service.status === false) {\n                    return errorDictionaryBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                overlay(dictionaryContainerOptions);\n                setServiceLabel(active_version, next_version, service_name);\n                $('.upload-button span').text('Create');\n\n            }).fail(function () {\n                return errorDictionaryBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Dictionary container edit button on click event\n         */\n        $('body').on('click', 'button.fastly-edit-dictionary-icon', function () {\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (checkService) {\n                active_version = checkService.active_version;\n                let next_version = checkService.next_version;\n                let service_name = checkService.service.name;\n                setServiceLabel(active_version, next_version, service_name);\n            });\n\n            dictionary_id = $(this).data('dictionary-id');\n            let dictionary_name = $(this).data('dictionary-name');\n            // Handle Dictionaries\n            if (dictionaries != null && dictionary_id != null) {\n                $.ajax({\n                    type: \"POST\",\n                    url: config.getDictionaryItems,\n                    showLoader: true,\n                    data: {'dictionary_id': dictionary_id}\n                }).done(function (response) {\n                    if (response.status !== false) {\n                        dictionaryItems = response.dictionaryItems;\n                        itemsHtml = '';\n                        if (response.dictionaryItems.length > 0) {\n                            $.each(response.dictionaryItems, function (index, item) {\n                                itemsHtml += '<tr><td>' +\n                                    '<input name=\"key\" value=\"'+ item.item_key +'\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\" disabled></td>' +\n                                    '<td><input name=\"value\" data-type=\"dictionary\" value=\"'+ item.item_value +'\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                                    '<td class=\"col-actions\">' +\n                                    '<button class=\"action-delete fastly-save-action save_dictionary_item\" title=\"Save\" type=\"button\"><span>Save</span></button>' +\n                                    '<button class=\"action-delete remove_dictionary_item\"  title=\"Delete\" type=\"button\"><span>Delete</span></button>' +\n                                    '</td></tr>';\n                            });\n                        } else {\n                            itemsHtml += '<tr><td>' +\n                                '<input name=\"key\" value=\"\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                                '<td><input name=\"value\" data-type=\"dictionary\" value=\"\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                                '<td class=\"col-actions\">' +\n                                '<button class=\"action-delete fastly-save-action save_dictionary_item\" title=\"Save\" type=\"button\"><span>Save</span></button>' +\n                                '</td></tr>';\n                        }\n                    }\n\n                    overlay(dictionaryItemOptions);\n                    $('.modal-title').text($.mage.__('\"%1\" dictionary container items').replace('%1', dictionary_name));\n                    $('.upload-button').remove();\n\n                    $('#dictionary-items-table > tbody').html(itemsHtml);\n                });\n            }\n        });\n\n        /**\n         * Dictionary container add item button on click event\n         */\n        $('body').on('click', '#add-dictionary-item', function () {\n            $('#dictionary-items-table > tbody').append('<tr><td><input name=\"key\" required=\"required\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                '<td><input name=\"value\" data-type=\"dictionary\" required=\"required\" class=\"input-text admin__control-text dictionary-items-field\" type=\"text\"></td>' +\n                '<td class=\"col-actions\">' +\n                '<button class=\"action-delete fastly-save-action save_dictionary_item\" title=\"Save\" type=\"button\"><span>Save</span></button>' +\n                '<button class=\"action-delete remove_dictionary_item\"  title=\"Delete\" type=\"button\" hidden><span>Delete</span></button>' +\n                '</td></tr>');\n        });\n\n        /**\n         * Dictionary container save item on click event\n         */\n        $('body').on('click', '.save_dictionary_item', function () {\n            let keyField = $(this).closest('tr').find(\"input[name='key']\");\n            let valueField = $(this).closest('tr').find(\"input[name='value']\");\n            let item_key = keyField.val();\n            let item_value = valueField.val();\n            let errors = false;\n\n            if (item_key === '') {\n                errors = true;\n                keyField.css('border-color', '#e22626');\n            } else {\n                keyField.css('border-color', '#878787');\n            }\n\n            if (item_value === '') {\n                errors = true;\n                valueField.css('border-color', '#e22626');\n            } else {\n                valueField.css('border-color', '#878787');\n            }\n\n            if (errors) {\n                resetAllMessages();\n                return showErrorMessage($.mage.__('Please enter all required fields.'));\n            }\n\n            let self = this;\n\n            saveEdgeDictionaryItem(dictionary_id, item_key, item_value, true).done(function (response) {\n                if (response.status === true) {\n                    $(self).closest('tr').find(\"input[name='key']\").prop('disabled', true);\n                    $(self).closest('tr').find(\".remove_dictionary_item\").show();\n                    showSuccessMessage($.mage.__('Dictionary item is successfully saved.'));\n                } else {\n                    showErrorMessage(response.msg);\n                }\n            }).fail(function () {\n                showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n            });\n        });\n\n        /**\n         * Dictionary container remove item on click event\n         */\n        $('body').on('click', '.remove_dictionary_item', function () {\n            let item_key = $(this).closest('tr').find(\"input[name='key']\").val();\n            let self = this;\n            confirm({\n                title: 'Delete Dictionary Item',\n                content: 'Are you sure you want to delete the \"'+item_key+'\" dictionary item?',\n                actions: {\n                    confirm: function () {\n                        deleteEdgeDictionaryItem(dictionary_id, item_key, true).done(function (response) {\n                            if (response.status === true) {\n                                $(self).closest('tr').remove();\n                                showSuccessMessage($.mage.__('Dictionary item is successfully deleted.'));\n                            }\n                        }).fail(function () {\n                            showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'));\n                        });\n                    },\n                    cancel: function () {}\n                }\n            });\n        });\n\n        /**\n         * Dictionary container delete button on click event\n         */\n        $('body').on('click', 'button.fastly-delete-dictionary-icon', function () {\n            dictionary_id = $(this).data('dictionary-id');\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (checkService) {\n                active_version = checkService.active_version;\n                let next_version = checkService.next_version;\n                let service_name = checkService.service.name;\n\n                if (dictionaries != null && dictionary_id != null) {\n                    let dictionaryHtml = '<input name=\"dictionary\" value=\"' + dictionary_id + '\" class=\"input-text admin__control-text dictionary-field\" type=\"hidden\" disabled>';\n                    overlay(dictionaryDeleteContainerOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n                    let containerWarning = $('#fastly-container-warning');\n                    $('.modal-title').text($.mage.__('Delete \"%1\" Dictionary container').replace('%1', dictionary_id));\n                    containerWarning.text($.mage.__('You are about to delete the \"%1\" Dictionary container.').replace('%1', dictionary_id));\n                    containerWarning.show();\n                    if (dictionaryHtml !== '') {\n                        $('#delete-dictionary-container').html(dictionaryHtml);\n                    }\n                }\n            });\n        });\n\n    }\n});\n","Fastly_Cdn/js/success-message.js":"define([\n    \"jquery\"\n], function ($) {\n    return function showSuccessMessage(msg)\n    {\n        /**\n         * Show success message\n         *\n         * @type {*|jQuery|HTMLElement}\n         */\n        let msgSuccess = $('.fastly-message-success');\n        msgSuccess.html($.mage.__(msg));\n        msgSuccess.show();\n        msgSuccess.focus();\n    }\n});","Fastly_Cdn/js/historicstats.js":"define([\n    'jquery',\n    'mage/translate',\n    'https://www.gstatic.com/charts/loader.js',\n    'moment',\n    'mage/calendar'\n], function ($, t, g, moment) {\n    \"use strict\";\n    return function (config) {\n        let requests = [];\n        let bandwith = [];\n        let hitRatio = [];\n        let errors = [];\n        let fromPicker = $('#from-picker');\n        let toPicker = $('#to-picker');\n\n        $(document).ready(function () {\n            $('#Fastly').removeClass('ui-tabs-panel');\n            // From picker init\n            fromPicker.datetimepicker({dateFormat: \"mm/dd/yy\"});\n            $(\".ui-datepicker-trigger\").removeAttr(\"style\");\n            $(\".ui-datepicker-trigger\").click(function () {\n                fromPicker.focus();\n            });\n\n            // To picker init\n            toPicker.datetimepicker({dateFormat: \"mm/dd/yy\"});\n            $(\".ui-datepicker-trigger\").removeAttr(\"style\");\n            $(\".ui-datepicker-trigger\").click(function () {\n                toPicker.focus();\n            });\n\n            /* Default picker values */\n            let from = moment().utc().subtract(7, 'days').format('M/D/YYYY h:mm');\n            let to = moment().utc().format('M/D/YYYY h:mm');\n            fromPicker.val(from);\n            toPicker.val(to);\n\n            /* Init charts */\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true,\n            }).done(function (checkService) {\n                if (checkService.status !== false) {\n                    applyCharts();\n                } else {\n                    $('#apply-historic-stats').prop(\"disabled\", \"disabled\");\n                    $('.charts').html('<h3 class=\"chart-title\">Please check your Service ID and API token and try again.</h3>').show();\n                }\n            }).fail(function () {\n\n            });\n\n            $('.graph-options').on('change', function () {\n                let option = $(this).find(\":selected\").val();\n                let optionName = $(this).attr(\"name\");\n                $(this).parent().find('span').hide();\n                $('#' +optionName+ '-number-' + option).show();\n            });\n            /* Last hour */\n            $('#last-hour').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(1, 'hours').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n            /* Last 2 hours */\n            $('#last-2hr').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(2, 'hours').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n\n            $('#last-4hr').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(4, 'hours').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n\n            $('#last-8hr').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(8, 'hours').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n\n            $('#last-day').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(1, 'days').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n\n            $('#last-week').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(7, 'days').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n\n            $('#last-month').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(1, 'months').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n\n            $('#last-year').on('click', function (e) {\n                e.preventDefault();\n                let from = moment().utc().subtract(1, 'years').format('M/D/YYYY h:mm');\n                let to = moment().utc().format('M/D/YYYY h:mm');\n                fromPicker.val(from);\n                toPicker.val(to);\n            });\n        });\n\n        $('#apply-historic-stats').on('click', function () {\n            applyCharts();\n        });\n\n        function applyCharts()\n        {\n            let from = fromPicker.val();\n            let to = toPicker.val();\n            let sample_rate = $('#sample-rate').val();\n            let region = $('#region').val();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.applyHistoricStatsURL,\n                showLoader: true,\n                data: {\n                    'from': from,\n                    'to': to,\n                    'sample_rate': sample_rate,\n                    'region': region\n                },\n                beforeSend: function (xhr) {\n\n                }\n            }).done(function (response) {\n                if (response.status === true) {\n                    if (response.stats.data.length > 0) {\n                        let data = response.stats.data;\n                        /* Empty charts arrays */\n                        requests = [];\n                        bandwith = [];\n                        hitRatio = [];\n                        errors = [];\n                        let averageBandwidth = 0;\n                        let minimumBandwidth = 0;\n\n                        let averageRequests = 0;\n                        let minimumRequests = 0;\n\n                        let averageHitRatio = 0;\n                        let minimumHitRatio = 0;\n                        let maximumHitRatio = 0;\n\n                        let averageError503 = 0;\n                        let minimumError503 = 0;\n\n                        /* Parse Fastly Historic stats */\n                        $.each(data, function (key, value) {\n                            let d = new Date();\n                            d.setTime(value.start_time*1000);\n                            /* Requests */\n                            requests.push([d, value.requests]);\n                            averageRequests += value.requests;\n                            averageBandwidth += value.bandwidth;\n                            averageError503 += value.status_503;\n\n                            if (value.miss !== 0 && value.hits !== 0) {\n                                averageHitRatio += (value.hits / (value.hits + value.miss)) * 100;\n                            }\n\n                            if (key === 0) {\n                                minimumRequests = value.requests;\n                                minimumBandwidth = value.bandwidth;\n                                let initHitRatio = (value.hits / (value.hits + value.miss)) * 100;\n                                minimumHitRatio = initHitRatio;\n                                maximumHitRatio = initHitRatio;\n                                minimumError503 = 0;\n                            }\n\n                            if (minimumRequests > value.requests) {\n                                minimumRequests = value.requests;\n                            }\n\n                            if (minimumBandwidth > value.bandwidth) {\n                                minimumBandwidth = value.bandwidth;\n                            }\n\n                            if (minimumHitRatio > (value.hits / (value.hits + value.miss)) * 100) {\n                                minimumHitRatio = (value.hits / (value.hits + value.miss)) * 100;\n                            }\n\n                            if (maximumHitRatio < (value.hits / (value.hits + value.miss)) * 100) {\n                                maximumHitRatio = (value.hits / (value.hits + value.miss)) * 100;\n                            }\n\n                            if (minimumError503 > value.status_503) {\n                                minimumError503 = value.status_503;\n                            }\n\n                            /* Bandwidth */\n                            bandwith.push([d, value.bandwidth]);\n                            /* Hit / Miss ratio */\n                            let ratio = (value.hits / (value.hits + value.miss)) * 100;\n                            hitRatio.push([d, ratio]);\n                            /* 500s errors */\n                            errors.push([d, value.status_5xx, value.status_503]);\n                        });\n\n                        /* Bandwidth stats */\n                        $('#bandwidth-number-total').html(formatBytes(averageBandwidth, 1));\n                        averageBandwidth = averageBandwidth / data.length;\n                        averageBandwidth = round(averageBandwidth, 2);\n                        $('#bandwidth-number-average').html(formatBytes(averageBandwidth, 1));\n                        $('#bandwidth-number-minimum').html(formatBytes(minimumBandwidth, 1));\n\n                        /* Requests stats */\n                        let totalRequests = nFormatter(averageRequests, 1);\n                        $('#requests-number-total').html(totalRequests);\n                        averageRequests = averageRequests / data.length;\n                        averageRequests = round(averageRequests, 2);\n                        averageRequests = nFormatter(averageRequests, 1);\n                        $('#requests-number-average').html(averageRequests);\n                        $('#requests-number-minimum').html(nFormatter(minimumRequests, 1));\n\n                        /* HitRatio stats*/\n                        averageHitRatio = averageHitRatio / data.length;\n                        averageHitRatio = round(averageHitRatio, 2);\n                        $('#hitratio-number-average').html(averageHitRatio + '%');\n                        $('#hitratio-number-minimum').html(minimumHitRatio + '%');\n                        $('#hitratio-number-maximum').html(round(maximumHitRatio, 2) + '%');\n\n                        /* Requests stats */\n                        $('#errors-number-total').html(averageError503);\n                        averageError503 = averageError503 / data.length;\n                        averageError503 = round(averageError503, 2);\n                        $('#errors-number-average').html(averageError503);\n                        $('#errors-number-minimum').html(minimumError503);\n\n                        google.charts.load('current', {'packages':['corechart']});\n                        google.charts.setOnLoadCallback(requestsChart);\n                        google.charts.setOnLoadCallback(bandwithChart);\n                        google.charts.setOnLoadCallback(hitRatioChart);\n                        google.charts.setOnLoadCallback(errorsChart);\n\n                        $('.charts').show();\n                    } else {\n                        $('.charts').hide();\n                        $('.no-data').show();\n                    }\n                }\n            }.bind(this)).fail(function () {\n\n            });\n        }\n\n        function errorsChart()\n        {\n            let data = new google.visualization.DataTable();\n            data.addColumn('datetime', 'Date');\n            data.addColumn('number', '5xx');\n            data.addColumn('number', '503');\n            data.addRows(errors);\n\n            let options = {\n                hAxis:{\n                    format: 'MMMM d',\n                    gridlines: {color: 'transparent'}\n                },\n                vAxis:{\n                    gridlines: {color: 'transparent'},\n                    format: 'short'\n                }};\n            let chart = new google.visualization.AreaChart(document.getElementById('errorschart'));\n            chart.draw(data,options);\n        }\n\n        function hitRatioChart()\n        {\n            let data = new google.visualization.DataTable();\n            data.addColumn('datetime', 'Date');\n            data.addColumn('number', 'Ratio');\n            data.addRows(hitRatio);\n\n            let options = {\n                hAxis:{\n                    format: 'MMMM d',\n                    gridlines: {color: 'transparent'}\n                },\n                vAxis:{\n                    gridlines: {color: 'transparent'},\n                    format: '#\\'%\\''\n                }};\n\n            let formatter = new google.visualization.NumberFormat({suffix: '%'});\n            formatter.format(data, 1);\n            let chart = new google.visualization.AreaChart(document.getElementById('hitratio'));\n            chart.draw(data,options);\n\n        }\n\n        function bandwithChart()\n        {\n            let data = new google.visualization.DataTable();\n            data.addColumn('datetime', 'Date');\n            data.addColumn('number', 'Bandwidth');\n            data.addRows(bandwith);\n\n            // custom format data values\n            for (let i = 0; i < data.getNumberOfRows(); i++) {\n                let val = data.getValue(i, 1);\n                let formattedVal = formatBytes(val, 0);\n                data.setFormattedValue(i, 1, formattedVal);\n            }\n            let options = {\n                colors: ['#F17C09'],\n                hAxis:{\n                    format: 'MMMM d',\n                    gridlines: {color: 'transparent'}\n                }\n            };\n            let chart = new google.visualization.AreaChart(document.getElementById('bandwith'));\n            // get the axis values and reformat them\n            let runOnce = google.visualization.events.addListener(chart, 'ready', function () {\n                google.visualization.events.removeListener(runOnce);\n                let bb, val, formattedVal, suffix, ticks = [], cli = chart.getChartLayoutInterface();\n                for (let i = 0; bb = cli.getBoundingBox('vAxis#0#gridline#' + i); i++) {\n                    val = cli.getVAxisValue(bb.top);\n                    // sometimes, the axis value falls 1/2 way though the pixel height of the gridline,\n                    // so we need to add in 1/2 the height\n                    // this assumes that all axis values will be integers\n                    if (val !== parseInt(val)) {\n                        val = cli.getVAxisValue(bb.top + bb.height / 2);\n                    }\n                    formattedVal = formatBytes(val, 0, true);\n\n                    ticks.push({v: val, f: formattedVal});\n                }\n                options.vAxis = options.vAxis || {gridlines: {color: 'transparent'}};\n                options.vAxis.ticks = ticks;\n                chart.draw(data, options);\n            });\n\n            chart.draw(data,options);\n\n        }\n\n        function requestsChart()\n        {\n            let data = new google.visualization.DataTable();\n            data.addColumn('datetime', 'Date');\n            data.addColumn('number', 'Requests');\n            data.addRows(requests);\n\n            let options = {\n                hAxis:{\n                    format: 'MMMM d',\n                    gridlines: {color: 'transparent'}\n                },\n                vAxis:{\n                    gridlines: {color: 'transparent'},\n                    format: 'short'\n                },\n                animation:{\n                    duration: 1000,\n                    easing: 'out'\n                }\n            };\n            let chart = new google.visualization.AreaChart(document.getElementById('requests'));\n            chart.draw(data,options);\n        }\n\n        function round(value, exp)\n        {\n            if (typeof exp === 'undefined' || +exp === 0) {\n                return Math.round(value);\n            }\n\n            value = +value;\n            exp = +exp;\n\n            if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n                return NaN;\n            }\n\n            // Shift\n            value = value.toString().split('e');\n            value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));\n\n            // Shift back\n            value = value.toString().split('e');\n            return +(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp));\n        }\n\n        function formatBytes(bytes, decimals, roundValue)\n        {\n            if (bytes === 0) {\n                return '0 Bytes';\n            }\n            let k = 1000,\n                dm = decimals + 1 || 3,\n                sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n                i = Math.floor(Math.log(bytes) / Math.log(k));\n            if (typeof roundValue === \"undefined\") {\n                return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n            } else {\n                let result = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));\n                result = round(result, 0);\n                return result + ' ' + sizes[i];\n            }\n        }\n\n        function nFormatter(num, digits)\n        {\n            let si = [\n                { value: 1E18, symbol: \"E\" },\n                { value: 1E15, symbol: \"P\" },\n                { value: 1E12, symbol: \"T\" },\n                { value: 1E9,  symbol: \"G\" },\n                { value: 1E6,  symbol: \"M\" },\n                { value: 1E3,  symbol: \"k\" }\n            ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/, i;\n            for (i = 0; i < si.length; i++) {\n                if (num >= si[i].value) {\n                    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n                }\n            }\n            return num.toFixed(digits).replace(rx, \"$1\");\n        }\n    }\n});\n","Fastly_Cdn/js/modly.js":"define([\n    \"jquery\",\n    \"handlebars\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"showSuccessMessage\",\n    \"showWarningMessage\",\n    'mage/translate'\n], function ($, Handlebars, setServiceLabel, overlay, resetAllMessages, showErrorMessage, showSuccessMessage, showWarningMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n        let successAllModulesBtnMsg = $('#fastly-success-all-modules-button-msg');\n        let errorAllModulesBtnMsg = $('#fastly-error-all-modules-button-msg');\n        let warningAllModulesBtnMsg = $('#fastly-warning-all-modules-button-msg');\n        let module_field;\n        let moduleModal;\n        let aclModal;\n        let dictionaryModal;\n        let aclNewButton = false;\n        let dictNewButton = false;\n        let aclSelectId;\n        let dictSelectId;\n\n        let active_version = setServiceLabel.active_version;\n\n        let activeModuleOptions = {\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('modly-active-module-template').textContent;\n            },\n            actionOk: function () {\n                saveModuleConfig();\n            }\n        };\n\n        let allModuleOptions = {\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('modly-all-modules-template').textContent;\n            },\n            actionOk: function () {\n                saveActiveModules();\n            }\n        };\n\n        let aclModalProperties = {\n            title: jQuery.mage.__('Create ACL container'),\n            content: function () {\n                return document.getElementById('fastly-acl-container-template').textContent;\n            },\n            actionOk: function () {\n                createAcl();\n            }\n        };\n\n        let dictionaryModalProperties = {\n            title: jQuery.mage.__('Create Dictionary'),\n            content: function () {\n                return document.getElementById('fastly-dictionary-container-template').textContent;\n            },\n            actionOk: function () {\n                createDictionary();\n            }\n        };\n\n        let aclAddNewButtonProperties = {\n            text: 'New ACL',\n            class: 'action-secondary add-new-button',\n            dataRole: 'action',\n            clickButton: function () {\n                overlay(aclModalProperties);\n                aclModal = modal;\n            }\n        };\n\n        let dictionaryAddNewButtonProperties = {\n            text: 'New Dictionary',\n            class: 'action-secondary add-new-button',\n            dataRole: 'action',\n            clickButton: function () {\n                overlay(dictionaryModalProperties);\n                dictionaryModal = modal;\n            }\n        };\n\n        getActiveModules(false).done(function (response) {\n            $('.loading-modules').hide();\n            if (response.status !== false) {\n                if (response.modules.length > 0) {\n                    modules = response.modules;\n                    processActiveModules(modules);\n                } else {\n                    $('#modly-active-modules-list').html('');\n                    $('.no-modules').show();\n                }\n            } else {\n                $('#modly-active-modules-list').html('');\n                $('.no-modules').show();\n            }\n        });\n\n        function createButton(properties)\n        {\n            let addNewButton = document.createElement('button');\n            let text = document.createTextNode(properties.text);\n            addNewButton.setAttribute('class', properties.class);\n            addNewButton.setAttribute('type', 'button');\n            addNewButton.setAttribute('data-role', properties.dataRole);\n            addNewButton.appendChild(text);\n            addNewButton.on('click', function () {\n                return properties.clickButton();\n            });\n            $('.modal-header').find(\".page-actions-buttons\").append(addNewButton)\n        }\n\n        function saveModuleConfig()\n        {\n            let fieldData = {};\n            let name = '';\n            let value = '';\n            let data = {};\n            let moduleId = $('#module-id').val();\n            let groupData = [];\n            $('.modly-group').each(function () {\n                $($(this).find('.modly-field')).each(function () {\n                    name = $(this).attr('name');\n                    value = $(this).val();\n                    if (value === \"true\" || value === \"false\") {\n                        value = (value === \"true\");\n                    }\n                    data[name] = value;\n                });\n                groupData.push(data);\n                data = {};\n            });\n            if (groupName !== '') {\n                fieldData[groupName] = groupData;\n            } else {\n                fieldData = groupData;\n            }\n            $.ajax({\n                type: \"POST\",\n                url: config.saveModuleConfigUrl,\n                data: {\n                    'module_id': moduleId,\n                    'field_data': fieldData,\n                    'group_name': groupName\n                },\n                showLoader: true,\n                success: function (data) {\n                    if (data.status === true) {\n                        let parsedVcl = JSON.stringify(parseVcl(fieldData));\n                        uploadModuleConfig(moduleId, parsedVcl, active_version).done(function (response) {\n                            if (response.status === true) {\n                                moduleModal.modal('closeModal');\n                                resetAllMessages();\n                                successAllModulesBtnMsg.text($.mage.__('The %1 module has been successfully uploaded to the Fastly service.').replace('%1', moduleId)).show();\n                                module_field.closest('tr').find('.col-date').text(response.last_uploaded);\n                            } else {\n                                resetAllMessages();\n                                showErrorMessage(response.msg);\n                            }\n                        });\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(data.msg);\n                    }\n                }\n            });\n        }\n\n        function uploadModuleConfig(moduleId, parsedVcl, active_version)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.uploadModuleSnippetUrl,\n                data: {\n                    'module_id': moduleId,\n                    'active_version': active_version,\n                    'snippets': parsedVcl\n                },\n                showLoader: true\n            });\n        }\n\n        function parseVcl(fieldData)\n        {\n            let moduleVcl = JSON.parse(module.manifest_vcl);\n            let templates = [];\n            let result = '';\n\n            Handlebars.registerHelper('replace', (inp, re, repl) => inp.replace(new RegExp(re, 'g'), repl));\n            Handlebars.registerHelper('ifEq', function (a, b, options) {\n                if (a === b) {\n                    return options.fn(this);\n                } else {\n                    return options.inverse(this);\n                }\n            });\n            Handlebars.registerHelper('ifMatch', (a, pat, opts) => opts[a.match(new RegExp(pat)) ? 'fn':'inverse'](this));\n            Handlebars.registerHelper('extract', (a, pat) => (a.match(new RegExp(pat)) || [])[1]);\n\n            $.each(fieldData, function (key, fields) {\n                $.each(moduleVcl, function (index, value) {\n                    let vclTemplate = Handlebars.compile(value.template);\n                    if (groupName !== '') {\n                        result = vclTemplate(fieldData);\n                    } else {\n                        result = vclTemplate(fields);\n                    }\n                    let priority = 45;\n                    if (value.priority) {\n                        priority = value.priority;\n                    }\n                    templates.push({\n                        \"type\": value.type,\n                        \"priority\": priority,\n                        \"snippet\": result\n                    });\n                });\n            });\n            return templates;\n        }\n\n        function saveActiveModules()\n        {\n            let checkedModules = [];\n            $('.module:checked').each(function () {\n                checkedModules.push($(this).attr('name'));\n            });\n            $.ajax({\n                type: \"POST\",\n                url: config.toggleModulesUrl,\n                data: {\n                    'toggle': true,\n                    'checked_modules': checkedModules\n                },\n                showLoader: true,\n                success: function (data) {\n                    if (data.status === true) {\n                        modal.modal('closeModal');\n                        resetAllMessages();\n                        getActiveModules(false).done(function (response) {\n                            $('.loading-modules').hide();\n                            if (response.status !== false) {\n                                if (response.modules.length > 0) {\n                                    modules = response.modules;\n                                    processActiveModules(modules);\n                                } else {\n                                    $('#modly-active-modules-list').html('');\n                                    $('.no-modules').show();\n                                }\n                            } else {\n                                $('#modly-active-modules-list').html('');\n                                $('.no-modules').show();\n                            }\n                        })\n                    }\n                }\n            });\n        }\n\n        function getActiveModules(loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getActiveModulesUrl,\n                showLoader: loaderVisibility,\n                beforeSend: function (xhr) {\n                    $('.loading-modules').show();\n                }\n            });\n        }\n\n        function processActiveModules(modules)\n        {\n            if (modules.length > 0) {\n                $('#modly-active-modules-list').html('');\n                $('.no-modules').hide();\n                $.each(modules, function (index, module) {\n                    let moduleRow = $('<tr></tr>');\n                    let moduleCell = $('<td></td>');\n                    let moduleSpan = $('<span class=\"active-modules\" type=\"text\"></span>');\n                    let moduleNote = $('<p class=\"note\"></p>');\n                    let moduleNoteSpan = $('<span></span>');\n                    let moduleActionCell = $('<td class=\"col-actions\"></td>');\n                    let moduleDateCell = $('<td class=\"col-date\"></td>');\n                    let moduleActionButton = $('<button title=\"Edit module\" type=\"button\">');\n\n                    moduleRow.attr('id', 'fastly_' + index);\n                    moduleRow.append(moduleCell);\n                    moduleRow.append(moduleDateCell);\n                    moduleRow.append(moduleActionCell);\n                    moduleCell.append(moduleSpan);\n                    moduleCell.append(moduleNote);\n                    moduleSpan.attr('data-moduleId', index);\n                    moduleSpan.attr('id', 'module_' + index);\n                    moduleSpan.attr('disabled', 'disabled');\n                    moduleSpan.text(module.manifest_name);\n                    moduleSpan.wrapInner('<b></b>');\n                    moduleNote.append(moduleNoteSpan);\n                    moduleNoteSpan.text(module.manifest_description);\n                    if (module.last_uploaded !== null) {\n                        moduleDateCell.text(module.last_uploaded);\n                    } else {\n                        moduleDateCell.text('Not uploaded');\n                    }\n                    moduleActionCell.append(moduleActionButton);\n                    moduleActionButton.attr('data-module-id', module.manifest_id);\n                    moduleActionButton.attr('id', 'fastly-edit-active-modules' + index);\n                    moduleActionButton.addClass(\"action-delete fastly-edit-active-modules-icon\");\n\n                    $('#modly-active-modules-list').append(moduleRow);\n                });\n            } else {\n                $('.no-modules').show();\n                $('#modly-active-modules-list').html('');\n            }\n        }\n\n        function getModuleData(module_id)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getModuleDataUrl,\n                data: {\n                    'module_id': module_id\n                },\n                showLoader: true\n            });\n        }\n\n        // Queries Fastly API to retrieve Dictionaries\n        function listDictionaries(active_version)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getDictionaries,\n                showLoader: true,\n                data: {'active_version': active_version},\n                async: false\n            });\n        }\n\n        // Queries Fastly API to retrieve ACLs\n        function listAcls(active_version)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getAcls,\n                showLoader: true,\n                data: {'active_version': active_version},\n                async: false\n            });\n        }\n\n        function getBackends(active_version)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.fetchBackendsUrl,\n                showLoader: true,\n                data: {'active_version': active_version},\n                async: false\n            });\n        }\n\n        function getAllConditions(active_version)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.getAllConditionsUrl,\n                data: {'active_version': active_version},\n                showLoader: true,\n                async: false\n            });\n        }\n\n        function getAllDomains(active_version)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.getAllDomainsUrl,\n                data: {'active_version': active_version},\n                showLoader: true,\n                async: false\n            });\n        }\n\n        function getCountries(active_version)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.getCountriesUrl,\n                data: {\n                    'active_version': active_version\n                },\n                showLoader: true,\n                async: false\n            });\n        }\n\n        function renderFields(property, value, active_version)\n        {\n            let field = $('<div class=\"admin__field field\"></div>');\n            let control = $('<div class=\"admin__field-control\"></div>');\n            let label = $('<label class=\"admin__field-label\"></label>');\n            let span = $('<span></span>');\n            let note = $('<div class=\"admin__field-note\"></div>');\n\n            let textInput = $('<input class=\"input-text admin__control-text modly-field\">');\n            let textAreaInput = $('<textarea rows=\"10\" class=\"admin__control-text modly-field\"></textarea>');\n            let selectInput = $('<select class=\"select admin__control-select modly-field\"></select>');\n            let selectOption  = $('<option></option>');\n\n            let description = '';\n            let fieldName = property.name;\n            let fieldValue = '';\n\n            if (property.default) {\n                fieldValue = property.default;\n            }\n            if (property.required === true) {\n                field.prop(' _required');\n            }\n            if (property.description) {\n                description = property.description;\n            }\n            if (value) {\n                $.each(value, function (index, data) {\n                    if (groupName !== '') {\n                        if (index === fieldName) {\n                            fieldValue = data;\n                        }\n                    } else {\n                        if (index === fieldName) {\n                            fieldValue = data;\n                        }\n                    }\n                });\n            }\n\n            function aclAjax()\n            {\n                listAcls(active_version).done(function (response) {\n                    if (response.status !== false) {\n                        let acls = response.acls;\n                        $.each(acls, function (index, acl) {\n                            selectOption  = $('<option></option>');\n                            selectOption.attr('value', acl.name);\n                            if (acl.name === fieldValue) {\n                                selectOption.attr('selected', true);\n                            }\n                            selectOption.html(acl.name);\n                            selectInput.append(selectOption);\n                        });\n                        control.append(selectInput);\n                        aclSelectId = property.name;\n                        if (!aclNewButton) {\n                            aclNewButton = true;\n                        }\n                    }\n                });\n            }\n\n            function dictionaryAjax()\n            {\n                listDictionaries(active_version).done(function (response) {\n                    if (response.status !== false) {\n                        let dictionaries = response.dictionaries;\n                        $.each(dictionaries, function (index, dictionary) {\n                            selectOption  = $('<option></option>');\n                            selectOption.attr('value', dictionary.name);\n                            if (dictionary.name === fieldValue) {\n                                selectOption.attr('selected', true);\n                            }\n                            selectOption.html(dictionary.name);\n                            selectInput.append(selectOption);\n                        });\n                        control.append(selectInput);\n                        dictSelectId = property.name;\n                        if (!dictNewButton) {\n                            dictNewButton = true;\n                        }\n                    }\n                });\n            }\n\n            function backendsAjax()\n            {\n                getBackends(active_version).done(function (response) {\n                    if (response.status !== false) {\n                        let backends = response.backends;\n                        selectOption  = $('<option></option>');\n                        $.each(backends, function (index, backend) {\n                            selectOption  = $('<option></option>');\n                            selectOption.attr('value', backend.name);\n                            if (backend.name === fieldValue) {\n                                selectOption.attr('selected', true);\n                            }\n                            selectOption.html(backend.name);\n                            selectInput.append(selectOption);\n                        });\n                        control.append(selectInput);\n                    }\n                });\n            }\n\n            function conditionsAjax(type)\n            {\n                getAllConditions(active_version).done(function (response) {\n                    if (response.status !== false) {\n                        let conditions = response.conditions;\n                        $.each(conditions, function (index, condition) {\n                            selectOption  = $('<option></option>');\n                            if ((condition.type === 'REQUEST' && type === 'request') ||\n                                (condition.type === 'RESPONSE' && type === 'response') ||\n                                (condition.type === 'CACHE' && type === 'cache')) {\n                                selectOption.attr('value', condition.name);\n                                if (condition.name === fieldValue) {\n                                    selectOption.attr('selected', true);\n                                }\n                                selectOption.html(condition.name);\n                                selectInput.append(selectOption);\n                            }\n                        });\n                        control.append(selectInput);\n                    }\n                });\n            }\n\n            function domainsAjax()\n            {\n                getAllDomains(active_version).done(function (response) {\n                    if (response.status !== false) {\n                        let domains = response.domains;\n                        $.each(domains, function (index, domain) {\n                            selectOption  = $('<option></option>');\n                            selectOption.attr('value', domain.name);\n                            if (domain.name === fieldValue) {\n                                selectOption.attr('selected', true);\n                            }\n                            selectOption.html(domain.name);\n                            selectInput.append(selectOption);\n                        });\n                        control.append(selectInput);\n                    }\n                });\n            }\n\n            function countriesAjax()\n            {\n                getCountries(active_version).done(function (response) {\n                    if (response.status !== false) {\n                        let countries = response.countries;\n                        $.each(countries, function (index, country) {\n                            selectOption  = $('<option></option>');\n                            selectOption.attr('value', country.value);\n                            if (country.value === fieldValue) {\n                                selectOption.attr('selected', true);\n                            }\n                            selectOption.html(country.label);\n                            selectInput.append(selectOption);\n                        });\n                        control.append(selectInput);\n                    }\n                });\n            }\n\n            function buildField()\n            {\n                span.append(property.label);\n                label.attr('for', property.name);\n                label.append(span);\n                field.append(label);\n                note.append(description);\n                control.append(note);\n                field.append(control);\n                return field;\n            }\n\n            textInput.attr('name', property.name);\n            textInput.attr('id', property.name);\n            textInput.attr('required', 'required');\n            textInput.val(fieldValue);\n\n            textAreaInput.attr('name', property.name);\n            textAreaInput.attr('id', property.name);\n            textAreaInput.attr('required', 'required');\n            textAreaInput.append(fieldValue);\n\n            selectInput.attr('name', property.name);\n            selectInput.attr('id', property.name);\n            selectInput.append(selectOption.attr('value', '').append('--Please Select--'));\n\n            switch (property.type) {\n                case 'string':\n                case 'rtime':\n                case 'path':\n                case 'url':\n                    textInput.attr('type', 'text');\n                    control.append(textInput);\n                    return buildField();\n                case 'integer':\n                case 'float':\n                    textInput.attr('type', 'number');\n                    control.append(textInput);\n                    return buildField();\n                case 'time':\n                    textInput.attr('type', 'time');\n                    control.append(textInput);\n                    return buildField();\n                case 'longstring':\n                    control.append(textAreaInput);\n                    return buildField();\n                case 'select':\n                    $.each(property.options, function (key, option) {\n                        selectOption = $('<option></option>');\n                        selectOption.attr('value', key);\n                        if (key === fieldValue) {\n                            selectOption.attr('selected', true);\n                        }\n                        selectOption.append(option);\n                        selectInput.append(selectOption);\n                    });\n                    control.append(selectInput);\n                    return buildField();\n                case 'boolean':\n                    selectInput.html('');\n\n                    selectOption  = $('<option></option>');\n                    selectOption.attr('value', 'false');\n                    selectOption.html('No');\n\n                    if (fieldValue === 'false') {\n                        selectOption.attr('selected', true);\n                    }\n                    selectInput.append(selectOption);\n\n                    selectOption  = $('<option></option>');\n                    selectOption.attr('value', 'true');\n\n                    if (fieldValue === 'true') {\n                        selectOption.attr('selected', true);\n                    }\n                    selectOption.html('Yes');\n                    selectInput.append(selectOption);\n\n                    control.append(selectInput);\n                    return buildField();\n                case 'acl':\n                    aclAjax();\n                    return buildField();\n                case 'dict':\n                    dictionaryAjax();\n                    return buildField();\n                case 'origin':\n                    backendsAjax();\n                    return buildField();\n                case 'cond-req':\n                    conditionsAjax('request');\n                    return buildField();\n                case 'cond-resp':\n                    conditionsAjax('response');\n                    return buildField();\n                case 'cond-cache':\n                    conditionsAjax('cache');\n                    return buildField();\n                case 'domain':\n                    domainsAjax();\n                    return buildField();\n                case 'iso3166-1a2':\n                    countriesAjax();\n                    return buildField();\n                default:\n                    textInput.attr('type', 'text');\n                    control.append(textInput);\n                    return buildField();\n            }\n        }\n\n        function listModules(modules)\n        {\n            let allModules = modules;\n            let html = '';\n            let nameCell;\n            let descriptionCell;\n            let checkboxCell;\n            let checkbox;\n            let checkboxDiv;\n            let checkboxLabel;\n            $.each(allModules, function (index, module) {\n                html = $('<tr></tr>');\n                nameCell = $('<td></td>');\n                descriptionCell = $('<td></td>');\n                checkboxCell = $('<td></td>');\n                checkbox = $('<input class=\"admin__control-checkbox module\" type=\"checkbox\">');\n                checkboxDiv = $('<div class=\"admin__field-option\"></div>');\n                checkboxLabel = $('<label class=\"admin__field-label\" for=\"'+module.manifest_id+'\"></label>');\n                if (module.manifest_status === '1') {\n                    html.addClass('highlighted');\n                }\n                html.append(nameCell);\n                html.append(descriptionCell);\n                html.append(checkboxCell);\n                nameCell.text(module.manifest_name);\n                nameCell.wrapInner('<b></b>');\n                descriptionCell.append(module.manifest_description);\n                checkboxCell.append(checkboxDiv);\n                checkboxDiv.append(checkbox);\n                checkboxDiv.append(checkboxLabel);\n                checkboxDiv.attr('title', module.manifest_id);\n                checkbox.attr('name', module.manifest_id);\n                checkbox.attr('id', module.manifest_id);\n                if (module.manifest_status === '1') {\n                    checkbox.attr('checked', 'checked');\n                }\n                checkboxLabel.attr('for', module.manifest_id);\n                $('#modly-all-modules-table > tbody').append(html);\n            });\n        }\n\n        function createAcl()\n        {\n            let activate_flag = (($(\"#fastly_activate_vcl\").val() === 'on') ? 'true' : false);\n            let acl_name = $('#acl_name').val();\n            let select = document.getElementById(aclSelectId);\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createAcl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_flag,\n                    'acl_name': acl_name\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        active_version = response['active_version'];\n                        let option = document.createElement('option');\n                        let text = document.createTextNode(acl_name);\n                        option.setAttribute('value', acl_name);\n                        option.setAttribute('selected', 'selected');\n                        option.appendChild(text);\n                        select.append(option);\n                        aclModal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return showErrorMessage('An error occurred while processing your request. Please try again.');\n                }\n            });\n        }\n\n        function createDictionary()\n        {\n            let activate_flag = (($(\"#fastly_activate_vcl\").val() === 'on') ? 'true' : false);\n            let dictionary_name = $('#dictionary_name').val();\n            let select = document.getElementById(dictSelectId);\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createDictionary,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_flag,\n                    'dictionary_name': dictionary_name\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        active_version = response['active_version'];\n                        let option = document.createElement('option');\n                        let text = document.createTextNode(dictionary_name);\n                        option.setAttribute('value', dictionary_name);\n                        option.setAttribute('selected', 'selected');\n                        option.appendChild(text);\n                        select.append(option);\n                        dictionaryModal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function () {\n                    return showErrorMessage('An error occurred while processing your request. Please try again.');\n                }\n            });\n        }\n\n        $('#modly_all_modules_btn').on('click', function () {\n            $.when(\n                $.ajax({\n                    type:\"GET\",\n                    url: config.getAllModulesUrl,\n                    showLoader: true\n                })\n            ).done(function (response) {\n                overlay(allModuleOptions);\n                let updateBtn = $('<button class=\"action-secondary\" id=\"fastly_manifest_btn\" type=\"button\" data-role=\"action\"></button>');\n                updateBtn.append($('<span>Refresh</span>'));\n                $('.modal-header').find(\".page-actions-buttons\").append(updateBtn);\n                $('.upload-button span').text('Save');\n\n                if (response.modules.length > 0) {\n                    listModules(response.modules);\n                } else {\n                    showWarningMessage($.mage.__(response.msg));\n                }\n            });\n        });\n\n        $('body').on('click', '#fastly_manifest_btn', function () {\n            $.when(\n                $.ajax({\n                    type: \"GET\",\n                    url: config.createManifestsUrl,\n                    showLoader: true\n                })\n            ).done(function (response) {\n                if (response.status === false) {\n                    showErrorMessage($.mage.__('Could not update the list modules.'));\n                    return;\n                }\n\n                $.when(\n                    $.ajax({\n                        type:\"GET\",\n                        url: config.getAllModulesUrl,\n                        showLoader: true\n                    })\n                ).done(function (response) {\n                    if (response.status === false) {\n                        showErrorMessage($.mage.__(response.msg));\n                    }\n\n                    if (response.modules.length > 0) {\n                        $('#modly-all-modules-table > tbody').html('');\n                        listModules(response.modules);\n                    }\n                    showSuccessMessage('The list of modules has been successfully updated.');\n                });\n            }).fail(function () {\n                showErrorMessage('An error occurred while processing your request. Please try again.');\n            });\n        });\n\n        $('body').on('click', 'button.fastly-edit-active-modules-icon', function () {\n            let module_id = $(this).data('module-id');\n            module_field = $(this);\n            let properties = [];\n            let message = $('<div class=\"message\"></div>');\n            let title = '';\n            let fieldset = $('<div class=\"admin__fieldset form-list modly-group\"></div>');\n            let groups = [];\n\n            // call getModule data function to retrieve a specific module's data\n            getModuleData(module_id).done(function (response) {\n                if (response.status !== false) {\n                    module = response.module;\n                }\n\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                }).done(function (checkService) {\n                    active_version = checkService.active_version;\n                    let next_version = checkService.next_version;\n                    let service_name = checkService.service.name;\n\n                    let isGroup = false;\n\n                    if (module.manifest_id === module_id) {\n                        message.text(module.manifest_description);\n                        title = module.manifest_name;\n                        let moduleValues = module.manifest_values;\n                        let parsedValues = '';\n                        groupName = '';\n\n                        if (moduleValues) {\n                            parsedValues = JSON.parse(moduleValues);\n                        }\n                        if (module.manifest_properties !== '') {\n                            properties = JSON.parse(module.manifest_properties);\n                            $.each(properties, function (key, property) {\n                                if (property.type === 'group') {\n                                    groupName = property.name;\n                                    isGroup = true;\n                                    if (parsedValues === '') {\n                                        parsedValues = [{\"\":\"\"}];\n                                    }\n                                    // for each group object property ie. {\"responses\": [{...}]}}\n                                    $.each(parsedValues, function (moduleIndex, groupData) {\n                                        // for each group data property\n                                        $.each(groupData, function (groupIndex, groupValues) {\n                                            // for each manifest defined config property, render fields with group values\n                                            let fieldset = $('<div class=\"admin__fieldset form-list modly-group\"></div>');\n                                            $.each(property.properties, function (propertyIndex, propertyValues) {\n                                                fieldset.append(renderFields(propertyValues, groupValues, active_version));\n                                            });\n                                            fieldset.append('<div class=\"admin__field field\"><div class=\"admin__field-label\"></div><div class=\"admin__field-control\"><button class=\"action remove-group-button\" type=\"button\" data-role=\"action\"><span>Remove group</span></button></div></div>');\n                                            fieldset.append('<div class=\"admin__field field\"><div class=\"admin__field-label\"></div><div class=\"admin__field-control\"><hr></div></div></div>');\n                                            groups.push(fieldset);\n                                        });\n                                    });\n                                } else {\n                                    fieldset.append(renderFields(property, parsedValues[0], active_version));\n                                }\n                            });\n                        }\n                    }\n\n                    if (module != null && module_id != null) {\n                        overlay(activeModuleOptions);\n                        moduleModal = modal;\n                        setServiceLabel(active_version, next_version, service_name);\n                        $('.module-messages').prepend(message);\n                        let question = $('.question');\n                        $('.modal-title').html(title);\n                        $('#module-id').val(module_id);\n\n                        if (aclNewButton === true) {\n                            createButton(aclAddNewButtonProperties);\n                        }\n\n                        if (dictNewButton === true) {\n                            createButton(dictionaryAddNewButtonProperties);\n                        }\n\n                        if (isGroup === true) {\n                            let groupBtn = '<button class=\"action-secondary group-button\" type=\"button\" data-role=\"action\"><span>Add group</span></button>';\n                            $.each(groups, function (grIndex, grData) {\n                                question.append(grData);\n                            });\n                            $('.modal-header').find(\".page-actions-buttons\").append(groupBtn);\n                            question.find('.modly-group:first').find('.remove-group-button').closest('.field').hide();\n                            $('.group-button').unbind('click').on('click', function () {\n                                question.find('.modly-group:last').clone().appendTo('.question');\n                                question.find('.modly-group:last').find('.modly-field').each(function (i, e) {\n                                    let o = $(e).find('option:first')\n                                    $(e).val($(o).val());\n                                });\n                                question.find('.modly-group:last').find('.remove-group-button').closest('.field').show();\n                                $('.remove-group-button').unbind('click').on('click', function () {\n                                    $(this).closest('.modly-group').remove();\n                                });\n                            });\n                            $('.remove-group-button').unbind('click').on('click', function () {\n                                $(this).closest('.modly-group').remove();\n                            });\n                        } else {\n                            question.append(fieldset)\n                        }\n                    }\n                });\n            });\n        });\n    }\n});\n","Fastly_Cdn/js/wafBypass.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"Magento_Ui/js/modal/prompt\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* WAF bypass state elements*/\n        let wafBypassStateSpan = $('#waf_bypass_state_span');\n        let wafBypassStateMsgSpan = $('#fastly_waf_bypass_state_message_span');\n        let wafBypass = true;\n        /* WAF bypass button messages */\n        let successWafBypassBtnMsg = $('#fastly-success-waf-bypass-button-msg');\n        let errorWafBypassBtnMsg = $('#fastly-error-waf-bypass-button-msg');\n        /* Update WAF bypass button messages */\n        let wafBypassSuccessBtnMsg = $('#fastly-update-waf-bypass-success-button-msg');\n        let wafBypassErrorBtnMsg = $('#fastly-update-waf-bypass-error-button-msg');\n\n        let active_version = serviceStatus.active_version;\n\n        wafBypassStateSpan.find('.processing').show();\n\n        /**\n         * WAF bypass modal overlay options\n         *\n         * @type {{id: string, title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let wafBypassOptions = {\n            id: 'fastly-waf-bypass-options',\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('fastly-waf-bypass-template').textContent;\n            },\n            actionOk: function () {\n                toggleWafBypass(active_version);\n            }\n        };\n\n        /**\n         * Trigger the WAF bypass status call\n         */\n        getWafBypassSetting(active_version, false).done(function (response) {\n            wafBypassStateSpan.find('.processing').hide();\n            let wafBypassStateEnabled = wafBypassStateMsgSpan.find('#waf_bypass_state_enabled');\n            let wafBypassStateDisabled = wafBypassStateMsgSpan.find('#waf_bypass_state_disabled');\n\n            if (response.status === true) {\n                if (wafBypassStateDisabled.is(\":hidden\")) {\n                    wafBypassStateEnabled.show();\n                }\n            } else if (response.status === false) {\n                if (wafBypassStateEnabled.is(\":hidden\")) {\n                    wafBypassStateDisabled.show();\n                }\n            } else {\n                wafBypassStateMsgSpan.find('#waf_bypass_state_unknown').show();\n            }\n        }).fail(function () {\n            wafBypassStateSpan.find('.processing').hide();\n            wafBypassStateMsgSpan.find('#waf_bypass_state_unknown').show();\n        });\n\n        /**\n         * Queries Fastly API to retrieve WAF bypass setting\n         *\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function getWafBypassSetting(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.checkWafBypassSettingUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Toggle waf_bypass button on click event\n         */\n        $('#fastly_waf_bypass_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorWafBypassBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getWafBypassSetting(active_version, true).done(function (response) {\n                    overlay(wafBypassOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n                    let upload_button = $('.upload-button span');\n\n                    if (response.status === false) {\n                        $('.modal-title').text($.mage.__('You are about to enable WAF Bypass'));\n                        upload_button.text('Enable');\n                    } else {\n                        $('.modal-title').text($.mage.__('You are about to disable WAF Bypass'));\n                        upload_button.text('Disable');\n                    }\n                    wafBypass = response.status;\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'))\n                });\n\n            }).fail(function () {\n                return errorWafBypassBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Update WAF bypass button on click event\n         */\n        $('#fastly_update_bypass_button').on('click', function () {\n            resetAllMessages();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.updateWafBypassUrl,\n                showLoader: true,\n                data: {\n                    'service_id': $('#system_full_page_cache_fastly_fastly_service_id').val(),\n                    'api_key': $('#system_full_page_cache_fastly_fastly_api_key').val(),\n                    'acls': $('#system_full_page_cache_fastly_fastly_web_application_firewall_waf_allow_by_acl').serializeArray(),\n                },\n                cache: false,\n                success: function (response) {\n                    if (response.status === false) {\n                        return wafBypassErrorBtnMsg.text($.mage.__('Please make sure that WAF Bypass is enabled.')).show();\n                    } else {\n                        return wafBypassSuccessBtnMsg.text($.mage.__('WAF Bypass snippet has been updated successfully.')).show();\n                    }\n                },\n                error: function () {\n                    return wafBypassErrorBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        });\n\n        /**\n         * Toggle WAF bypass VCL snippet\n         *\n         * @param active_version\n         */\n        function toggleWafBypass(active_version)\n        {\n            let activate_waf_bypass_flag = false;\n\n            if ($('#fastly_activate_waf_bypass').is(':checked')) {\n                activate_waf_bypass_flag = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.toggleWafBypassSettingUrl,\n                data: {\n                    'activate_flag': activate_waf_bypass_flag,\n                    'active_version': active_version\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        modal.modal('closeModal');\n                        let disabledOrEnabled = 'disabled';\n                        let statusStr = $.mage.__('disabled');\n\n                        if (wafBypass === false) {\n                            disabledOrEnabled = 'enabled';\n                            statusStr = $.mage.__('enabled');\n                        } else {\n                            disabledOrEnabled = 'disabled';\n                        }\n\n                        successWafBypassBtnMsg.text($.mage.__('WAF Bypass is successfully %1.').replace('%1', statusStr)).show();\n\n                        if (disabledOrEnabled === 'enabled') {\n                            wafBypassStateMsgSpan.find('#waf_bypass_state_disabled').hide();\n                            wafBypassStateMsgSpan.find('#waf_bypass_state_enabled').show();\n                        } else {\n                            wafBypassStateMsgSpan.find('#waf_bypass_state_enabled').hide();\n                            wafBypassStateMsgSpan.find('#waf_bypass_state_disabled').show();\n                        }\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n    }\n});\n","Fastly_Cdn/js/testconnection.js":"define([\n    \"jquery\",\n    \"resetAllMessages\",\n    'mage/template',\n    'mage/translate'\n], function ($, resetAllMessages) {\n    return function (config) {\n        let testSuccessBtnMsg = $('#fastly-test-success-button-msg');\n        let testErrorBtnMsg = $('#fastly-test-error-button-msg');\n\n        /**\n         * Test connection button on click event\n         */\n        $('#fastly_test_connection_button').on('click', function () {\n            resetAllMessages();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.testServiceUrl,\n                showLoader: true,\n                data: {\n                    'service_id': $('#system_full_page_cache_fastly_fastly_service_id').val(),\n                    'api_key': $('#system_full_page_cache_fastly_fastly_api_key').val()\n                },\n                cache: false,\n                success: function (response) {\n                    if (response.status === false) {\n                        return testErrorBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                    } else {\n                        return testSuccessBtnMsg.text($.mage.__('Connection to service name %1 has been successfully established. Please, save configuration and clear cache.').replace('%1', response.service_name)).show();\n                    }\n                },\n                error: function () {\n                    return testErrorBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        });\n    };\n});\n","Fastly_Cdn/js/image-optimization.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* Image optimization state elements */\n        let ioStateSpan = $('#io_state_span');\n        let ioStateMsgSpan = $('#fastly_io_state_message_span');\n        let ioSnippetStatus = true;\n        let ioServiceStatus;\n        let ioStateEnabled = ioStateMsgSpan.find('#io_state_enabled');\n        let ioStateDisabled = ioStateMsgSpan.find('#io_state_disabled');\n\n        /* Image optimization button messages */\n        let successIoBtnMsg = $('#fastly-success-io-button-msg');\n        let errorIoBtnMsg = $('#fastly-error-io-button-msg');\n        let warningIoBtnMsg = $('#fastly-warning-io-button-msg');\n\n        let successIoMsg = $('#fastly-success-io-msg');\n        let errorIoMsg = $('#fastly-error-io-msg');\n        let warningIoMsg = $('#fastly-warning-io-msg');\n\n        let ioBtn = $('#fastly_push_image_config');\n        let ioConfigBtn = $('#fastly_io_default_config');\n        let deepIoToggle = $('#system_full_page_cache_fastly_fastly_image_optimization_configuration_image_optimizations');\n\n        let active_version = serviceStatus.active_version;\n\n        ioStateSpan.find('.processing').show();\n\n        /**\n         * Image Optimization VCL snippet upload overlay options\n         *\n         * @description returns the template for the Image Optimization VCL snippet upload form\n         * @type {{id: string, title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let ioOptions = {\n            id: 'fastly-image-options',\n            title: jQuery.mage.__('Activate image optimization'),\n                content: function () {\n                return document.getElementById('fastly-image-template').textContent;\n            },\n            actionOk: function () {\n                toggleIo(active_version);\n            }\n        };\n\n        /**\n         * Image Optimization default configuration overlay options\n         *\n         * @description returns the template for the Image Optimization default configuration form\n         * @type {{id: string, title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let ioDefaultOptions = {\n            id: 'fastly-io-default-config-options',\n            title: jQuery.mage.__('Image optimization default config options'),\n                content: function () {\n                return document.getElementById('fastly-io-default-config-options-template').textContent;\n            },\n            actionOk: function () {\n                configureIo(serviceStatus.active_version);\n            }\n        };\n\n        triggerIoServiceStatusCall();\n\n        /**\n         * Enable/disable the Image Optimization buttons and display messages\n         *\n         * @description enables/disables the Image Optimization buttons depending on the Image Optimization service\n         *              status\n         */\n        function triggerIoServiceStatusCall()\n        {\n            getIoServiceStatus().done(function (response) {\n                if (response.status === false) {\n                    if (config.isIoEnabled) {\n                        deepIoToggle.removeAttrs('disabled');\n                    } else {\n                        deepIoToggle.attr('disabled', 'disabled');\n                    }\n                    ioConfigBtn.addClass('disabled');\n                } else {\n                    ioConfigBtn.removeClass('disabled');\n                }\n\n                ioServiceStatus = response.status;\n                triggerIoSnippetStatusCall();\n            });\n        }\n\n        /**\n         * Trigger the Image Optimization VCL snippet status call\n         *\n         * @description sets and displays the status of the Image Optimization VCL snippet\n         */\n        function triggerIoSnippetStatusCall()\n        {\n            getIoSnippetStatus(serviceStatus.active_version, false).done(function (response) {\n                ioStateSpan.find('.processing').hide();\n                ioSnippetStatus = response.status;\n\n                if (ioSnippetStatus === true) {\n                    if (ioStateDisabled.is(\":hidden\")) {\n                        ioStateEnabled.show();\n                    }\n\n                    if (ioServiceStatus === true) {\n                        ioBtn.removeClass('disabled');\n                        warningIoBtnMsg.hide();\n                    } else {\n                        warningIoBtnMsg.text(\n                            $.mage.__(\n                                'Please contact your sales rep or send an email to support@fastly.com to request image optimization activation for your Fastly service.'\n                            )\n                        ).show();\n                    }\n                } else if (ioSnippetStatus === false) {\n                    if (ioStateEnabled.is(\":hidden\")) {\n                        ioStateDisabled.show();\n                    }\n\n                    if (ioServiceStatus === true) {\n                        ioBtn.removeClass('disabled');\n                        warningIoBtnMsg.hide();\n                    } else {\n                        ioBtn.addClass('disabled');\n                        warningIoBtnMsg.text(\n                            $.mage.__(\n                                'Please contact your sales rep or send an email to support@fastly.com to request image optimization activation for your Fastly service.'\n                            )\n                        ).show();\n                    }\n                } else {\n                    ioStateMsgSpan.find('#io_state_unknown').show();\n                }\n            }).fail(function () {\n                ioStateSpan.find('.processing').hide();\n                ioStateMsgSpan.find('#io_state_unknown').show();\n            });\n        }\n\n        /**\n         * Get the Image Optimization snippet status\n         *\n         * @description queries the Fastly API to retrieve Image Optimization VCL snippet status\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function getIoSnippetStatus(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.checkImageSettingUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Get the Image Optimization service status\n         *\n         * @description queries the Fastly API to check if Image Optimization is enabled for the service\n         * @returns {*}\n         */\n        function getIoServiceStatus()\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.checkFastlyIoSettingUrl\n            });\n        }\n\n        /**\n         * Get the Image Optimization default configuration\n         *\n         * @description queries the Fastly API to retrieve the Image Optimization default configuration\n         * @param active_version\n         */\n        function getIoDefaultConfig(active_version)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.listIoDefaultConfigOptions,\n                showLoader: true,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Upload/remove the Image Optimization VCL snippet\n         *\n         * @description uploads/removes the Image Optimization snippet and shows the new status and messages\n         * @param active_version\n         */\n        function toggleIo(active_version)\n        {\n            let activate_image_flag = false;\n            let image_quality_flag = false;\n\n            if ($('#fastly_activate_image_vcl').is(':checked')) {\n                activate_image_flag = true;\n            }\n\n            if ($('#fastly_image_quality_flag').is(':checked')) {\n                image_quality_flag = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.toggleImageSettingUrl,\n                data: {\n                    'activate_flag': activate_image_flag,\n                    'image_quality_flag': image_quality_flag,\n                    'active_version': active_version\n                },\n                showLoader: true\n            }).done(function (response) {\n                if (response.status === true) {\n                    let toggled;\n                    let statusStr;\n                    modal.modal('closeModal');\n\n                    if (ioSnippetStatus === false) {\n                        toggled = 'enabled';\n                        statusStr = $.mage.__('enabled');\n                        ioSnippetStatus = true;\n                    } else {\n                        toggled = 'disabled';\n                        statusStr = $.mage.__('disabled');\n                        ioSnippetStatus = false;\n                    }\n\n                    successIoBtnMsg.text($.mage.__('The Image Optimization snippet has been successfully %1.').replace('%1', toggled)).show();\n                    $('.request_imgopt_state_span').hide();\n\n                    if (ioSnippetStatus === true) {\n                        ioStateMsgSpan.find('#imgopt_state_disabled').hide();\n                        ioStateMsgSpan.find('#imgopt_state_enabled').show();\n                        ioStateEnabled.show();\n                        ioStateDisabled.hide();\n                        if (ioServiceStatus === true) {\n                            ioBtn.removeClass('disabled');\n                        }\n                    } else {\n                        ioStateMsgSpan.find('#imgopt_state_enabled').hide();\n                        ioStateMsgSpan.find('#imgopt_state_disabled').show();\n                        ioStateEnabled.hide();\n                        ioStateDisabled.show();\n                        if (ioServiceStatus !== true) {\n                            ioBtn.addClass('disabled');\n                        }\n                    }\n                } else {\n                    resetAllMessages();\n                    showErrorMessage(response.msg);\n                }\n            });\n        }\n\n        /**\n         * Update Image Optimization Default Configuration\n         *\n         * @description updates the Image Optimization configuration default values\n         */\n        function configureIo()\n        {\n            let activate_vcl = false;\n\n            if ($('#fastly_activate_io_vcl').is(':checked')) {\n                activate_vcl = true;\n            }\n            let webp = $('input[name=webp-radio]:checked').val();\n            let webp_quality = $('#webp_quality').val();\n            let jpeg_type = $('input[name=jpeg-format]:checked').val();\n            let jpeg_quality = $('#jpeg_quality').val();\n            let upscale = $('input[name=upscaling-radio]:checked').val();\n            let resize_filter = $('input[name=resize-filter-radio]:checked').val();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.configureIoUrl,\n                data: {\n                    'active_version': active_version,\n                    'activate_flag': activate_vcl,\n                    'webp': webp,\n                    'webp_quality': webp_quality,\n                    'jpeg_type': jpeg_type,\n                    'jpeg_quality': jpeg_quality,\n                    'upscale': upscale,\n                    'resize_filter': resize_filter\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        $('#fastly-success-io-default-config-btn-msg').text($.mage.__(\n                            'Image optimization default configuration is successfully updated.'\n                        )).show();\n                        active_version = response.active_version;\n                        modal.modal('closeModal');\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                },\n                error: function (msg) {\n                    // error handling\n                }\n            });\n        }\n\n        /**\n         * Image Optimization configuration button click event\n         *\n         * @description checks the Fastly service status and populates the Image Optimization configuration fields\n         */\n        ioConfigBtn.on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorIoMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                overlay(ioDefaultOptions);\n                setServiceLabel(active_version, next_version, service_name);\n                $('.upload-button span').text('Update');\n\n                getIoDefaultConfig(active_version).done(function (response) {\n                    if (response.status === true) {\n                        let ioDefaultConfig = response.io_options;\n\n                        setServiceLabel(active_version, next_version, service_name);\n\n                        if (ioDefaultConfig.webp === false) {\n                            $('#webp-no').prop('checked', true);\n                        } else {\n                            $('#webp-yes').prop('checked', true);\n                        }\n\n                        $('#webp_quality').val(ioDefaultConfig.webp_quality);\n\n                        if (ioDefaultConfig.jpeg_type === 'auto') {\n                            $('#jpeg-format-auto').prop('checked', true);\n                        } else if (ioDefaultConfig.jpeg_type === 'baseline') {\n                            $('#jpeg-format-baseline').prop('checked', true);\n                        } else {\n                            $('#jpeg-format-progressive').prop('checked', true);\n                        }\n\n                        $('#jpeg_quality').val(ioDefaultConfig.jpeg_quality);\n\n                        if (ioDefaultConfig.upscale === false) {\n                            $('#upscaling-no').prop('checked', true);\n                        } else {\n                            $('#upscaling-yes').prop('checked', true);\n                        }\n\n                        if (ioDefaultConfig.resize_filter === 'lanczos3') {\n                            $('#resize-filter-lancsoz3').prop('checked', true);\n                        } else if (ioDefaultConfig.resize_filter === 'lanczos2') {\n                            $('#resize-filter-lancsoz2').prop('checked', true);\n                        } else if (ioDefaultConfig.resize_filter === 'bicubic') {\n                            $('#resize-filter-bicubic').prop('checked', true);\n                        } else if (ioDefaultConfig.resize_filter === 'bilinear') {\n                            $('#resize-filter-bilinear').prop('checked', true);\n                        } else {\n                            $('#resize-filter-nearest').prop('checked', true);\n                        }\n                    }\n                });\n            });\n        });\n\n        /**\n         * Image Optimization VCL snippet upload button click event\n         *\n         * @description checks the Fastly service status and displays the Image Optimization VCL snippet upload overlay\n         */\n        ioBtn.on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorIoBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getIoSnippetStatus(active_version, true).done(function (response) {\n                    overlay(ioOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n\n                    if (response.status === false) {\n                        $('.modal-title').text($.mage.__('You are about to enable the Fastly Image Optimization snippet'));\n                    } else {\n                        $('.modal-title').text($.mage.__('You are about to remove the Fastly Image Optimization snippet'));\n                    }\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'))\n                });\n\n            }).fail(function () {\n                return errorIoBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n    }\n});\n","Fastly_Cdn/js/blocking.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    \"Magento_Ui/js/modal/prompt\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, prompt) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        /* Blocking state elements*/\n        let blockingStateSpan = $('#blocking_state_span');\n        let blockingStateMsgSpan = $('#fastly_blocking_state_message_span');\n        let blocking = true;\n        /* Blocking button messages */\n        let successBlockingBtnMsg = $('#fastly-success-blocking-button-msg');\n        let errorBlockingBtnMsg = $('#fastly-error-blocking-button-msg');\n        /* Update Blocking button messages */\n        let blockingSuccessBtnMsg = $('#fastly-update-blocking-success-button-msg');\n        let blockingErrorBtnMsg = $('#fastly-update-blocking-error-button-msg');\n        let blockingWarningBtnMsg = $('#fastly-update-blocking-warning-button-msg');\n        /* <select> elements */\n        let blockingTypeSelect = $('#system_full_page_cache_fastly_fastly_blocking_blocking_type');\n        let countryListSelect = $('#system_full_page_cache_fastly_fastly_blocking_block_by_country');\n        let aclSelect = $('#system_full_page_cache_fastly_fastly_blocking_block_by_acl');\n\n        countryListSelect.add(aclSelect).on('change', function () {\n            blockingWarningBtnMsg.text($.mage.__('Changes not active until Update Blocking Configuration is clicked')).show();\n        });\n\n\n        let active_version = serviceStatus.active_version;\n\n        blockingStateSpan.find('.processing').show();\n\n        /**\n         * Blocking modal overlay options\n         *\n         * @type {{id: string, title: *, content: (function(): string), actionOk: actionOk}}\n         */\n        let blockingOptions = {\n            id: 'fastly-blocking-options',\n            title: jQuery.mage.__(' '),\n                content: function () {\n                return document.getElementById('fastly-blocking-template').textContent;\n            },\n            actionOk: function () {\n                toggleBlocking(active_version);\n            }\n        };\n\n        /**\n         * Trigger the Blocking status call\n         */\n        getBlockingSetting(active_version, false).done(function (response) {\n            blockingStateSpan.find('.processing').hide();\n            let blockingStateEnabled = blockingStateMsgSpan.find('#blocking_state_enabled');\n            let blockingStateDisabled = blockingStateMsgSpan.find('#blocking_state_disabled');\n\n            if (response.status === true) {\n                if (blockingStateDisabled.is(\":hidden\")) {\n                    blockingStateEnabled.show();\n                }\n            } else if (response.status === false) {\n                if (blockingStateEnabled.is(\":hidden\")) {\n                    blockingStateDisabled.show();\n                }\n            } else {\n                blockingStateMsgSpan.find('#blocking_state_unknown').show();\n            }\n        }).fail(function () {\n            blockingStateSpan.find('.processing').hide();\n            blockingStateMsgSpan.find('#blocking_state_unknown').show();\n        });\n\n        /**\n         * Queries Fastly API to retrieve blocking setting\n         *\n         * @param active_version\n         * @param loaderVisibility\n         * @returns {*}\n         */\n        function getBlockingSetting(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.checkBlockingSettingUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        /**\n         * Toggle Blocking button on click event\n         */\n        $('#fastly_blocking_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorBlockingBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n                let next_version = service.next_version;\n                let service_name = service.service.name;\n\n                getBlockingSetting(active_version, true).done(function (response) {\n                    overlay(blockingOptions);\n                    setServiceLabel(active_version, next_version, service_name);\n                    let upload_button = $('.upload-button span');\n\n                    if (response.status === false) {\n                        $('.modal-title').text($.mage.__('You are about to enable Blocking'));\n                        upload_button.text('Enable');\n                    } else {\n                        $('.modal-title').text($.mage.__('You are about to disable Blocking'));\n                        upload_button.text('Disable');\n                    }\n                    blocking = response.status;\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'))\n                });\n\n            }).fail(function () {\n                return errorBlockingBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        /**\n         * Update Blocking button on click event\n         */\n        $('#fastly_update_blocking_button').on('click', function () {\n            resetAllMessages();\n\n            $.ajax({\n                type: \"POST\",\n                url: config.updateBlockingUrl,\n                showLoader: true,\n                data: {\n                    'service_id': $('#system_full_page_cache_fastly_fastly_service_id').val(),\n                    'api_key': $('#system_full_page_cache_fastly_fastly_api_key').val(),\n                    'acls': $('#system_full_page_cache_fastly_fastly_blocking_block_by_acl').serializeArray(),\n                    'countries': $('#system_full_page_cache_fastly_fastly_blocking_block_by_country').serializeArray(),\n                    'blocking_type': $('#system_full_page_cache_fastly_fastly_blocking_blocking_type').val()\n                },\n                cache: false,\n                success: function (response) {\n                    if (response.status === false) {\n                        return blockingErrorBtnMsg.text($.mage.__(response.msg)).show();\n                    } else {\n                        return blockingSuccessBtnMsg.text($.mage.__('Blocking snippet has been updated successfully.')).show();\n                    }\n                },\n                error: function () {\n                    return blockingErrorBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n                }\n            });\n        });\n\n        /**\n         * Blocking Type on change event\n         */\n        $('#system_full_page_cache_fastly_fastly_blocking_blocking_type').on('change', function () {\n            if (this.value === '1') {\n                prompt({\n                    title: 'Blocking Type: Allowlist',\n                    content: 'Turning on this feature will block ALL access except for users from designated countries/ACLs. ' +\n                        'Please make sure you as the admin user are in one of the lists since you WILL lose access to the admin pages. ' +\n                        'Only way to fix it is via Fastly management UI. Please type \"I ACKNOWLEDGE\"' +\n                        ' in the box below if you are sure you want to do this.',\n                    actions: {\n                        confirm: function (input) {\n                            if (input !== 'I ACKNOWLEDGE') {\n                                $('#system_full_page_cache_fastly_fastly_blocking_blocking_type').val('0');\n                            }\n                            blockingWarningBtnMsg.text($.mage.__('Please Update Blocking Configuration')).show();\n                        },\n                        cancel: function () {\n                            $('#system_full_page_cache_fastly_fastly_blocking_blocking_type').val('0');\n                        },\n                        always: function () {}\n                    }\n                });\n            }\n        });\n\n        /**\n         * Toggle Blocking VCL snippet\n         *\n         * @param active_version\n         */\n        function toggleBlocking(active_version)\n        {\n            let activate_blocking_flag = false;\n\n            if ($('#fastly_activate_blocking').is(':checked')) {\n                activate_blocking_flag = true;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                url: config.toggleBlockingSettingUrl,\n                data: {\n                    'activate_flag': activate_blocking_flag,\n                    'active_version': active_version,\n                    'acls': $('#system_full_page_cache_fastly_fastly_blocking_block_by_acl').serializeArray(),\n                    'countries': $('#system_full_page_cache_fastly_fastly_blocking_block_by_country').serializeArray(),\n                    'blocking_type': $('#system_full_page_cache_fastly_fastly_blocking_blocking_type').val()\n                },\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        modal.modal('closeModal');\n                        let disabledOrEnabled = 'disabled';\n                        let statusStr = $.mage.__('disabled');\n\n                        if (blocking === false) {\n                            disabledOrEnabled = 'enabled';\n                            statusStr = $.mage.__('enabled');\n                        } else {\n                            disabledOrEnabled = 'disabled';\n                        }\n\n                        successBlockingBtnMsg.text($.mage.__('Blocking is successfully %1.').replace('%1', statusStr)).show();\n\n                        if (disabledOrEnabled === 'enabled') {\n                            blockingStateMsgSpan.find('#blocking_state_disabled').hide();\n                            blockingStateMsgSpan.find('#blocking_state_enabled').show();\n                        } else {\n                            blockingStateMsgSpan.find('#blocking_state_enabled').hide();\n                            blockingStateMsgSpan.find('#blocking_state_disabled').show();\n                        }\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n    }\n});\n","Fastly_Cdn/js/export.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate',\n    'importExportRenderer'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage, translate, importExportRenderer) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n        let successExportBtnMsg = $('#fastly-success-export-button-msg');\n        let errorExportBtnMsg = $('#fastly-error-export-button-msg');\n\n        let active_version = serviceStatus.active_version;\n        let customSnippets;\n        let acls;\n        let dictionaries;\n        let activeModules;\n        let adminTimeout = $(\"#system_full_page_cache_fastly_fastly_advanced_configuration_admin_path_timeout\").val();\n\n\n        let exportOptions = {\n            id: 'fastly-export-options',\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('fastly-export-template').textContent;\n            },\n            actionOk: function () {\n                fastlyExport(active_version);\n            }\n        };\n\n        $('#fastly_export').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorExportBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n\n                getExportData(active_version, true).done(function (response) {\n                    overlay(exportOptions);\n                    $('.modal-title').text($.mage.__('Export Edge ACLs, Edge Dictionaries, Active Edge Modules and Custom Snippets'));\n                    $('.upload-button span').text('Export');\n                    let html = '';\n                    customSnippets = response.custom_snippets;\n                    dictionaries = response.dictionaries;\n                    acls = response.acls;\n                    activeModules = response.active_modules;\n\n                    html += importExportRenderer.renderEdgeAcls(acls);\n\n                    html += importExportRenderer.renderEdgeDisctionaries(dictionaries);\n\n                    html += importExportRenderer.renderCustomSnippets(customSnippets);\n\n                    html += importExportRenderer.renderActiveEdgeModules(activeModules);\n\n                    html += `<div class=\"admin__field field\">\n                        <div class=\"admin__field-control export-field\">\n                            <label class=\"admin__field-label\"><b>Advanced Configuration</b></label>\n                        </div>\n                    </div>`;\n\n                    html += importExportRenderer.renderAdminPathTimeout(adminTimeout);\n\n                    $('.question').html(html);\n                });\n            });\n        });\n\n        function getExportData(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getExportDataUrl,\n                showLoader: loaderVisibility\n            });\n        }\n\n        function fastlyExport()\n        {\n            let checkedAcls = {};\n            $('.export-acl:checked').each(function () {\n                let aclId = $(this).attr('id');\n                $.each(acls, function (index, acl) {\n                    if (aclId === acl.id) {\n                        checkedAcls[acl.id] = acl.name\n                    }\n                });\n            });\n\n            let checkedDictionaries = {};\n            $('.export-dictionary:checked').each(function () {\n                let dictionaryId = $(this).attr('id');\n                $.each(dictionaries, function (index, dictionary) {\n                    if (dictionaryId === dictionary.id) {\n                        checkedDictionaries[dictionary.id] = dictionary.name\n                    }\n                });\n            });\n\n            let checkedCustomSnippets = {};\n            $('.export-custom-snippet:checked').each(function () {\n                let snippetName = $(this).attr('id');\n                $.each(customSnippets, function (index, content) {\n                    if (snippetName === index) {\n                        checkedCustomSnippets[index] = content;\n                    }\n                });\n            });\n\n            let checkedActiveModules = {};\n            $('.export-active-modules:checked').each(function () {\n                let module_id = $(this).attr('id');\n                $.each(activeModules, function (index, content) {\n                    if (module_id === content.manifest_id) {\n                        checkedActiveModules[index] = content;\n                    }\n                });\n            });\n\n            let adminTimeoutPath;\n            if ($('.export-admin-timeout').prop('checked')) {\n                adminTimeoutPath = adminTimeout;\n            }\n\n\n            if ($.isEmptyObject(checkedAcls) && $.isEmptyObject(checkedDictionaries) && $.isEmptyObject(checkedCustomSnippets\n                && $.isEmptyObject(checkedActiveModules))) {\n                resetAllMessages();\n                showErrorMessage('At least one item must be selected.');\n                return;\n            }\n            $.ajax({\n                type: \"POST\",\n                url: config.exportDataUrl,\n                showLoader: true,\n                data: {\n                    'acls': checkedAcls,\n                    'dictionaries': checkedDictionaries,\n                    'custom_snippets': checkedCustomSnippets,\n                    'active_modules': checkedActiveModules,\n                    'admin_timeout': adminTimeoutPath\n                }\n            }).done(function (response) {\n                if (response !== false) {\n                    $('#fastly-export-form').submit();\n                    modal.modal('closeModal');\n                    return successExportBtnMsg.text($.mage.__('Successfully exported.')).show();\n                } else {\n                    resetAllMessages();\n                    showErrorMessage(response.msg);\n                }\n            });\n        }\n\n        $('body').on('click', '.acl-items-btn', function () {\n            let acl_id = $(this).closest('.admin__field-option').find(\".admin__control-checkbox\").attr('id');\n            let acl_field = $(this).parents('div.field');\n            $.ajax({\n                type: \"POST\",\n                url: config.getAclItems,\n                showLoader: true,\n                data: {'acl_id': acl_id}\n            }).done(function (response) {\n                if (response.status !== false) {\n                    let acls = [];\n                    $.each(response.aclItems, function (index, item) {\n                        acls.push(importExportRenderer.stringifyAclDetail(index, item));\n                    });\n                    $('.'+acl_id).remove();\n                    let itemsHtml = importExportRenderer.renderDetails(acl_id, acls)\n                    acl_field.after(itemsHtml);\n                    return;\n                }\n\n                modal.modal('closeModal');\n                return errorExportBtnMsg.text($.mage.__(response.msg)).show();\n            });\n        });\n\n        $('body').on('click', '.dictionary-items-btn', function () {\n            let dictionary_id = $(this).closest('.admin__field-option').find(\".admin__control-checkbox\").attr('id');\n            let dictionary_field = $(this).parents('div.field');\n            $.ajax({\n                type: \"POST\",\n                url: config.getDictionaryItems,\n                showLoader: true,\n                data: {'dictionary_id': dictionary_id}\n            }).done(function (response) {\n                if (response.status !== false) {\n                    let dictionaries = [];\n                    $.each(response.dictionaryItems, function (index, item) {\n                        dictionaries.push(importExportRenderer.stringifyDictionaryDetail(index, item));\n                    });\n                    $('.'+dictionary_id).remove();\n                    let itemsHtml = importExportRenderer.renderDetails(dictionary_id, dictionaries)\n                    dictionary_field.after(itemsHtml);\n                    return;\n                }\n\n                modal.modal('closeModal');\n                return errorExportBtnMsg.text($.mage.__(response.msg)).show();\n            });\n        });\n    }\n});","Fastly_Cdn/js/maintenance.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        let suStateSpan = $('#su_state_span');\n        let suStateMsgSpan = $('#su_state_message_span');\n        let superUsers = true;\n\n        let successSuBtnMsg = $('#fastly-success-su-button-msg');\n        let errorSuBtnMsg = $('#fastly-error-su-button-msg');\n        let successUpdateSuBtnMsg = $('#fastly-success-update-su-button-msg');\n        let errorUpdateSuBtnMsg = $('#fastly-error-update-su-button-msg');\n\n        let active_version = serviceStatus.active_version;\n\n        suStateSpan.find('.processing').show();\n\n        let suOptions = {\n            id: 'fastly-su-options',\n            title: jQuery.mage.__(' '),\n            content: function () {\n                return document.getElementById('fastly-su-template').textContent;\n            },\n            actionOk: function () {\n                toggleSu();\n            }\n        };\n\n        getSuSetting(active_version).done(function (response) {\n            suStateSpan.find('.processing').hide();\n            let suStateEnabled = suStateMsgSpan.find('#su_state_enabled');\n            let suStateDisabled = suStateMsgSpan.find('#su_state_disabled');\n\n            if (response.status === true) {\n                if (suStateDisabled.is(\":hidden\")) {\n                    suStateEnabled.show();\n                }\n            } else if (response.status === false) {\n                if (suStateEnabled.is(\":hidden\")) {\n                    suStateDisabled.show();\n                }\n            } else {\n                suStateMsgSpan.find('#su_state_unknown').show();\n            }\n        }).fail(function () {\n            suStateSpan.find('.processing').hide();\n            suStateMsgSpan.find('#su_state_unknown').show();\n        });\n\n        $('#update_su_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorSuBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                $.ajax({\n                    type: \"POST\",\n                    url: config.updateSuIpsUrl,\n                    showLoader: true,\n                    data: {'active_version': active_version}\n                }).done(function (response) {\n                    resetAllMessages();\n                    if (response.status === false) {\n                        return errorUpdateSuBtnMsg.text($.mage.__(response.msg)).show();\n                    } else {\n                        return successUpdateSuBtnMsg.text($.mage.__('Admin IPs list successfully updated')).show();\n                    }\n                });\n            });\n        });\n\n        $('#su_button').on('click', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            resetAllMessages();\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (service) {\n                if (service.status === false) {\n                    return errorSuBtnMsg.text($.mage.__('Please check your Service ID and API token and try again.')).show();\n                }\n\n                active_version = service.active_version;\n\n                getSuSetting(active_version, true).done(function (response) {\n                    overlay(suOptions);\n                    let upload_button = $('.upload-button span');\n\n                    if (response.status === false) {\n                        $('.modal-title').text($.mage.__('You are about to enable Maintenance Mode'));\n                        upload_button.text('Enable');\n                    } else {\n                        $('.modal-title').text($.mage.__('You are about to disable Maintenance Mode'));\n                        upload_button.text('Disable');\n                    }\n                    superUsers = response.status;\n                }).fail(function () {\n                    showErrorMessage($.mage.__('An error occurred while processing your request. Please try again.'))\n                });\n\n\n            }).fail(function () {\n                return errorSuBtnMsg.text($.mage.__('An error occurred while processing your request. Please try again.')).show();\n            });\n        });\n\n        function getSuSetting(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"POST\",\n                url: config.checkSuSettingUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        function toggleSu()\n        {\n            $.ajax({\n                type: \"GET\",\n                url: config.toggleSuSettingUrl,\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        modal.modal('closeModal');\n                        let disabledOrEnabled = 'disabled';\n                        let statusStr = $.mage.__('disabled');\n\n                        if (superUsers === false) {\n                            disabledOrEnabled = 'enabled';\n                            statusStr = $.mage.__('enabled');\n                        } else {\n                            disabledOrEnabled = 'disabled';\n                        }\n                        successSuBtnMsg.text($.mage.__('Maintenance Mode successfully %1.').replace('%1', statusStr)).show();\n                        $('.su_state_span').hide();\n\n                        if (disabledOrEnabled === 'enabled') {\n                            suStateMsgSpan.find('#su_state_disabled').hide();\n                            suStateMsgSpan.find('#su_state_enabled').show();\n                        } else {\n                            suStateMsgSpan.find('#su_state_enabled').hide();\n                            suStateMsgSpan.find('#su_state_disabled').show();\n                        }\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n    }\n});\n","Fastly_Cdn/js/init.js":"define([\n    \"jquery\",\n    'mage/template',\n    'mage/translate'\n], function ($) {\n    return function (config) {\n\n        $(document).ready(function () {\n            let allOpen = '';\n            let allActive = '';\n            let active_version = '';\n            let next_version = '';\n            let fastlyFieldset = $('#system_full_page_cache_fastly');\n            let isAlreadyConfigured = true;\n            let serviceStatus = false;\n\n            /**\n             * Fastly Configuration head on click event\n             */\n            $('#system_full_page_cache_fastly-head').one('click', function () {\n                if ($(this).attr(\"class\") === \"open\") {\n                    init();\n                    if (allOpen !== '') {\n                        allOpen.trigger('click');\n                    }\n                } else {\n                    allOpen = fastlyFieldset.find(\".open\");\n                    allActive = fastlyFieldset.find(\".active\");\n                    allOpen.removeClass(\"open\").removeClass(\"open\");\n                    allActive.find(\".active\").removeClass(\"active\");\n                }\n            });\n\n            $('#system_full_page_cache_fastly_edge_modules-head').one('click', function () {\n                modlyInit();\n            });\n\n            /**\n             * Initializes the Fastly Configuration\n             */\n            function init()\n            {\n\n                $('body').loader('show');\n                $.ajax({\n                    type: \"GET\",\n                    url: config.isAlreadyConfiguredUrl,\n                }).done(function (response) {\n                    if (response.status === true) {\n                        isAlreadyConfigured = response.flag;\n                    }\n                });\n\n                let advancedConfigurationHead = $('#system_full_page_cache_fastly_fastly_advanced_configuration-head');\n                let blockingConfigurationHead = $('#system_full_page_cache_fastly_fastly_blocking-head');\n                let imageOptimizationConfigurationHead = $('#system_full_page_cache_fastly_fastly_image_optimization_configuration-head');\n                let basicAuthenticationHead = $('#system_full_page_cache_fastly_fastly_basic_auth-head');\n                let edgeDictionariesHead = $('#system_full_page_cache_fastly_fastly_edge_dictionaries-head');\n                let edgeAclHead = $('#system_full_page_cache_fastly_fastly_edge_acl-head');\n                let customSyntheticPagesHead = $('#system_full_page_cache_fastly_fastly_error_maintenance_page-head');\n                let backendsHead = $('#system_full_page_cache_fastly_fastly_backend_settings-head');\n                let logEndpointsHead = $('#system_full_page_cache_fastly_fastly_tools_logging-head');\n                let customSnippetsHead = $('#system_full_page_cache_fastly_fastly_custom_snippets-head');\n                let webApplicationFirewallHead = $('#system_full_page_cache_fastly_fastly_web_application_firewall-head');\n                let maintenanceSupportHead = $('#system_full_page_cache_fastly_fastly_maintenance_support-head');\n                let domainsHead = $('#system_full_page_cache_fastly_fastly_domains-head');\n                let rateLimitingHead = $('#system_full_page_cache_fastly_fastly_rate_limiting_settings-head');\n                let importExportHead = $('#system_full_page_cache_fastly_fastly_import_export-head');\n                let versionHistoryHead = $('#system_full_page_cache_fastly_fastly_tools-head');\n                $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_owasp_restricted_extensions').hide();\n                $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_owasp_allowed_methods').hide();\n                $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_waf_bypass').hide();\n                $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_update_waf_bypass').hide();\n                $('#row_system_full_page_cache_fastly_fastly_web_application_firewall_waf_allow_by_acl').hide();\n\n                requirejs(['fastlyTestConnection'], function (fastlyTestConnection) {\n                    fastlyTestConnection(config);\n                });\n\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                }).done(function (checkService) {\n\n                    if (checkService.status !== false) {\n                        $('body').loader('hide');\n                        active_version = checkService.active_version;\n                        next_version = checkService.next_version;\n                        serviceStatus = checkService;\n\n                        requirejs(['uploadVcl'], function (uploadVcl) {\n                            uploadVcl(config, serviceStatus, isAlreadyConfigured);\n                        });\n\n                        advancedConfigurationHead.one('click', function () {\n                            requirejs(['tls'], function (tls) {\n                                tls(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        blockingConfigurationHead.one('click', function () {\n                            requirejs(['blocking'], function (blocking) {\n                                blocking(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        imageOptimizationConfigurationHead.one('click', function () {\n                            requirejs(['imageOptimization'], function (imageOptimization) {\n                                imageOptimization(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        basicAuthenticationHead.one('click', function () {\n                            requirejs(['basicAuthentication'], function (basicAuthentication) {\n                                basicAuthentication(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        edgeDictionariesHead.one('click', function () {\n                            requirejs(['dictionaries'], function (dictionaries) {\n                                dictionaries(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        edgeAclHead.one('click', function () {\n                            requirejs(['acl'], function (acl) {\n                                acl(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        customSyntheticPagesHead.one('click', function () {\n                            requirejs(['customSyntheticPages'], function (customSyntheticPages) {\n                                customSyntheticPages(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        backendsHead.one('click', function () {\n                            requirejs(['backends'], function (backends) {\n                                backends(config, serviceStatus, isAlreadyConfigured);\n                            })\n                        });\n\n                        logEndpointsHead.one('click', function () {\n                            requirejs(['logEndpoints'], function (logEndpoints) {\n                                logEndpoints(config, serviceStatus, isAlreadyConfigured);\n                            })\n                        });\n\n                        customSnippetsHead.one('click', function () {\n                            requirejs(['customSnippets'], function (customSnippets) {\n                                customSnippets(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        webApplicationFirewallHead.one('click', function () {\n                            requirejs(['waf'], function (waf) {\n                                waf(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        domainsHead.one('click', function () {\n                            requirejs(['domains'], function (domains) {\n                                domains(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        rateLimitingHead.one('click', function () {\n                            requirejs(['rateLimiting'], function (rateLimiting) {\n                                rateLimiting(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        maintenanceSupportHead.one('click', function () {\n                            requirejs(['maintenance'], function (maintenance) {\n                                maintenance(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n\n                        versionHistoryHead.one('click', function () {\n\n                            requirejs(['versionHistory'], function (versionHistory) {\n                                versionHistory(config, serviceStatus, isAlreadyConfigured);\n                            });\n                            requirejs(['fastlyImport'], function (fastlyImport) {\n                                fastlyImport(config, serviceStatus, isAlreadyConfigured);\n                            });\n                            requirejs(['fastlyExport'], function (fastlyExport) {\n                                fastlyExport(config, serviceStatus, isAlreadyConfigured);\n                            });\n                        });\n                    } else {\n                        $(\".processing\").hide();\n                        $(\".state_unknown\").show();\n                        $(\".list-loading\").hide();\n                    }\n                })\n            }\n\n            function modlyInit()\n            {\n                requirejs(['modly'], function (uploadVcl) {\n                    uploadVcl(config, serviceStatus, isAlreadyConfigured);\n                });\n            }\n        });\n    }\n});","Fastly_Cdn/js/log-endpoints.js":"define([\n    \"jquery\",\n    \"setServiceLabel\",\n    \"overlay\",\n    \"resetAllMessages\",\n    \"showErrorMessage\",\n    'mage/translate',\n    'mage/validation'\n], function ($, setServiceLabel, overlay, resetAllMessages, showErrorMessage) {\n    return function (config, serviceStatus, isAlreadyConfigured) {\n\n        let active_version = serviceStatus.active_version;\n        let logEndpointModal;\n        let conditionModal;\n        let conditions;\n\n        let createLogEndpointOptions = {\n            title: jQuery.mage.__('Create Endpoint'),\n            endpointType: '',\n            content: function () {\n                return document.getElementById('fastly-create-log-endpoint-template-' + this.endpointType).textContent;\n            },\n            actionOk: function () {\n                createLogEndpoint(active_version);\n            }\n        };\n\n        let updateLogEndpointOptions = {\n            title: jQuery.mage.__('Update Endpoint'),\n            endpointType: '',\n            content: function () {\n                return document.getElementById('fastly-create-log-endpoint-template-' + this.endpointType).textContent;\n            },\n            actionOk: function () {\n                updateLogEndpoint(active_version);\n            }\n        };\n\n        let createResponseConditionOptions = {\n            title: jQuery.mage.__('Create a new response condition'),\n            content: function () {\n                return document.getElementById('fastly-create-condition-template').textContent;\n            },\n            actionOk: function () {\n                createCondition();\n            },\n        };\n\n        // initialize log endpoint table\n        getLogEndpoints(active_version, false).done(function (response) {\n            $('.loading-log-endpoints').hide();\n            if (response !== false) {\n                if (response.endpoints.length > 0) {\n                    processLogEndpoints(response.endpoints);\n                } else {\n                    $('.no-log-endpoints').show();\n                }\n            }\n        });\n\n        function getLogEndpoint(active_version, type, name, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.fetchLogEndpointUrl,\n                showLoader: loaderVisibility,\n                data: {active_version, type, name}\n            });\n        }\n\n        function getLogEndpoints(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.fetchAllLogEndpointsUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        function getResponseConditions(active_version, loaderVisibility)\n        {\n            return $.ajax({\n                type: \"GET\",\n                url: config.getResponseConditionsUrl,\n                showLoader: loaderVisibility,\n                data: {'active_version': active_version}\n            });\n        }\n\n        function renderResponseConditions(active_version, loaderVisibility)\n        {\n            $('#condition_name').val('');\n            $('#apply_if').val('');\n            $('#condition_priority').val('');\n            return getResponseConditions(active_version, loaderVisibility)\n                .done(function (response) {\n                    let html = '';\n                    $('#attach_span').hide();\n                    if (response !== false) {\n                        conditions = response.conditions;\n                        html += '<option value=\"\">no condition</option>';\n                        $.each(conditions, function (index, condition) {\n                            if (condition.type === \"REQUEST\") {\n                                html += '<option value=\"'+condition.name+'\">'+condition.name+' ('+condition.type+') '+condition.statement+'</option>';\n                            }\n                        });\n                    }\n                    $('#conditions').show();\n                    $('#conditions').prop('disabled', false);\n                    $('#detach').show();\n                    $('#create-response-condition').show();\n                    $('#sep').show();\n                    $('#conditions').html(html);\n                })\n        }\n\n        function processLogEndpoints(endpoints)\n        {\n            $('#fastly-log-endpoints-list').html('');\n            $.each(endpoints, function (index, endpoint) {\n                let html = '<tr>' +\n                    '<td>' +\n                        '<input value=\"' + endpoint.label + '\" disabled=\"disabled\" class=\"input-text\" type=\"text\"/>' +\n                    '</td>' +\n                    '<td class=\"col-actions\">' +\n                        '<button class=\"action-delete fastly-edit-log-endpoint\" type=\"button\" title=\"Edit Log Endpoint\" data-endpoint-type=\"' + endpoint.type + '\" data-endpoint-name=\"' + endpoint.name + '\"></button>' +\n                    '</td>';\n                $('#fastly-log-endpoints-list').append(html);\n            });\n        }\n\n        function updateLogEndpoint(active_version)\n        {\n            let form = $('#create-log-endpoint-form');\n            form.validate({})\n            if (!form.valid()) {\n                return;\n            }\n\n            let activateFlag = $('#fastly_activate_log_endpoint').is(':checked');\n            let data = form.serialize();\n            data += \"&active_version=\" + encodeURIComponent(active_version);\n            data += \"&activate_flag=\" + encodeURIComponent(activateFlag);\n            data = data.replace(/%0D/g, '')\n\n            $.ajax({\n                type: \"POST\",\n                url: config.updateLogEndpointUrl,\n                data: data,\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        $('#fastly-success-log-endpoint-button-msg').text($.mage.__('Endpoint successfully updated.')).show();\n                        active_version = response.active_version;\n                        logEndpointModal.modal('closeModal');\n                        getLogEndpoints(active_version, false).done(function (resp) {\n                            $('.loading-log-endpoints').hide();\n                            if (resp !== false) {\n                                if (resp.endpoints.length > 0) {\n                                    logEndpoints = resp.endpoints;\n                                    processLogEndpoints(resp.endpoints);\n                                    $('.no-log-endpoints').hide();\n                                } else {\n                                    $('.no-log-endpoints').show();\n                                }\n                            }\n                        });\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n\n        function createLogEndpoint(active_version)\n        {\n            let form = $('#create-log-endpoint-form');\n            form.validate({})\n            if (!form.valid()) {\n                return;\n            }\n\n            let activateFlag = $('#fastly_activate_log_endpoint').is(':checked');\n            let data = form.serialize();\n            data += \"&active_version=\" + encodeURIComponent(active_version);\n            data += \"&activate_flag=\" + encodeURIComponent(activateFlag);\n            data = data.replace(/%0D/g, '')\n\n            $.ajax({\n                type: \"POST\",\n                url: config.createLogEndpointUrl,\n                data: data,\n                showLoader: true,\n                success: function (response) {\n                    if (response.status === true) {\n                        $('#fastly-success-log-endpoint-button-msg').text($.mage.__('Endpoint successfully created.')).show();\n                        active_version = response.active_version;\n                        logEndpointModal.modal('closeModal');\n                        $('#fastly_add_log_endpoint_button').remove();\n                        $('#fastly_cancel_log_endpoint_button').remove();\n                        $('#fastly_add_log_endpoint_type').remove();\n                        $('#fastly_add_log_endpoint_note').remove();\n                        $('#fastly_create_log_endpoint_button').show();\n                        getLogEndpoints(active_version, false).done(function (resp) {\n                            $('.loading-log-endpoints').hide();\n                            if (resp !== false) {\n                                if (resp.endpoints.length > 0) {\n                                    logEndpoints = resp.endpoints;\n                                    processLogEndpoints(resp.endpoints);\n                                    $('.no-log-endpoints').hide();\n                                } else {\n                                    $('.no-log-endpoints').show();\n                                }\n                            }\n                        });\n                    } else {\n                        resetAllMessages();\n                        showErrorMessage(response.msg);\n                    }\n                }\n            });\n        }\n\n        function createCondition()\n        {\n            let conditionName = $('#condition_name_modal').val();\n            let applyIf = $('#apply_if_modal').val();\n            let conditionPriority = $('#condition_priority_modal').val();\n            if (applyIf.length > 512) {\n                showErrorMessage('The expression cannot contain more than 512 characters.');\n                return;\n            } else if (applyIf.length < 1 || conditionName.length < 1) {\n                showErrorMessage('Please fill in the required fields.');\n                return;\n            } else if (isNaN(parseInt(conditionPriority))) {\n                showErrorMessage('Priority value must be an integer.');\n                return;\n            }\n\n            $('#conditions').prop('disabled', true);\n            $('#conditions').html('<option value=\"'+conditionName+'\" selected=\"selected\">'+conditionName+' (RESPONSE) '+applyIf+'</option>');\n            $('#condition_name').val(conditionName);\n            $('#apply_if').val(applyIf);\n            $('#condition_priority').val(conditionPriority);\n            $('#detach').hide();\n            $('#create-response-condition').show();\n            $('#sep').hide();\n            conditionModal.modal('closeModal');\n            $('.fastly-message-error').hide();\n        }\n\n        $('body').on('click', '#fastly_create_log_endpoint_button', function () {\n            let endpointType = $('<select id=\"fastly_add_log_endpoint_type\">');\n            for (const type in config.availableLogProviders) {\n                endpointType.append(new Option(config.availableLogProviders[type], type));\n            }\n            let addBtn = $('<button id=\"fastly_add_log_endpoint_button\" title=\"Add\" type=\"button\" class=\"action-default scalable\" style=\"margin-right: 10px\"><span>Add</span></button>');\n            let cancelBtn = $('<button id=\"fastly_cancel_log_endpoint_button\" title=\"Cancel\" type=\"button\" class=\"action-default scalable\" style=\"\"><span>Cancel</span></button>');\n            $(this).after(endpointType);\n            endpointType.after(addBtn);\n            addBtn.after(cancelBtn);\n            endpointType.after('<p class=\"note\" id=\"fastly_add_log_endpoint_note\">For more information, read our <a href=\"https://docs.fastly.com/en/guides/diagnostics#_streaming-logs\" target=\"_blank\" rel=\"noreferrer noopener\">logging documentation</a>.</p>');\n            $(this).hide();\n            endpointType.focus();\n        });\n\n        $('body').on('click', '#fastly_add_log_endpoint_button', function () {\n            let endpointType = $('#fastly_add_log_endpoint_type').val();\n            if (endpointType !== '') {\n                if (isAlreadyConfigured !== true) {\n                    $(this).attr('disabled', true);\n                    return alert($.mage.__('Please save config prior to continuing.'));\n                }\n                $.ajax({\n                    type: \"GET\",\n                    url: config.serviceInfoUrl,\n                    showLoader: true\n                }).done(function (checkService) {\n                    $.ajax({\n                        type: \"POST\",\n                        url: config.createLogEndpointUrl,\n                        showLoader: true,\n                        data: {\n                            endpoint_type: endpointType,\n                            form: false\n                        }\n                    }).done(function (response) {\n                        if (response.status !== false) {\n                            active_version = checkService.active_version;\n                            let next_version = checkService.next_version;\n                            let service_name = checkService.service.name;\n\n                            createLogEndpointOptions.endpointType = response.endpointType\n\n                            overlay(createLogEndpointOptions);\n                            $('[name=\"endpoint_type\"]').val(endpointType);\n                            $('[name=\"old_name\"]').val('');\n                            $('#conditions').hide();\n                            $('#detach').hide();\n                            $('#create-response-condition').hide();\n                            $('#sep').hide();\n\n                            logEndpointModal = modal;\n                            setServiceLabel(active_version, next_version, service_name);\n                            $('.upload-button span').text('Create');\n                        } else {\n                            $('#fastly-error-create-backend-button-msg').text($.mage.__(response.msg)).show();\n                        }\n                    });\n                });\n            }\n        });\n\n        $('body').on('click', '#fastly_cancel_log_endpoint_button', function () {\n            $('#fastly_add_log_endpoint_button').remove();\n            $('#fastly_cancel_log_endpoint_button').remove();\n            $('#fastly_add_log_endpoint_type').remove();\n            $('#fastly_add_log_endpoint_note').remove();\n            $('#fastly_create_log_endpoint_button').show();\n        });\n\n        function initValues(endpoint)\n        {\n            if (endpoint.response_condition) {\n                renderResponseConditions(active_version, true).done(function () {\n                    $('#conditions').val(endpoint.response_condition);\n                })\n            } else {\n                $('#conditions').hide();\n                $('#detach').hide();\n                $('#create-response-condition').hide();\n                $('#sep').hide();\n            }\n\n            const formElements = document.forms['create-log-endpoint-form'].elements;\n            for (const prop in endpoint) {\n                let element = formElements.namedItem(`log_endpoint[${prop}]`);\n                if (element) {\n                    $(element).val(endpoint[prop]);\n                }\n            }\n        }\n\n        $('body').on('click', 'button.fastly-edit-log-endpoint', function () {\n            if (isAlreadyConfigured !== true) {\n                $(this).attr('disabled', true);\n                return alert($.mage.__('Please save config prior to continuing.'));\n            }\n\n            let endpointType = $(this).data('endpoint-type');\n            let endpointName = $(this).data('endpoint-name');\n\n            $.ajax({\n                type: \"GET\",\n                url: config.serviceInfoUrl,\n                showLoader: true\n            }).done(function (checkService) {\n                active_version = checkService.active_version;\n                let next_version = checkService.next_version;\n                let service_name = checkService.service.name;\n\n                getLogEndpoint(active_version, endpointType, endpointName, true).done(function (response) {\n                    if (response !== false && response.endpoint) {\n                        updateLogEndpointOptions.endpointType = endpointType;\n\n                        overlay(updateLogEndpointOptions);\n                        $('[name=\"endpoint_type\"]').val(endpointType);\n                        $('[name=\"old_name\"]').val(endpointName);\n                        initValues(response.endpoint);\n                        logEndpointModal = modal;\n                        setServiceLabel(active_version, next_version, service_name);\n                        $('.upload-button span').text('Update');\n                    }\n                });\n            });\n        });\n\n        $('body').on('click', '#attach', function () {\n            renderResponseConditions(active_version, true)\n        });\n\n        $('body').on('click', '#detach', function () {\n            $('#conditions').html('');\n            $('#conditions').hide();\n            $('#detach').hide();\n            $('#sep').hide();\n            $('#create-response-condition').hide();\n            $('#attach_span').show();\n        });\n\n        $('body').on('click', '#create-response-condition', function () {\n            overlay(createResponseConditionOptions);\n            conditionModal = modal;\n            $('.upload-button span').text('Create');\n        });\n    }\n});\n\n","Fastly_Cdn/js/system/cache/additional.js":"define(\n    [\n        'uiComponent',\n        'jquery',\n        'mage/mage'\n    ],\n    function (Component, $) {\n        return Component.extend({\n            initialize: function () {\n                $('#quick_purge_form').mage('form').mage('validation');\n            }\n        });\n    }\n);","Fastly_Cdn/js/system/config/form/field/array.js":"define(\n    [\n        'uiComponent',\n        'mage/template',\n        'prototype'\n    ],\n    function (Component, mageTemplate) {\n        return Component.extend({\n            initialize: function (config) {\n                let htmlId = config.htmlId;\n                let arrayRowX = 'arrayRow' + htmlId;\n                let addToEndBtnX = 'addToEndBtn' + htmlId;\n                let html = config.html;\n                let templateValuesOrig = config.templateValues;\n                let arrayRows = config.arrayRows;\n\n                window[arrayRowX] = {\n\n                    // define row prototypeJS template\n                    template: mageTemplate(html),\n\n                    add: function (rowData, insertAfterId) {\n                        // generate default template data\n                        let templateValues;\n\n                        // Prepare template values\n                        if (rowData) {\n                            templateValues = rowData;\n                        } else {\n                            // Handles adding of new empty field\n                            let d = new Date();\n\n                            templateValues = {\n                                option_extra_attrs : {},\n                                _id : '_' + d.getTime() + '_' + d.getMilliseconds()\n                            };\n                            for (let prop in templateValuesOrig) {\n                                if (templateValuesOrig.hasOwnProperty(prop)) {\n                                    let columnName = templateValuesOrig[prop];\n                                    templateValues[columnName] = '';\n                                }\n                            }\n                        }\n\n                        // Insert new row after specified row or at the bottom\n                        if (insertAfterId) {\n                            Element.insert($(insertAfterId), {after: this.template(templateValues)});\n                        } else {\n                            Element.insert($('addRow' + htmlId), {bottom: this.template(templateValues)});\n                        }\n\n                        // Fill controls with data\n                        if (rowData) {\n                            let rowInputElementNames = Object.keys(rowData.column_values);\n                            for (let key in rowInputElementNames) {\n                                if (rowInputElementNames.hasOwnProperty(key)) {\n                                    if ($(rowInputElementNames[key])) {\n                                        $(rowInputElementNames[key]).value = rowData.column_values[rowInputElementNames[key]];\n                                    }\n                                }\n                            }\n                        }\n\n                        // Add event for {addAfterBtn} button\n                        if (config.isAddAfter != 0) {\n                            Event.observe('addAfterBtn' + templateValues._id, 'click', this.add.bind(this, false, templateValues._id));\n                        }\n                    },\n\n                    del: function (rowId) {\n                        $(rowId).remove();\n                    }\n                };\n\n                // Bind add action to \"Add\" button in last row\n                Event.observe(\n                    addToEndBtnX,\n                    'click',\n                    window[arrayRowX].add.bind(window[arrayRowX], false, false)\n                );\n\n                // Add database values on load\n                for (let key in arrayRows) {\n                    if (arrayRows.hasOwnProperty(key)) {\n                        window[arrayRowX].add(arrayRows[key]);\n                    }\n                }\n\n                // Toggle the grid availability, if element is disabled (depending on scope)\n                if (config.disabled != 0) {\n                    toggleValueElements({checked: true}, $('grid' + htmlId).parentNode);\n                }\n            }\n        });\n    }\n);","Magento_Payment/js/transparent.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global FORM_KEY */\n/* @api */\ndefine([\n    'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Payment/js/model/credit-card-validation/validator'\n], function ($, mageTemplate, alert) {\n    'use strict';\n\n    $.widget('mage.transparent', {\n        options: {\n            editFormSelector: '#edit_form',\n            hiddenFormTmpl:\n                '<form target=\"<%= data.target %>\" action=\"<%= data.action %>\"' +\n                'method=\"POST\" hidden' +\n                'enctype=\"application/x-www-form-urlencoded\" class=\"no-display\">' +\n                    '<% _.each(data.inputs, function(val, key){ %>' +\n                    '<input value=\"<%= val %>\" name=\"<%= key %>\" type=\"hidden\">' +\n                    '<% }); %>' +\n                '</form>',\n            cgiUrl: null,\n            orderSaveUrl: null,\n            controller: null,\n            gateway: null,\n            dateDelim: null,\n            cardFieldsMap: null,\n            expireYearLength: 2\n        },\n\n        /**\n         * @private\n         */\n        _create: function () {\n            this.hiddenFormTmpl = mageTemplate(this.options.hiddenFormTmpl);\n\n            $(this.options.editFormSelector).on('changePaymentMethod', this._setPlaceOrderHandler.bind(this));\n            $(this.options.editFormSelector).trigger('changePaymentMethod', [\n                $(this.options.editFormSelector).find(':radio[name=\"payment[method]\"]:checked').val()\n            ]);\n        },\n\n        /**\n         * Handler for form submit.\n         *\n         * @param {Object} event\n         * @param {String} method\n         */\n        _setPlaceOrderHandler: function (event, method) {\n            var $editForm = $(this.options.editFormSelector);\n\n            $editForm.off('beforeSubmitOrder.' + this.options.gateway);\n\n            if (method === this.options.gateway) {\n                $editForm.on('beforeSubmitOrder.' +  this.options.gateway, this._placeOrderHandler.bind(this));\n            }\n        },\n\n        /**\n         * Handler for form submit to call gateway for credit card validation.\n         *\n         * @param {Event} event\n         * @return {Boolean}\n         * @private\n         */\n        _placeOrderHandler: function (event) {\n            if ($(this.options.editFormSelector).valid()) {\n                this._orderSave();\n            } else {\n                $('body').trigger('processStop');\n            }\n            event.stopImmediatePropagation();\n\n            return false;\n        },\n\n        /**\n         * Handler for Place Order button to call gateway for credit card validation.\n         * Save order and generate post data for gateway call.\n         *\n         * @private\n         */\n        _orderSave: function () {\n            var postData = {\n                'form_key': FORM_KEY,\n                'cc_type': this.ccType()\n            };\n\n            $.ajax({\n                url: this.options.orderSaveUrl,\n                type: 'post',\n                context: this,\n                data: postData,\n                dataType: 'json',\n\n                /**\n                 * Success callback\n                 * @param {Object} response\n                 */\n                success: function (response) {\n                    if (response.success && response[this.options.gateway]) {\n                        this._postPaymentToGateway(response);\n                    } else {\n                        this._processErrors(response);\n                    }\n                },\n\n                /** @inheritdoc */\n                complete: function () {\n                    $('body').trigger('processStop');\n                }\n            });\n        },\n\n        /**\n         * Post data to gateway for credit card validation.\n         *\n         * @param {Object} response\n         * @private\n         */\n        _postPaymentToGateway: function (response) {\n            var $iframeSelector = $('[data-container=\"' + this.options.gateway + '-transparent-iframe\"]'),\n                data,\n                tmpl,\n                iframe;\n\n            data = this._preparePaymentData(response);\n            tmpl = this.hiddenFormTmpl({\n                data: {\n                    target: $iframeSelector.attr('name'),\n                    action: this.options.cgiUrl,\n                    inputs: data\n                }\n            });\n\n            iframe = $iframeSelector\n                .on('submit', function (event) {\n                    event.stopPropagation();\n                });\n            $(tmpl).appendTo(iframe).trigger('submit');\n            iframe.html('');\n        },\n\n        /**\n         * @returns {String}\n         */\n        ccType: function () {\n            return this.element.find(\n                '[data-container=\"' + this.options.gateway + '-cc-type\"]'\n            ).val();\n        },\n\n        /**\n         * Add credit card fields to post data for gateway.\n         *\n         * @param {Object} response\n         * @private\n         */\n        _preparePaymentData: function (response) {\n            var ccfields,\n                data,\n                preparedata;\n\n            data = response[this.options.gateway].fields;\n            ccfields = this.options.cardFieldsMap;\n\n            if (this.element.find('[data-container=\"' + this.options.gateway + '-cc-cvv\"]').length) {\n                data[ccfields.cccvv] = this.element.find(\n                    '[data-container=\"' + this.options.gateway + '-cc-cvv\"]'\n                ).val();\n            }\n            preparedata = this._prepareExpDate();\n            data[ccfields.ccexpdate] = preparedata.month + this.options.dateDelim + preparedata.year;\n            data[ccfields.ccnum] = this.element.find(\n                '[data-container=\"' + this.options.gateway + '-cc-number\"]'\n            ).val();\n\n            return data;\n        },\n\n        /**\n         * Grab Month and Year into one\n         * @returns {Object}\n         * @private\n         */\n        _prepareExpDate: function () {\n            var year = this.element.find('[data-container=\"' + this.options.gateway + '-cc-year\"]').val(),\n                month = parseInt(\n                    this.element.find('[data-container=\"' + this.options.gateway + '-cc-month\"]').val(), 10\n                );\n\n            if (year.length > this.options.expireYearLength) {\n                year = year.substring(year.length - this.options.expireYearLength);\n            }\n\n            if (month < 10) {\n                month = '0' + month;\n            }\n\n            return {\n                month: month, year: year\n            };\n        },\n\n        /**\n         * Processing errors\n         *\n         * @param {Object} response\n         * @private\n         */\n        _processErrors: function (response) {\n            var msg = response['error_messages'];\n\n            if (typeof msg === 'object') {\n                alert({\n                    content: msg.join('\\n')\n                });\n            }\n\n            if (msg) {\n                alert({\n                    content: msg\n                });\n            }\n        }\n    });\n\n    return $.mage.transparent;\n});\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* @api */\ndefine([\n    'mageUtils',\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date',\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator'\n], function (utils, parseDate, expirationMonth, expirationYear) {\n    'use strict';\n\n    /**\n     * @param {*} isValid\n     * @param {*} isPotentiallyValid\n     * @param {*} month\n     * @param {*} year\n     * @return {Object}\n     */\n    function resultWrapper(isValid, isPotentiallyValid, month, year) {\n        return {\n            isValid: isValid,\n            isPotentiallyValid: isPotentiallyValid,\n            month: month,\n            year: year\n        };\n    }\n\n    return function (value) {\n        var date,\n            monthValid,\n            yearValid;\n\n        if (utils.isEmpty(value)) {\n            return resultWrapper(false, false, null, null);\n        }\n\n        value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\n        date = parseDate(value);\n        monthValid = expirationMonth(date.month);\n        yearValid = expirationYear(date.year);\n\n        if (monthValid.isValid && yearValid.isValid) {\n            return resultWrapper(true, true, date.month, date.year);\n        }\n\n        if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\n            return resultWrapper(false, true, null, null);\n        }\n\n        return resultWrapper(false, false, null, null);\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/credit-card-data.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* @api */\ndefine([], function () {\n    'use strict';\n\n    return {\n        creditCard: null,\n        creditCardNumber: null,\n        expirationMonth: null,\n        expirationYear: null,\n        cvvCode: null\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* @api */\ndefine([\n    'mageUtils',\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator',\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type'\n], function (utils, luhn10, creditCardTypes) {\n    'use strict';\n\n    /**\n     * @param {*} card\n     * @param {*} isPotentiallyValid\n     * @param {*} isValid\n     * @return {Object}\n     */\n    function resultWrapper(card, isPotentiallyValid, isValid) {\n        return {\n            card: card,\n            isValid: isValid,\n            isPotentiallyValid: isPotentiallyValid\n        };\n    }\n\n    return function (value) {\n        var potentialTypes,\n            cardType,\n            valid,\n            i,\n            maxLength;\n\n        if (utils.isEmpty(value)) {\n            return resultWrapper(null, false, false);\n        }\n\n        value = value.replace(/\\s+/g, '');\n\n        if (!/^\\d*$/.test(value)) {\n            return resultWrapper(null, false, false);\n        }\n\n        potentialTypes = creditCardTypes.getCardTypes(value);\n\n        if (potentialTypes.length === 0) {\n            return resultWrapper(null, false, false);\n        } else if (potentialTypes.length !== 1) {\n            return resultWrapper(null, true, false);\n        }\n\n        cardType = potentialTypes[0];\n\n        if (cardType.type === 'unionpay') {  // UnionPay is not Luhn 10 compliant\n            valid = true;\n        } else {\n            valid = luhn10(value);\n        }\n\n        for (i = 0; i < cardType.lengths.length; i++) {\n            if (cardType.lengths[i] === value.length) {\n                return resultWrapper(cardType, valid, valid);\n            }\n        }\n\n        maxLength = Math.max.apply(null, cardType.lengths);\n\n        if (value.length < maxLength) {\n            return resultWrapper(cardType, true, false);\n        }\n\n        return resultWrapper(cardType, false, false);\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* @api */\ndefine([\n    'jquery',\n    'Magento_Payment/js/model/credit-card-validation/cvv-validator',\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator',\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\n    'Magento_Payment/js/model/credit-card-validation/credit-card-data',\n    'mage/translate'\n], function ($, cvvValidator, creditCardNumberValidator, yearValidator, monthValidator, creditCardData) {\n    'use strict';\n\n    $('.payment-method-content input[type=\"number\"]').on('keyup', function () {\n        if ($(this).val() < 0) {\n            $(this).val($(this).val().replace(/^-/, ''));\n        }\n    });\n\n    $.each({\n        'validate-card-type': [\n            function (number, item, allowedTypes) {\n                var cardInfo,\n                    i,\n                    l;\n\n                if (!creditCardNumberValidator(number).isValid) {\n                    return false;\n                }\n\n                cardInfo = creditCardNumberValidator(number).card;\n\n                for (i = 0, l = allowedTypes.length; i < l; i++) {\n                    if (cardInfo.title == allowedTypes[i].type) { //eslint-disable-line eqeqeq\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            $.mage.__('Please enter a valid credit card type number.')\n        ],\n        'validate-card-number': [\n\n            /**\n             * Validate credit card number based on mod 10\n             *\n             * @param {*} number - credit card number\n             * @return {Boolean}\n             */\n            function (number) {\n                return creditCardNumberValidator(number).isValid;\n            },\n            $.mage.__('Please enter a valid credit card number.')\n        ],\n        'validate-card-date': [\n\n            /**\n             * Validate credit card expiration month\n             *\n             * @param {String} date - month\n             * @return {Boolean}\n             */\n            function (date) {\n                return monthValidator(date).isValid;\n            },\n            $.mage.__('Incorrect credit card expiration month.')\n        ],\n        'validate-card-cvv': [\n\n            /**\n             * Validate cvv\n             *\n             * @param {String} cvv - card verification value\n             * @return {Boolean}\n             */\n            function (cvv) {\n                var maxLength = creditCardData.creditCard ? creditCardData.creditCard.code.size : 3;\n\n                return cvvValidator(cvv, maxLength).isValid;\n            },\n            $.mage.__('Please enter a valid credit card verification number.')\n        ],\n        'validate-card-year': [\n\n            /**\n             * Validate credit card expiration year\n             *\n             * @param {String} date - year\n             * @return {Boolean}\n             */\n            function (date) {\n                return yearValidator(date).isValid;\n            },\n            $.mage.__('Incorrect credit card expiration year.')\n        ]\n\n    }, function (i, rule) {\n        rule.unshift(i);\n        $.validator.addMethod.apply($.validator, rule);\n    });\n});\n","Magento_Payment/js/model/credit-card-validation/cvv-validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* @api */\ndefine([], function () {\n    'use strict';\n\n    /**\n     * @param {*} isValid\n     * @param {*} isPotentiallyValid\n     * @return {Object}\n     */\n    function resultWrapper(isValid, isPotentiallyValid) {\n        return {\n            isValid: isValid,\n            isPotentiallyValid: isPotentiallyValid\n        };\n    }\n\n    /**\n     * CVV number validation.\n     * Validate digit count for CVV code.\n     *\n     * @param {*} value\n     * @param {Number} maxLength\n     * @return {Object}\n     */\n    return function (value, maxLength) {\n        var DEFAULT_LENGTH = 3;\n\n        maxLength = maxLength || DEFAULT_LENGTH;\n\n        if (!/^\\d*$/.test(value)) {\n            return resultWrapper(false, false);\n        }\n\n        if (value.length === maxLength) {\n            return resultWrapper(true, true);\n        }\n\n        if (value.length < maxLength) {\n            return resultWrapper(false, true);\n        }\n\n        if (value.length > maxLength) {\n            return resultWrapper(false, false);\n        }\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([], function () {\n    'use strict';\n\n    /**\n     * @param {*} isValid\n     * @param {*} isPotentiallyValid\n     * @return {Object}\n     */\n    function resultWrapper(isValid, isPotentiallyValid) {\n        return {\n            isValid: isValid,\n            isPotentiallyValid: isPotentiallyValid\n        };\n    }\n\n    return function (value) {\n        var month,\n            monthValid;\n\n        if (value.replace(/\\s/g, '') === '' || value === '0') {\n            return resultWrapper(false, true);\n        }\n\n        if (!/^\\d*$/.test(value)) {\n            return resultWrapper(false, false);\n        }\n\n        if (isNaN(value)) {\n            return resultWrapper(false, false);\n        }\n\n        month = parseInt(value, 10);\n        monthValid = month > 0 && month < 13;\n\n        return resultWrapper(monthValid, monthValid);\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([], function () {\n    'use strict';\n\n    /**\n     * @param {*} isValid\n     * @param {*} isPotentiallyValid\n     * @return {Object}\n     */\n    function resultWrapper(isValid, isPotentiallyValid) {\n        return {\n            isValid: isValid,\n            isPotentiallyValid: isPotentiallyValid\n        };\n    }\n\n    return function (value) {\n        var currentYear = new Date().getFullYear(),\n            len = value.length,\n            valid,\n            expMaxLifetime = 19;\n\n        if (value.replace(/\\s/g, '') === '') {\n            return resultWrapper(false, true);\n        }\n\n        if (!/^\\d*$/.test(value)) {\n            return resultWrapper(false, false);\n        }\n\n        if (len !== 4) {\n            return resultWrapper(false, true);\n        }\n\n        value = parseInt(value, 10);\n        valid = value >= currentYear && value <= currentYear + expMaxLifetime;\n\n        return resultWrapper(valid, valid);\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([], function () {\n    'use strict';\n\n    return function (value) {\n        var month, len;\n\n        if (value.match('/')) {\n            value = value.split(/\\s*\\/\\s*/g);\n\n            return {\n                month: value[0],\n                year: value.slice(1).join()\n            };\n        }\n\n        len = value[0] === '0' || value.length > 5 || value.length === 4 || value.length === 3 ? 2 : 1;\n        month = value.substr(0, len);\n\n        return {\n            month: month,\n            year: value.substr(month.length, 4)\n        };\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* @api */\ndefine([\n    'jquery',\n    'mageUtils'\n], function ($, utils) {\n    'use strict';\n\n    var types = [\n        {\n            title: 'Visa',\n            type: 'VI',\n            pattern: '^4\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [16],\n            code: {\n                name: 'CVV',\n                size: 3\n            }\n        },\n        {\n            title: 'MasterCard',\n            type: 'MC',\n            pattern: '^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$',\n            gaps: [4, 8, 12],\n            lengths: [16],\n            code: {\n                name: 'CVC',\n                size: 3\n            }\n        },\n        {\n            title: 'American Express',\n            type: 'AE',\n            pattern: '^3([47]\\\\d*)?$',\n            isAmex: true,\n            gaps: [4, 10],\n            lengths: [15],\n            code: {\n                name: 'CID',\n                size: 4\n            }\n        },\n        {\n            title: 'Diners',\n            type: 'DN',\n            pattern: '^(3(0[0-5]|095|6|[8-9]))\\\\d*$',\n            gaps: [4, 10],\n            lengths: [14, 16, 17, 18, 19],\n            code: {\n                name: 'CVV',\n                size: 3\n            }\n        },\n        {\n            title: 'Discover',\n            type: 'DI',\n            pattern: '^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [16, 17, 18, 19],\n            code: {\n                name: 'CID',\n                size: 3\n            }\n        },\n        {\n            title: 'JCB',\n            type: 'JCB',\n            pattern: '^35(2[8-9]|[3-8])\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [16, 17, 18, 19],\n            code: {\n                name: 'CVV',\n                size: 3\n            }\n        },\n        {\n            title: 'UnionPay',\n            type: 'UN',\n            pattern: '^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$',\n            gaps: [4, 8, 12],\n            lengths: [16, 17, 18, 19],\n            code: {\n                name: 'CVN',\n                size: 3\n            }\n        },\n        {\n            title: 'Maestro International',\n            type: 'MI',\n            pattern: '^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n            code: {\n                name: 'CVC',\n                size: 3\n            }\n        },\n        {\n            title: 'Maestro Domestic',\n            type: 'MD',\n            pattern: '^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n            code: {\n                name: 'CVC',\n                size: 3\n            }\n        },\n        {\n            title: 'Hipercard',\n            type: 'HC',\n            pattern: '^((606282)|(637095)|(637568)|(637599)|(637609)|(637612))\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [13, 16],\n            code: {\n                name: 'CVC',\n                size: 3\n            }\n        },\n        {\n            title: 'Elo',\n            type: 'ELO',\n            pattern: '^((509091)|(636368)|(636297)|(504175)|(438935)|(40117[8-9])|(45763[1-2])|' +\n                '(457393)|(431274)|(50990[0-2])|(5099[7-9][0-9])|(50996[4-9])|(509[1-8][0-9][0-9])|' +\n                '(5090(0[0-2]|0[4-9]|1[2-9]|[24589][0-9]|3[1-9]|6[0-46-9]|7[0-24-9]))|' +\n                '(5067(0[0-24-8]|1[0-24-9]|2[014-9]|3[0-379]|4[0-9]|5[0-3]|6[0-5]|7[0-8]))|' +\n                '(6504(0[5-9]|1[0-9]|2[0-9]|3[0-9]))|' +\n                '(6504(8[5-9]|9[0-9])|6505(0[0-9]|1[0-9]|2[0-9]|3[0-8]))|' +\n                '(6505(4[1-9]|5[0-9]|6[0-9]|7[0-9]|8[0-9]|9[0-8]))|' +\n                '(6507(0[0-9]|1[0-8]))|(65072[0-7])|(6509(0[1-9]|1[0-9]|20))|' +\n                '(6516(5[2-9]|6[0-9]|7[0-9]))|(6550(0[0-9]|1[0-9]))|' +\n                '(6550(2[1-9]|3[0-9]|4[0-9]|5[0-8])))\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [16],\n            code: {\n                name: 'CVC',\n                size: 3\n            }\n        },\n        {\n            title: 'Aura',\n            type: 'AU',\n            pattern: '^5078\\\\d*$',\n            gaps: [4, 8, 12],\n            lengths: [19],\n            code: {\n                name: 'CVC',\n                size: 3\n            }\n        }\n    ];\n\n    return {\n        /**\n         * @param {*} cardNumber\n         * @return {Array}\n         */\n        getCardTypes: function (cardNumber) {\n            var i, value,\n                result = [];\n\n            if (utils.isEmpty(cardNumber)) {\n                return result;\n            }\n\n            if (cardNumber === '') {\n                return $.extend(true, {}, types);\n            }\n\n            for (i = 0; i < types.length; i++) {\n                value = types[i];\n\n                if (new RegExp(value.pattern).test(cardNumber)) {\n                    result.push($.extend(true, {}, value));\n                }\n            }\n\n            return result;\n        }\n    };\n});\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([], function () {\n    'use strict';\n\n    /**\n     * Luhn algorithm verification\n     */\n    return function (a, b, c, d, e) {\n        for (d = +a[b = a.length - 1], e = 0; b--;) {\n            c = +a[b];\n            d += ++e % 2 ? 2 * c % 10 + (c > 4) : c;\n        }\n\n        return !(d % 10);\n    };\n});\n","Magento_InventoryAdminUi/js/stock/grid/cell/assigned-sources.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/grid/columns/column'\n], function (Column) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'Magento_InventoryAdminUi/stock/grid/cell/assigned-sources-cell.html',\n            itemsToDisplay: 5\n        },\n\n        /**\n         *\n         * @param {Array} record\n         * @returns {Array}\n         */\n        getTooltipData: function (record) {\n            return record[this.index].map(function (source) {\n                return {\n                    sourceCode: source.sourceCode,\n                    name: source.name\n                };\n            });\n        },\n\n        /**\n         * @param {Object} record - Record object\n         * @returns {Array} Result array\n         */\n        getSourcesAssignedToStockOrderedByPriority: function (record) {\n            return this.getTooltipData(record).slice(0, this.itemsToDisplay);\n        }\n    });\n});\n","Magento_InventoryAdminUi/js/form/element/region.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/region'\n], function (Region) {\n    'use strict';\n\n    return Region.extend({\n        defaults: {\n            regionScope: 'data.general.region'\n        },\n\n        /**\n         * Set region to source form\n         *\n         * @param {String} value - region\n         */\n        setDifferedFromDefault: function (value) {\n            this._super();\n\n            if (parseFloat(value)) {\n                this.source.set(this.regionScope, this.indexedOptions[value].label);\n            }\n        }\n    });\n});\n","Amasty_Base/vendor/slick/slick.min.js":"/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n Version: 1.9.0\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n */\n(function(i){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],i):\"undefined\"!=typeof exports?module.exports=i(require(\"jquery\")):i(jQuery)})(function(i){\"use strict\";var e=window.Slick||{};e=function(){function e(e,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(e),appendDots:i(e),arrows:!0,asNavFor:null,prevArrow:'<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>',nextArrow:'<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:\"50px\",cssEase:\"ease\",customPaging:function(e,t){return i('<button type=\"button\" />').text(t+1)},dots:!1,dotsClass:\"slick-dots\",draggable:!0,easing:\"linear\",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:\"ondemand\",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:\"window\",responsive:null,rows:1,rtl:!1,slide:\"\",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden=\"hidden\",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(e),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange=\"visibilitychange\",n.windowWidth=0,n.windowTimer=null,s=i(e).data(\"slick\")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,\"undefined\"!=typeof document.mozHidden?(n.hidden=\"mozHidden\",n.visibilityChange=\"mozvisibilitychange\"):\"undefined\"!=typeof document.webkitHidden&&(n.hidden=\"webkitHidden\",n.visibilityChange=\"webkitvisibilitychange\"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=t++,n.htmlExpr=/^(?:\\s*(<[\\w\\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}var t=0;return e}(),e.prototype.activateADA=function(){var i=this;i.$slideTrack.find(\".slick-active\").attr({\"aria-hidden\":\"false\"}).find(\"a, input, button, select\").attr({tabindex:\"0\"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if(\"boolean\"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),\"number\"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):o===!0?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr(\"data-slick-index\",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&i.options.adaptiveHeight===!0&&i.options.vertical===!1){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),s.options.rtl===!0&&s.options.vertical===!1&&(e=-e),s.transformsEnabled===!1?s.options.vertical===!1?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):s.cssTransitions===!1?(s.options.rtl===!0&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),s.options.vertical===!1?(o[s.animType]=\"translate(\"+i+\"px, 0px)\",s.$slideTrack.css(o)):(o[s.animType]=\"translate(0px,\"+i+\"px)\",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),s.options.vertical===!1?o[s.animType]=\"translate3d(\"+e+\"px, 0px, 0px)\":o[s.animType]=\"translate3d(0px,\"+e+\"px, 0px)\",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this,t=e.options.asNavFor;return t&&null!==t&&(t=i(t).not(e.$slider)),t},e.prototype.asNavFor=function(e){var t=this,o=t.getNavTarget();null!==o&&\"object\"==typeof o&&o.each(function(){var t=i(this).slick(\"getSlick\");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};e.options.fade===!1?t[e.transitionType]=e.transformType+\" \"+e.options.speed+\"ms \"+e.options.cssEase:t[e.transitionType]=\"opacity \"+e.options.speed+\"ms \"+e.options.cssEase,e.options.fade===!1?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){var i=this;i.autoPlayTimer&&clearInterval(i.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(i.options.infinite===!1&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1===0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;e.options.arrows===!0&&(e.$prevArrow=i(e.options.prevArrow).addClass(\"slick-arrow\"),e.$nextArrow=i(e.options.nextArrow).addClass(\"slick-arrow\"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass(\"slick-hidden\").removeAttr(\"aria-hidden tabindex\"),e.$nextArrow.removeClass(\"slick-hidden\").removeAttr(\"aria-hidden tabindex\"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),e.options.infinite!==!0&&e.$prevArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\",\"true\")):e.$prevArrow.add(e.$nextArrow).addClass(\"slick-hidden\").attr({\"aria-disabled\":\"true\",tabindex:\"-1\"}))},e.prototype.buildDots=function(){var e,t,o=this;if(o.options.dots===!0&&o.slideCount>o.options.slidesToShow){for(o.$slider.addClass(\"slick-dotted\"),t=i(\"<ul />\").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i(\"<li />\").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find(\"li\").first().addClass(\"slick-active\")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+\":not(.slick-cloned)\").addClass(\"slick-slide\"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr(\"data-slick-index\",e).data(\"originalStyling\",i(t).attr(\"style\")||\"\")}),e.$slider.addClass(\"slick-slider\"),e.$slideTrack=0===e.slideCount?i('<div class=\"slick-track\"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class=\"slick-track\"/>').parent(),e.$list=e.$slideTrack.wrap('<div class=\"slick-list\"/>').parent(),e.$slideTrack.css(\"opacity\",0),e.options.centerMode!==!0&&e.options.swipeToSlide!==!0||(e.options.slidesToScroll=1),i(\"img[data-lazy]\",e.$slider).not(\"[src]\").addClass(\"slick-loading\"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses(\"number\"==typeof e.currentSlide?e.currentSlide:0),e.options.draggable===!0&&e.$list.addClass(\"draggable\")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>0){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement(\"div\");for(e=0;e<l.options.rows;e++){var a=document.createElement(\"div\");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+\"%\",display:\"inline-block\"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if(\"window\"===r.respondTo?n=a:\"slider\"===r.respondTo?n=d:\"min\"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(r.originalSettings.mobileFirst===!1?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,\"unslick\"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),e===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,\"unslick\"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),e===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,e===!0&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||l===!1||r.$slider.trigger(\"breakpoint\",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n,r=this,l=i(e.currentTarget);switch(l.is(\"a\")&&e.preventDefault(),l.is(\"li\")||(l=l.closest(\"li\")),n=r.slideCount%r.options.slidesToScroll!==0,o=n?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,e.data.message){case\"previous\":s=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-s,!1,t);break;case\"next\":s=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+s,!1,t);break;case\"index\":var d=0===e.data.index?0:e.data.index||l.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(d),!1,t),l.children().trigger(\"focus\");break;default:return}},e.prototype.checkNavigable=function(i){var e,t,o=this;if(e=o.getNavigableIndexes(),t=0,i>e[e.length-1])i=e[e.length-1];else for(var s in e){if(i<e[s]){i=t;break}t=e[s]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i(\"li\",e.$dots).off(\"click.slick\",e.changeSlide).off(\"mouseenter.slick\",i.proxy(e.interrupt,e,!0)).off(\"mouseleave.slick\",i.proxy(e.interrupt,e,!1)),e.options.accessibility===!0&&e.$dots.off(\"keydown.slick\",e.keyHandler)),e.$slider.off(\"focus.slick blur.slick\"),e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off(\"click.slick\",e.changeSlide),e.$nextArrow&&e.$nextArrow.off(\"click.slick\",e.changeSlide),e.options.accessibility===!0&&(e.$prevArrow&&e.$prevArrow.off(\"keydown.slick\",e.keyHandler),e.$nextArrow&&e.$nextArrow.off(\"keydown.slick\",e.keyHandler))),e.$list.off(\"touchstart.slick mousedown.slick\",e.swipeHandler),e.$list.off(\"touchmove.slick mousemove.slick\",e.swipeHandler),e.$list.off(\"touchend.slick mouseup.slick\",e.swipeHandler),e.$list.off(\"touchcancel.slick mouseleave.slick\",e.swipeHandler),e.$list.off(\"click.slick\",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),e.options.accessibility===!0&&e.$list.off(\"keydown.slick\",e.keyHandler),e.options.focusOnSelect===!0&&i(e.$slideTrack).children().off(\"click.slick\",e.selectHandler),i(window).off(\"orientationchange.slick.slick-\"+e.instanceUid,e.orientationChange),i(window).off(\"resize.slick.slick-\"+e.instanceUid,e.resize),i(\"[draggable!=true]\",e.$slideTrack).off(\"dragstart\",e.preventDefault),i(window).off(\"load.slick.slick-\"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off(\"mouseenter.slick\",i.proxy(e.interrupt,e,!0)),e.$list.off(\"mouseleave.slick\",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i,e=this;e.options.rows>0&&(i=e.$slides.children().children(),i.removeAttr(\"style\"),e.$slider.empty().append(i))},e.prototype.clickHandler=function(i){var e=this;e.shouldClick===!1&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(\".slick-cloned\",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass(\"slick-disabled slick-arrow slick-hidden\").removeAttr(\"aria-hidden aria-disabled tabindex\").css(\"display\",\"\"),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass(\"slick-disabled slick-arrow slick-hidden\").removeAttr(\"aria-hidden aria-disabled tabindex\").css(\"display\",\"\"),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass(\"slick-slide slick-active slick-center slick-visible slick-current\").removeAttr(\"aria-hidden\").removeAttr(\"data-slick-index\").each(function(){i(this).attr(\"style\",i(this).data(\"originalStyling\"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass(\"slick-slider\"),t.$slider.removeClass(\"slick-initialized\"),t.$slider.removeClass(\"slick-dotted\"),t.unslicked=!0,e||t.$slider.trigger(\"destroy\",[t])},e.prototype.disableTransition=function(i){var e=this,t={};t[e.transitionType]=\"\",e.options.fade===!1?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.fadeSlide=function(i,e){var t=this;t.cssTransitions===!1?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;e.cssTransitions===!1?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off(\"focus.slick blur.slick\").on(\"focus.slick\",\"*\",function(t){var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&o.is(\":focus\")&&(e.focussed=!0,e.autoPlay())},0)}).on(\"blur.slick\",\"*\",function(t){i(this);e.options.pauseOnFocus&&(e.focussed=!1,e.autoPlay())})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){var i=this;return i.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(i.options.infinite===!0)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(i.options.centerMode===!0)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),n.options.infinite===!0?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,n.options.vertical===!0&&n.options.centerMode===!0&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!==0&&i+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(i>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(i-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(i-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):i+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(i+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(i+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),n.options.centerMode===!0&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:n.options.centerMode===!0&&n.options.infinite===!0?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:n.options.centerMode===!0&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),e=n.options.vertical===!1?i*n.slideWidth*-1+n.slideOffset:i*t*-1+r,n.options.variableWidth===!0&&(o=n.slideCount<=n.options.slidesToShow||n.options.infinite===!1?n.$slideTrack.children(\".slick-slide\").eq(i):n.$slideTrack.children(\".slick-slide\").eq(i+n.options.slidesToShow),e=n.options.rtl===!0?o[0]?(n.$slideTrack.width()-o[0].offsetLeft-o.width())*-1:0:o[0]?o[0].offsetLeft*-1:0,n.options.centerMode===!0&&(o=n.slideCount<=n.options.slidesToShow||n.options.infinite===!1?n.$slideTrack.children(\".slick-slide\").eq(i):n.$slideTrack.children(\".slick-slide\").eq(i+n.options.slidesToShow+1),e=n.options.rtl===!0?o[0]?(n.$slideTrack.width()-o[0].offsetLeft-o.width())*-1:0:o[0]?o[0].offsetLeft*-1:0,e+=(n.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){var e=this;return e.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(e.options.infinite===!1?i=e.slideCount:(t=e.options.slidesToScroll*-1,o=e.options.slidesToScroll*-1,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o,s,n=this;return s=n.options.centerMode===!0?Math.floor(n.$list.width()/2):0,o=n.swipeLeft*-1+s,n.options.swipeToSlide===!0?(n.$slideTrack.find(\".slick-slide\").each(function(e,s){var r,l,d;if(r=i(s).outerWidth(),l=s.offsetLeft,n.options.centerMode!==!0&&(l+=r/2),d=l+r,o<d)return t=s,!1}),e=Math.abs(i(t).attr(\"data-slick-index\")-n.currentSlide)||1):n.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){var t=this;t.changeSlide({data:{message:\"index\",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass(\"slick-initialized\")||(i(t.$slider).addClass(\"slick-initialized\"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger(\"init\",[t]),t.options.accessibility===!0&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(\".slick-cloned\")).attr({\"aria-hidden\":\"true\",tabindex:\"-1\"}).find(\"a, input, button, select\").attr({tabindex:\"-1\"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(\".slick-cloned\")).each(function(t){var s=o.indexOf(t);if(i(this).attr({role:\"tabpanel\",id:\"slick-slide\"+e.instanceUid+t,tabindex:-1}),s!==-1){var n=\"slick-slide-control\"+e.instanceUid+s;i(\"#\"+n).length&&i(this).attr({\"aria-describedby\":n})}}),e.$dots.attr(\"role\",\"tablist\").find(\"li\").each(function(s){var n=o[s];i(this).attr({role:\"presentation\"}),i(this).find(\"button\").first().attr({role:\"tab\",id:\"slick-slide-control\"+e.instanceUid+s,\"aria-controls\":\"slick-slide\"+e.instanceUid+n,\"aria-label\":s+1+\" of \"+t,\"aria-selected\":null,tabindex:\"-1\"})}).eq(e.currentSlide).find(\"button\").attr({\"aria-selected\":\"true\",tabindex:\"0\"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.options.focusOnChange?e.$slides.eq(s).attr({tabindex:\"0\"}):e.$slides.eq(s).removeAttr(\"tabindex\");e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;i.options.arrows===!0&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off(\"click.slick\").on(\"click.slick\",{message:\"previous\"},i.changeSlide),i.$nextArrow.off(\"click.slick\").on(\"click.slick\",{message:\"next\"},i.changeSlide),i.options.accessibility===!0&&(i.$prevArrow.on(\"keydown.slick\",i.keyHandler),i.$nextArrow.on(\"keydown.slick\",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;e.options.dots===!0&&e.slideCount>e.options.slidesToShow&&(i(\"li\",e.$dots).on(\"click.slick\",{message:\"index\"},e.changeSlide),e.options.accessibility===!0&&e.$dots.on(\"keydown.slick\",e.keyHandler)),e.options.dots===!0&&e.options.pauseOnDotsHover===!0&&e.slideCount>e.options.slidesToShow&&i(\"li\",e.$dots).on(\"mouseenter.slick\",i.proxy(e.interrupt,e,!0)).on(\"mouseleave.slick\",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on(\"mouseenter.slick\",i.proxy(e.interrupt,e,!0)),e.$list.on(\"mouseleave.slick\",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on(\"touchstart.slick mousedown.slick\",{action:\"start\"},e.swipeHandler),e.$list.on(\"touchmove.slick mousemove.slick\",{action:\"move\"},e.swipeHandler),e.$list.on(\"touchend.slick mouseup.slick\",{action:\"end\"},e.swipeHandler),e.$list.on(\"touchcancel.slick mouseleave.slick\",{action:\"end\"},e.swipeHandler),e.$list.on(\"click.slick\",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),e.options.accessibility===!0&&e.$list.on(\"keydown.slick\",e.keyHandler),e.options.focusOnSelect===!0&&i(e.$slideTrack).children().on(\"click.slick\",e.selectHandler),i(window).on(\"orientationchange.slick.slick-\"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on(\"resize.slick.slick-\"+e.instanceUid,i.proxy(e.resize,e)),i(\"[draggable!=true]\",e.$slideTrack).on(\"dragstart\",e.preventDefault),i(window).on(\"load.slick.slick-\"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;i.options.arrows===!0&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),i.options.dots===!0&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match(\"TEXTAREA|INPUT|SELECT\")||(37===i.keyCode&&e.options.accessibility===!0?e.changeSlide({data:{message:e.options.rtl===!0?\"next\":\"previous\"}}):39===i.keyCode&&e.options.accessibility===!0&&e.changeSlide({data:{message:e.options.rtl===!0?\"previous\":\"next\"}}))},e.prototype.lazyLoad=function(){function e(e){i(\"img[data-lazy]\",e).each(function(){var e=i(this),t=i(this).attr(\"data-lazy\"),o=i(this).attr(\"data-srcset\"),s=i(this).attr(\"data-sizes\")||r.$slider.attr(\"data-sizes\"),n=document.createElement(\"img\");n.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr(\"srcset\",o),s&&e.attr(\"sizes\",s)),e.attr(\"src\",t).animate({opacity:1},200,function(){e.removeAttr(\"data-lazy data-srcset data-sizes\").removeClass(\"slick-loading\")}),r.$slider.trigger(\"lazyLoaded\",[r,e,t])})},n.onerror=function(){e.removeAttr(\"data-lazy\").removeClass(\"slick-loading\").addClass(\"slick-lazyload-error\"),r.$slider.trigger(\"lazyLoadError\",[r,e,t])},n.src=t})}var t,o,s,n,r=this;if(r.options.centerMode===!0?r.options.infinite===!0?(s=r.currentSlide+(r.options.slidesToShow/2+1),n=s+r.options.slidesToShow+2):(s=Math.max(0,r.currentSlide-(r.options.slidesToShow/2+1)),n=2+(r.options.slidesToShow/2+1)+r.currentSlide):(s=r.options.infinite?r.options.slidesToShow+r.currentSlide:r.currentSlide,n=Math.ceil(s+r.options.slidesToShow),r.options.fade===!0&&(s>0&&s--,n<=r.slideCount&&n++)),t=r.$slider.find(\".slick-slide\").slice(s,n),\"anticipated\"===r.options.lazyLoad)for(var l=s-1,d=n,a=r.$slider.find(\".slick-slide\"),c=0;c<r.options.slidesToScroll;c++)l<0&&(l=r.slideCount-1),t=t.add(a.eq(l)),t=t.add(a.eq(d)),l--,d++;e(t),r.slideCount<=r.options.slidesToShow?(o=r.$slider.find(\".slick-slide\"),e(o)):r.currentSlide>=r.slideCount-r.options.slidesToShow?(o=r.$slider.find(\".slick-cloned\").slice(0,r.options.slidesToShow),e(o)):0===r.currentSlide&&(o=r.$slider.find(\".slick-cloned\").slice(r.options.slidesToShow*-1),e(o))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass(\"slick-loading\"),i.initUI(),\"progressive\"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){var i=this;i.changeSlide({data:{message:\"next\"}})},e.prototype.orientationChange=function(){var i=this;i.checkResponsive(),i.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){var i=this;i.autoPlayClear(),i.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;if(!t.unslicked&&(t.$slider.trigger(\"afterChange\",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),t.options.accessibility===!0&&(t.initADA(),t.options.focusOnChange))){var o=i(t.$slides.get(t.currentSlide));o.attr(\"tabindex\",0).focus()}},e.prototype.prev=e.prototype.slickPrev=function(){var i=this;i.changeSlide({data:{message:\"previous\"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i(\"img[data-lazy]\",l.$slider);d.length?(t=d.first(),o=t.attr(\"data-lazy\"),s=t.attr(\"data-srcset\"),n=t.attr(\"data-sizes\")||l.$slider.attr(\"data-sizes\"),r=document.createElement(\"img\"),r.onload=function(){s&&(t.attr(\"srcset\",s),n&&t.attr(\"sizes\",n)),t.attr(\"src\",o).removeAttr(\"data-lazy data-srcset data-sizes\").removeClass(\"slick-loading\"),l.options.adaptiveHeight===!0&&l.setPosition(),l.$slider.trigger(\"lazyLoaded\",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr(\"data-lazy\").removeClass(\"slick-loading\").addClass(\"slick-lazyload-error\"),l.$slider.trigger(\"lazyLoadError\",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger(\"allImagesLoaded\",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:\"index\",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if(\"array\"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||\"window\";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass(\"slick-slide\"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),e.options.focusOnSelect===!0&&i(e.$slideTrack).children().on(\"click.slick\",e.selectHandler),e.setSlideClasses(\"number\"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger(\"reInit\",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;return\"boolean\"==typeof i?(e=i,i=e===!0?0:o.slideCount-1):i=e===!0?--i:i,!(o.slideCount<1||i<0||i>o.slideCount-1)&&(o.unload(),t===!0?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,void o.reinit())},e.prototype.setCSS=function(i){var e,t,o=this,s={};o.options.rtl===!0&&(i=-i),e=\"left\"==o.positionProp?Math.ceil(i)+\"px\":\"0px\",t=\"top\"==o.positionProp?Math.ceil(i)+\"px\":\"0px\",s[o.positionProp]=i,o.transformsEnabled===!1?o.$slideTrack.css(s):(s={},o.cssTransitions===!1?(s[o.animType]=\"translate(\"+e+\", \"+t+\")\",o.$slideTrack.css(s)):(s[o.animType]=\"translate3d(\"+e+\", \"+t+\", 0px)\",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;i.options.vertical===!1?i.options.centerMode===!0&&i.$list.css({padding:\"0px \"+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),i.options.centerMode===!0&&i.$list.css({padding:i.options.centerPadding+\" 0px\"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),i.options.vertical===!1&&i.options.variableWidth===!1?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(\".slick-slide\").length))):i.options.variableWidth===!0?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(\".slick-slide\").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();i.options.variableWidth===!1&&i.$slideTrack.children(\".slick-slide\").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,t.options.rtl===!0?i(s).css({position:\"relative\",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:\"relative\",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&i.options.adaptiveHeight===!0&&i.options.vertical===!1){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css(\"height\",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if(\"object\"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n=\"multiple\"):\"string\"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],\"responsive\"===arguments[0]&&\"array\"===i.type(arguments[1])?n=\"responsive\":\"undefined\"!=typeof arguments[1]&&(n=\"single\")),\"single\"===n)r.options[o]=s;else if(\"multiple\"===n)i.each(o,function(i,e){r.options[i]=e});else if(\"responsive\"===n)for(t in s)if(\"array\"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),i.options.fade===!1?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger(\"setPosition\",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=i.options.vertical===!0?\"top\":\"left\",\n    \"top\"===i.positionProp?i.$slider.addClass(\"slick-vertical\"):i.$slider.removeClass(\"slick-vertical\"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||i.options.useCSS===!0&&(i.cssTransitions=!0),i.options.fade&&(\"number\"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType=\"OTransform\",i.transformType=\"-o-transform\",i.transitionType=\"OTransition\",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType=\"MozTransform\",i.transformType=\"-moz-transform\",i.transitionType=\"MozTransition\",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType=\"webkitTransform\",i.transformType=\"-webkit-transform\",i.transitionType=\"webkitTransition\",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType=\"msTransform\",i.transformType=\"-ms-transform\",i.transitionType=\"msTransition\",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&i.animType!==!1&&(i.animType=\"transform\",i.transformType=\"transform\",i.transitionType=\"transition\"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&i.animType!==!1},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;if(t=n.$slider.find(\".slick-slide\").removeClass(\"slick-active slick-center slick-current\").attr(\"aria-hidden\",\"true\"),n.$slides.eq(i).addClass(\"slick-current\"),n.options.centerMode===!0){var r=n.options.slidesToShow%2===0?1:0;e=Math.floor(n.options.slidesToShow/2),n.options.infinite===!0&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e+r,i+e+1).addClass(\"slick-active\").attr(\"aria-hidden\",\"false\"):(o=n.options.slidesToShow+i,t.slice(o-e+1+r,o+e+2).addClass(\"slick-active\").attr(\"aria-hidden\",\"false\")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass(\"slick-center\"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass(\"slick-center\")),n.$slides.eq(i).addClass(\"slick-center\")}else i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass(\"slick-active\").attr(\"aria-hidden\",\"false\"):t.length<=n.options.slidesToShow?t.addClass(\"slick-active\").attr(\"aria-hidden\",\"false\"):(s=n.slideCount%n.options.slidesToShow,o=n.options.infinite===!0?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass(\"slick-active\").attr(\"aria-hidden\",\"false\"):t.slice(o,o+n.options.slidesToShow).addClass(\"slick-active\").attr(\"aria-hidden\",\"false\"));\"ondemand\"!==n.options.lazyLoad&&\"anticipated\"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(s.options.fade===!0&&(s.options.centerMode=!1),s.options.infinite===!0&&s.options.fade===!1&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=s.options.centerMode===!0?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr(\"id\",\"\").attr(\"data-slick-index\",t-s.slideCount).prependTo(s.$slideTrack).addClass(\"slick-cloned\");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr(\"id\",\"\").attr(\"data-slick-index\",t+s.slideCount).appendTo(s.$slideTrack).addClass(\"slick-cloned\");s.$slideTrack.find(\".slick-cloned\").find(\"[id]\").each(function(){i(this).attr(\"id\",\"\")})}},e.prototype.interrupt=function(i){var e=this;i||e.autoPlay(),e.interrupted=i},e.prototype.selectHandler=function(e){var t=this,o=i(e.target).is(\".slick-slide\")?i(e.target):i(e.target).parents(\".slick-slide\"),s=parseInt(o.attr(\"data-slick-index\"));return s||(s=0),t.slideCount<=t.options.slidesToShow?void t.slideHandler(s,!1,!0):void t.slideHandler(s)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d=null,a=this;if(e=e||!1,!(a.animating===!0&&a.options.waitForAnimate===!0||a.options.fade===!0&&a.currentSlide===i))return e===!1&&a.asNavFor(i),o=i,d=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,a.options.infinite===!1&&a.options.centerMode===!1&&(i<0||i>a.getDotCount()*a.options.slidesToScroll)?void(a.options.fade===!1&&(o=a.currentSlide,t!==!0&&a.slideCount>a.options.slidesToShow?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o))):a.options.infinite===!1&&a.options.centerMode===!0&&(i<0||i>a.slideCount-a.options.slidesToScroll)?void(a.options.fade===!1&&(o=a.currentSlide,t!==!0&&a.slideCount>a.options.slidesToShow?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o))):(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!==0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!==0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger(\"beforeChange\",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(l=a.getNavTarget(),l=l.slick(\"getSlick\"),l.slideCount<=l.options.slidesToShow&&l.setSlideClasses(a.currentSlide)),a.updateDots(),a.updateArrows(),a.options.fade===!0?(t!==!0?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight()):void(t!==!0&&a.slideCount>a.options.slidesToShow?a.animateSlide(d,function(){a.postSlide(s)}):a.postSlide(s)))},e.prototype.startLoad=function(){var i=this;i.options.arrows===!0&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),i.options.dots===!0&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass(\"slick-loading\")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),o=Math.round(180*t/Math.PI),o<0&&(o=360-Math.abs(o)),o<=45&&o>=0?s.options.rtl===!1?\"left\":\"right\":o<=360&&o>=315?s.options.rtl===!1?\"left\":\"right\":o>=135&&o<=225?s.options.rtl===!1?\"right\":\"left\":s.options.verticalSwiping===!0?o>=35&&o<=135?\"down\":\"up\":\"vertical\"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(o.touchObject.edgeHit===!0&&o.$slider.trigger(\"edge\",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case\"left\":case\"down\":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case\"right\":case\"up\":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}\"vertical\"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger(\"swipe\",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(e.options.swipe===!1||\"ontouchend\"in document&&e.options.swipe===!1||e.options.draggable===!1&&i.type.indexOf(\"mouse\")!==-1))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,e.options.verticalSwiping===!0&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case\"start\":e.swipeStart(i);break;case\"move\":e.swipeMove(i);break;case\"end\":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(l.options.verticalSwiping===!0&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(l.options.rtl===!1?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),l.options.verticalSwiping===!0&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,l.options.infinite===!1&&(0===l.currentSlide&&\"right\"===t||l.currentSlide>=l.getDotCount()&&\"left\"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),l.options.vertical===!1?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,l.options.verticalSwiping===!0&&(l.swipeLeft=e+o*s),l.options.fade!==!0&&l.options.touchMove!==!1&&(l.animating===!0?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;return t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow?(t.touchObject={},!1):(void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,void(t.dragging=!0))},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(\".slick-cloned\",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass(\"slick-slide slick-active slick-visible slick-current\").attr(\"aria-hidden\",\"true\").css(\"width\",\"\")},e.prototype.unslick=function(i){var e=this;e.$slider.trigger(\"unslick\",[e,i]),e.destroy()},e.prototype.updateArrows=function(){var i,e=this;i=Math.floor(e.options.slidesToShow/2),e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\",\"false\"),e.$nextArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\",\"false\"),0===e.currentSlide?(e.$prevArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\",\"true\"),e.$nextArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\",\"false\")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&e.options.centerMode===!1?(e.$nextArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\",\"true\"),e.$prevArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\",\"false\")):e.currentSlide>=e.slideCount-1&&e.options.centerMode===!0&&(e.$nextArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\",\"true\"),e.$prevArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\",\"false\")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find(\"li\").removeClass(\"slick-active\").end(),i.$dots.find(\"li\").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass(\"slick-active\"))},e.prototype.visibility=function(){var i=this;i.options.autoplay&&(document[i.hidden]?i.interrupted=!0:i.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if(\"object\"==typeof s||\"undefined\"==typeof s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),\"undefined\"!=typeof t)return t;return o}});","Amasty_Base/js/theme.js":"define([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    return function (widget) {\n        $.widget('mage.globalNavigation', widget, {\n            _open: function (e) {\n                var selectors = this.options.selectors,\n                    menuItemSelector = selectors.topLevelItem,\n                    menuItem = $(e.target).closest(menuItemSelector),\n                    subMenu = $(selectors.subMenu, menuItem),\n                    closeBtn = subMenu.find(selectors.closeSubmenuBtn);\n\n                closeBtn.unbind('click');\n                this._super(e);\n\n                /* fix for menu with multiple columns */\n                menuItem.parents('.submenu')\n                    .find(menuItemSelector).not(menuItem)\n                    .removeClass('_show')\n                    .removeClass('_active');\n\n                /* fix for hiding our menu after selecting native */\n                menuItem.parent()\n                    .find(menuItemSelector + '._show').not(menuItem)\n                    .removeClass('_show')\n                    .removeClass('_active');\n            },\n\n            _close: function (e) {\n                var selectors = this.options.selectors,\n                    currentCrossElement = $(e.target),\n                    topLevelItemSelector = selectors.topLevelItem,\n                    menuItem = this.menu.find(topLevelItemSelector + '._show');\n\n                if (currentCrossElement && currentCrossElement.parents('[data-ui-id*=\"menu-amasty\"]').length > 0) {\n                    this.options.selectors.topLevelItem = '.submenu ' + topLevelItemSelector;\n                }\n\n                this._super(e);\n                this.options.selectors.topLevelItem = topLevelItemSelector;\n\n                e.preventDefault();\n                e.stopPropagation();\n                return false;\n            }\n        });\n\n        return $.mage.globalNavigation;\n    }\n});\n","Dotdigitalgroup_Sms/js/charCounter.js":"require([\n    'jquery',\n    'domReady!',\n    'smsCounter'\n\n], function ($) {\n    'use strict';\n\n    let selectors = [];\n    let unicodeMessageSelector = '#ddg-unicode';\n\n    $(document).ready(function () {\n        $('.ddg-note').each(function (i, obj) {\n            selectors.push('#' + obj.firstElementChild.id.replace('_counter', ''));\n        });\n\n        searchForUnicode();\n\n        selectors.forEach(function (entry) {\n            let counterSelector = entry + '_counter';\n            let commentSelector = entry + '_comment';\n            let totalSelector = entry + '_total';\n\n            if ($(entry).val() !== undefined) {\n                updateNote(counterSelector, commentSelector, totalSelector, $(entry).val());\n            }\n        });\n    });\n\n    $(document).on('keyup', selectors.join(', '), delay(function () {\n        let counterSelector = '#' + this.id + '_counter';\n        let commentSelector = '#' + this.id + '_comment';\n        let totalSelector = '#' + this.id + '_total';\n\n        if (this.value !== undefined) {\n            updateNote(counterSelector, commentSelector, totalSelector, this.value);\n            updateUnicode(this.value);\n        }\n    }, 500));\n\n    /**\n     *\n     * @param {String} counterSelector\n     * @param {String} commentSelector\n     * @param {String} totalSelector\n     * @param {String} smsText\n     */\n    function updateNote(counterSelector, commentSelector, totalSelector, smsText) {\n        let smsParsed = SmsCounter.count(smsText);\n\n        $(counterSelector).text(smsParsed.length);\n        $(totalSelector).text(smsParsed.messages);\n\n        if (smsText.match(/{{([^}]+)\\}}/si)) {\n            $(commentSelector).show();\n        } else {\n            $(commentSelector).hide();\n        }\n    }\n\n    /**\n     * @param {String} smsText\n     */\n    function updateUnicode(smsText) {\n        let smsParsed = SmsCounter.count(smsText);\n\n        if (smsParsed.encoding === 'UTF16') {\n            $(unicodeMessageSelector).show();\n        } else {\n            searchForUnicode();\n        }\n    }\n\n    /**\n     *\n     */\n    function searchForUnicode() {\n        let unicodeFound = false;\n\n        selectors.forEach(function (entry) {\n            if ($(entry).val() !== undefined) {\n                let smsParsed = SmsCounter.count($(entry).val());\n\n                if (smsParsed.encoding === 'UTF16') {\n                    unicodeFound = true;\n                    $(unicodeMessageSelector).show();\n                }\n            }\n\n            if (!unicodeFound) {\n                $(unicodeMessageSelector).hide();\n            }\n        });\n    }\n\n    /**\n     * @param {Object} callback\n     * @param {Integer} ms\n     */\n    function delay(callback, ms) {\n        let timer = 0;\n\n        return function () {\n            let context = this,\n                args = arguments;\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                callback.apply(context, args);\n            }, ms || 0);\n        };\n    }\n});\n\n","Dotdigitalgroup_Sms/js/counter/sms_counter.js":"// https://github.com/danxexe/sms-counter\n(function() {\n    var $, SmsCounter;\n\n    window.SmsCounter = SmsCounter = (function() {\n        function SmsCounter() {}\n\n        SmsCounter.gsm7bitChars = \"@\u00a3$\u00a5\u00e8\u00e9\u00f9\u00ec\u00f2\u00c7\\\\n\u00d8\u00f8\\\\r\u00c5\u00e5\u0394_\u03a6\u0393\u039b\u03a9\u03a0\u03a8\u03a3\u0398\u039e\u00c6\u00e6\u00df\u00c9 !\\\\\\\"#\u00a4%&'()*+,-./0123456789:;<=>?\u00a1ABCDEFGHIJKLMNOPQRSTUVWXYZ\u00c4\u00d6\u00d1\u00dc\u00a7\u00bfabcdefghijklmnopqrstuvwxyz\u00e4\u00f6\u00f1\u00fc\u00e0\";\n\n        SmsCounter.gsm7bitExChar = \"\\\\^{}\\\\\\\\\\\\[~\\\\]|\u20ac\";\n\n        SmsCounter.gsm7bitRegExp = RegExp(\"^[\" + SmsCounter.gsm7bitChars + \"]*$\");\n\n        SmsCounter.gsm7bitExRegExp = RegExp(\"^[\" + SmsCounter.gsm7bitChars + SmsCounter.gsm7bitExChar + \"]*$\");\n\n        SmsCounter.gsm7bitExOnlyRegExp = RegExp(\"^[\\\\\" + SmsCounter.gsm7bitExChar + \"]*$\");\n\n        SmsCounter.GSM_7BIT = 'GSM_7BIT';\n\n        SmsCounter.GSM_7BIT_EX = 'GSM_7BIT_EX';\n\n        SmsCounter.UTF16 = 'UTF16';\n\n        SmsCounter.messageLength = {\n            GSM_7BIT: 160,\n            GSM_7BIT_EX: 160,\n            UTF16: 70\n        };\n\n        SmsCounter.multiMessageLength = {\n            GSM_7BIT: 153,\n            GSM_7BIT_EX: 153,\n            UTF16: 67\n        };\n\n        SmsCounter.count = function(text) {\n            var count, encoding, length, messages, per_message, remaining;\n            encoding = this.detectEncoding(text);\n            length = text.length;\n            if (encoding === this.GSM_7BIT_EX) {\n                length += this.countGsm7bitEx(text);\n            }\n            per_message = this.messageLength[encoding];\n            if (length > per_message) {\n                per_message = this.multiMessageLength[encoding];\n            }\n            messages = Math.ceil(length / per_message);\n            remaining = (per_message * messages) - length;\n            if(remaining == 0 && messages == 0){\n                remaining = per_message;\n            }\n            return count = {\n                encoding: encoding,\n                length: length,\n                per_message: per_message,\n                remaining: remaining,\n                messages: messages\n            };\n        };\n\n        SmsCounter.detectEncoding = function(text) {\n            switch (false) {\n                case text.match(this.gsm7bitRegExp) == null:\n                    return this.GSM_7BIT;\n                case text.match(this.gsm7bitExRegExp) == null:\n                    return this.GSM_7BIT_EX;\n                default:\n                    return this.UTF16;\n            }\n        };\n\n        SmsCounter.countGsm7bitEx = function(text) {\n            var char2, chars;\n            chars = (function() {\n                var _i, _len, _results;\n                _results = [];\n                for (_i = 0, _len = text.length; _i < _len; _i++) {\n                    char2 = text[_i];\n                    if (char2.match(this.gsm7bitExOnlyRegExp) != null) {\n                        _results.push(char2);\n                    }\n                }\n                return _results;\n            }).call(this);\n            return chars.length;\n        };\n\n        return SmsCounter;\n\n    })();\n\n    if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n        $ = jQuery;\n        $.fn.countSms = function(target) {\n            var count_sms, input;\n            input = this;\n            target = $(target);\n            count_sms = function() {\n                var count, k, v, _results;\n                count = SmsCounter.count(input.val());\n                _results = [];\n                for (k in count) {\n                    v = count[k];\n                    _results.push(target.find(\".\" + k).text(v));\n                }\n                return _results;\n            };\n            this.on('keyup', count_sms);\n            return count_sms();\n        };\n    }\n\n}).call(this);\n","Magento_Review/js/rating.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'jquery/ui'\n], function ($) {\n    'use strict';\n\n    $.widget('marketing.ratingControl', {\n        options: {\n            colorFilled: '#333',\n            colorUnfilled: '#CCCCCC',\n            colorHover: '#f30'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            this._labels = this.element.find('label');\n            this._bind();\n        },\n\n        /**\n         * @private\n         */\n        _bind: function () {\n            this._labels.on({\n                click: $.proxy(function (e) {\n                    $(e.currentTarget).prev().prop('checked', true);\n                    this._updateRating();\n                }, this),\n\n                hover: $.proxy(function (e) {\n                    this._updateHover($(e.currentTarget), this.options.colorHover);\n                }, this),\n\n                mouseleave: $.proxy(function (e) {\n                    this._updateHover($(e.currentTarget), this.options.colorUnfilled);\n                }, this)\n            });\n\n            this._updateRating();\n        },\n\n        /**\n         * @param {jQuery} elem\n         * @param {String} color\n         * @private\n         */\n        _updateHover: function (elem, color) {\n            elem.nextAll('label').addBack().filter(function () {\n                return !$(this).data('checked');\n            }).css('color', color);\n        },\n\n        /**\n         * @private\n         */\n        _updateRating: function () {\n            var checkedInputs = this.element.find('input[type=\"radio\"]:checked');\n\n            checkedInputs.nextAll('label').addBack().css('color', this.options.colorFilled).data('checked', true);\n            checkedInputs.prevAll('label').css('color', this.options.colorUnfilled).data('checked', false);\n        },\n\n        /**\n         * Remove rating when form reset\n         */\n        removeRating: function () {\n            var checkedInputs = this.element.find('input[type=\"radio\"]');\n\n            checkedInputs.nextAll('label').css('color', this.options.colorUnfilled).data('checked', false);\n        }\n    });\n\n});\n","Magento_Downloadable/downloadable-type-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Catalog/js/product/weight-handler',\n    'Magento_Catalog/catalog/type-events'\n], function ($, weight, productType) {\n    'use strict';\n\n    return {\n        $checkbox: $('[data-action=change-type-product-downloadable]'),\n        $items: $('#product_info_tabs_downloadable_items'),\n        $tab: null,\n        isDownloadable: false,\n\n        /**\n         * Show\n         */\n        show: function () {\n            this.$checkbox.prop('checked', true);\n            this.$items.show();\n        },\n\n        /**\n         * Hide\n         */\n        hide: function () {\n            this.$checkbox.prop('checked', false);\n            this.$items.hide();\n        },\n\n        /**\n         * Constructor component\n         * @param {Object} data - this backend data\n         */\n        'Magento_Downloadable/downloadable-type-handler': function (data) {\n            this.$tab = $('[data-tab=' + data.tabId + ']');\n            this.isDownloadable = data.isDownloadable;\n            this.bindAll();\n            this._initType();\n        },\n\n        /**\n         * Bind all\n         */\n        bindAll: function () {\n            this.$checkbox.on('change', function (event) {\n                $(document).trigger('setTypeProduct', $(event.target).prop('checked') ?\n                    'downloadable' :\n                    productType.type.init === 'downloadable' ? 'virtual' : productType.type.init\n                );\n            });\n\n            $(document).on('changeTypeProduct', this._initType.bind(this));\n        },\n\n        /**\n         * Init type\n         * @private\n         */\n        _initType: function () {\n            if (productType.type.current === 'downloadable') {\n                weight.change(false);\n                weight.$weightSwitcher().one('change', function () {\n                    $(document).trigger(\n                        'setTypeProduct',\n                        productType.type.init === 'downloadable' ? 'virtual' : productType.type.init\n                    );\n                });\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    };\n});\n","Magento_Downloadable/js/components/price-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/abstract'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            linksPurchasedSeparately: '0',\n            useDefaultPrice: false,\n            listens: {\n                linksPurchasedSeparately: 'changeDisabledStatus',\n                useDefaultPrice: 'changeDisabledStatus'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            this._super();\n            this.changeDisabledStatus();\n\n            return this;\n        },\n\n        /**\n         * Disable/enable price field\n         */\n        changeDisabledStatus: function () {\n            if (this.linksPurchasedSeparately === '1') {\n                if (this.useDefaultPrice) {\n                    this.disabled(true);\n                } else {\n                    this.disabled(false);\n                }\n            } else {\n                this.disabled(true);\n            }\n        }\n    });\n});\n","Magento_Downloadable/js/components/use-price-default-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            linksPurchasedSeparately: '0',\n            listens: {\n                linksPurchasedSeparately: 'changeVisibleStatus'\n            }\n        },\n\n        /**\n         * Change visibility of checkbox\n         */\n        changeVisibleStatus: function () {\n            if (this.linksPurchasedSeparately === '1') {\n                this.visible(true);\n            } else {\n                this.visible(false);\n            }\n        }\n    });\n});\n","Magento_Downloadable/js/components/upload-type-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/select',\n    'uiRegistry'\n], function (Select, registry) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            listens: {\n                value: 'changeTypeUpload'\n            },\n            typeUrl: 'file',\n            typeFile: 'link_url',\n            filterPlaceholder: 'ns = ${ $.ns }, parentScope = ${ $.parentScope }'\n        },\n\n        /**\n         * Initialize component.\n         * @returns {Element}\n         */\n        initialize: function () {\n            return this\n                ._super()\n                .changeTypeUpload(this.initialValue);\n        },\n\n        /**\n         * Callback that fires when 'value' property is updated.\n         *\n         * @param {String} currentValue\n         * @returns {*}\n         */\n        onUpdate: function (currentValue) {\n            this.changeTypeUpload(currentValue);\n\n            return this._super();\n        },\n\n        /**\n         * Change visibility for typeUrl/typeFile based on current value.\n         *\n         * @param {String} currentValue\n         */\n        changeTypeUpload: function (currentValue) {\n            var componentFile = this.filterPlaceholder + ', index=' + this.typeFile,\n                componentUrl = this.filterPlaceholder + ', index=' + this.typeUrl;\n\n            switch (currentValue) {\n\n                case 'file':\n                    this.changeVisible(componentFile, true);\n                    this.changeVisible(componentUrl, false);\n                    break;\n\n                case 'url':\n                    this.changeVisible(componentFile, false);\n                    this.changeVisible(componentUrl, true);\n                    break;\n            }\n        },\n\n        /**\n         * Change visible\n         *\n         * @param {String} filter\n         * @param {Boolean} visible\n         */\n        changeVisible: function (filter, visible) {\n            registry.async(filter)(\n                function (currentComponent) {\n                    currentComponent.visible(visible);\n                }\n            );\n        }\n    });\n});\n","Magento_Downloadable/js/components/file-uploader.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/file-uploader'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            fileInputName: ''\n        },\n\n        /**\n         * Adds provided file to the files list.\n         *\n         * @param {Object} file\n         * @returns {FileUploder} Chainable.\n         */\n        addFile: function (file) {\n            var processedFile = this.processFile(file),\n                tmpFile = [],\n                resultFile = {\n                'file': processedFile.file,\n                'name': processedFile.name,\n                'size': processedFile.size,\n                'status': processedFile.status ? processedFile.status : 'new'\n            };\n\n            tmpFile[0] = resultFile;\n\n            this.isMultipleFiles ?\n                this.value.push(tmpFile) :\n                this.value(tmpFile);\n\n            return this;\n        }\n    });\n});\n","Magento_Downloadable/js/components/is-downloadable-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            listens: {\n                disabled: 'changeVisibility'\n            },\n            modules: {\n                samplesFieldset: '${ $.samplesFieldset }',\n                linksFieldset: '${ $.linksFieldset}'\n            }\n        },\n\n        /**\n         * Change visibility for samplesFieldset & linksFieldset based on current statuses of checkbox.\n         */\n        changeVisibility: function () {\n            if (this.samplesFieldset() && this.linksFieldset()) {\n                if (this.checked() && !this.disabled()) {\n                    this.samplesFieldset().visible(true);\n                    this.linksFieldset().visible(true);\n                } else {\n                    this.samplesFieldset().visible(false);\n                    this.linksFieldset().visible(false);\n                }\n            }\n        },\n\n        /**\n         * Handle checked state changes for checkbox / radio button.\n         *\n         * @param {Boolean} newChecked\n         */\n        onCheckedChanged: function (newChecked) {\n            this.changeVisibility();\n            this._super(newChecked);\n        }\n    });\n});\n","Dotdigitalgroup_Enterprise/js/content-type/dotdigitalgroup-form/preview.js":"function _inheritsLoose(subClass, superClass)\n{\n    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass;\n}\n\ndefine([\n    'knockout', 'mage/translate', 'Magento_PageBuilder/js/content-type-menu/hide-show-option', 'Magento_PageBuilder/js/content-type/preview', 'Magento_PageBuilder/js/events', 'module', 'jquery', 'mage/url'\n], function (_knockout, _translate, _hideShowOption, _preview, _events, _module, $, url) {\n\n    var Preview =\n        /*#__PURE__*/\n    function (_preview2) {\n        'use strict';\n\n        _inheritsLoose(Preview, _preview2);\n\n        function Preview(contentType, config, observableUpdater) {\n            var _this;\n\n            _this = _preview2.call(this, contentType, config, observableUpdater) || this;\n            _this.hiddenData = null;\n            _this.apiEnabled = _knockout.observable(!!_module.config().isDDGEnabled);\n            _this.apiErrorMessage = _module.config().apiErrorMessage;\n            _this.messages = {\n                NOT_SELECTED: (0, _translate)('Edit to select a survey or form'),\n                UNKNOWN_ERROR: (0, _translate)('An unknown error occurred. Please try again.')\n            };\n            _this.placeholderText = _knockout.observable(_this.messages.NOT_SELECTED);\n            _this.accessToken = this.contentType.config.additional_data.formConfig.token;\n            _this.baseUrl = this.contentType.config.additional_data.formConfig.baseUrl;\n\n            _events.on('contentType:mountAfter', function (args) {\n                if (args.contentType.id === this.contentType.id) {\n                    this.contentType.dataStore.set('magento_api_access_token', this.accessToken);\n                    this.contentType.dataStore.set('base_url', this.baseUrl);\n                }\n            }.bind(this));\n        }\n\n        var _proto = Preview.prototype;\n\n        /**\n         *\n         */\n        _proto.retrieveOptions = function retrieveOptions() {\n            var options = _preview2.prototype.retrieveOptions.call(this);\n\n            // Change tooltips\n            options.edit.title = 'Select form';\n\n            options.hideShow = new _hideShowOption({\n                preview: this,\n                icon: _hideShowOption.showIcon,\n                title: _hideShowOption.showText,\n                action: this.onOptionVisibilityToggle,\n                classes: ['hide-show-content-type'],\n                sort: 40\n            });\n\n            return options;\n        };\n\n        /**\n         *\n         */\n        _proto.bindEvents = function bindEvents() {\n            _preview2.prototype.bindEvents.call(this);\n\n            _events.on('form:' + this.contentType.id + ':saveAfter', function (data) {\n                if (data.form_select) {\n                    this.getFormData(data, this.appendFormData.bind(this));\n                }\n            }.bind(this));\n        };\n\n        /**\n         *\n         */\n        _proto.afterObservablesUpdated = function afterObservablesUpdated() {\n            _preview2.prototype.afterObservablesUpdated.call(this);\n\n            var data = this.contentType.dataStore.getState();\n\n            this.updatePlaceholder(data);\n        };\n\n        /**\n         * @param {Object} data\n         */\n        _proto.updatePlaceholder = function updatePlaceholder(data) {\n            if (!data.form_select || data.form_select.length === 0) {\n                this.placeholderText(this.messages.NOT_SELECTED);\n\n                return;\n            }\n\n            if (data.form_style === 'embedded') {\n                this.placeholderText('The form \"' + data.form_name + '\" will be embedded.');\n            } else if (data.form_style === 'popover') {\n                this.placeholderText('The form \"' + data.form_name + '\" will be displayed as a pop-over after ' + data.show_after + ' seconds.');\n            } else {\n                this.placeholderText(this.messages.NOT_SELECTED);\n            }\n        };\n\n        /**\n         * @param data\n         * @param callback\n         */\n        _proto.getFormData = function getFormData(data, callback) {\n            let websiteId = data.account_select;\n            let formId = data.form_select;\n            let formStyle = data.form_style;\n            let token = data.magento_api_access_token;\n\n            if (!websiteId || !formId || !formStyle) {\n                return;\n            }\n\n            $.ajax({\n                url: url.build('rest/V1/dotdigital/formData/' + formId + '/' + websiteId + '/' + formStyle + '/'),\n                method: 'GET',\n                dataType: 'JSON',\n                contentType: 'application/json',\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n                },\n                success: function (response) {\n                    callback(data, response);\n                }\n            });\n        };\n\n        _proto.appendFormData = function setFormData(data, additionalData) {\n            if (additionalData) {\n                $.extend(data, additionalData);\n                this.contentType.dataStore.setState(data);\n            }\n        };\n\n        return Preview;\n    }(_preview);\n\n    return Preview;\n});\n//# sourceMappingURL=preview.js.map\n","Dotdigitalgroup_Enterprise/js/content-type/dotdigitalgroup-form/appearance/default/widget.js":"define([\n    'jquery',\n    'mage/url'\n], function ($, url) {\n    'use strict';\n\n    return function (config, element) {\n        let formId = $(element).find('iframe').attr('id');\n        let shouldSubscribe = $(element).find('script').data('add-respondent') === 1;\n\n        ecPF.onComplete(function (formData) {\n            let hasContactEmail = formData.contactEmail != null && formData.contactEmail.length > 0;\n\n            if (typeof window.dmPt !== 'undefined' && hasContactEmail) {\n                window.dmPt('identify', formData.contactEmail);\n            }\n\n            if (shouldSubscribe && hasContactEmail) {\n                $.post(url.build('newsletter/subscriber/new'), {\n                    email: formData.contactEmail\n                }).done(function () {\n                    window.scrollTo(0, 0);\n                    window.location.reload();\n                });\n            }\n        }, formId);\n    };\n});\n","Dotdigitalgroup_Enterprise/js/form/element/form-select.js":"define([\n    'Magento_Ui/js/form/element/select',\n    'jquery',\n    'mage/url'\n], function (Select, $, url) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            disabled: true,\n            caption: '-- Please Select --',\n            imports: {\n                accessToken: '${ $.provider }:data.magento_api_access_token',\n                baseUrl: '${ $.provider }:data.base_url',\n                accountId: '${ $.provider }:data.account_select'\n            },\n            listens: {\n                accessToken: 'setApiAccessToken',\n                baseUrl: 'setBaseUrl',\n                accountId: 'fetchECForms'\n            },\n            previouslySelectedValue: ''\n        },\n\n        /**\n         * Dependently display dropdown component if it contains more than one option\n         *\n         * @param {Object} data\n         * @returns {Object} Chainable\n         */\n        setOptions: function (data) {\n            this._super(data);\n\n            if (this.options().length) {\n                this.value(this.previouslySelectedValue);\n                this.setDisabled(false);\n            }\n\n            return this;\n        },\n\n        /**\n         * @param {String} websiteId\n         */\n        fetchECForms: function (websiteId) {\n            var _this2 = this;\n\n            if (!websiteId || typeof websiteId === 'undefined') {\n                return;\n            }\n\n            if (this.source.data) {\n                this.previouslySelectedValue = this.source.data.form_select;\n            }\n\n            $.ajax({\n                url: url.build('rest/V1/dotdigital/forms/' + websiteId),\n                method: 'GET',\n                dataType: 'JSON',\n                contentType: 'application/json',\n\n                /**\n                 * @param {Object} xhr\n                 */\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader('Authorization', 'Bearer ' + _this2.token);\n                }\n            }).done(function (response) {\n                _this2.setOptions(response);\n            });\n        },\n\n        /**\n         * @param {String} token\n         */\n        setApiAccessToken: function (token) {\n            this.token = token;\n        },\n\n        /**\n         * @param {String} baseUrl\n         */\n        setBaseUrl: function (baseUrl) {\n            url.setBaseUrl(baseUrl);\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/container.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiElement',\n    'jquery'\n], function (Element, $) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            containerSelector: '.media-gallery-container',\n            masonryComponentPath: 'media_gallery_listing.media_gallery_listing.media_gallery_columns',\n            modules: {\n                masonry: '${ $.masonryComponentPath }'\n            }\n        },\n\n        /**\n         * Init component\n         *\n         * @return {exports}\n         */\n        initialize: function () {\n            this._super();\n\n            $(this.containerSelector).applyBindings();\n\n            return this;\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/image-uploader.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'jquery',\n    'underscore',\n    'Magento_Ui/js/lib/validation/validator',\n    'mage/translate',\n    'jquery/file-uploader'\n], function (Component, $, _, validator, $t) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            imageUploadInputSelector: '#image-uploader-form',\n            directoriesPath: 'media_gallery_listing.media_gallery_listing.media_gallery_directories',\n            actionsPath: 'media_gallery_listing.media_gallery_listing.media_gallery_columns.thumbnail_url',\n            messagesPath: 'media_gallery_listing.media_gallery_listing.messages',\n            imageUploadUrl: '',\n            acceptFileTypes: '',\n            allowedExtensions: '',\n            maxFileSize: '',\n            maxFileNameLength: 90,\n            loader: false,\n            modules: {\n                directories: '${ $.directoriesPath }',\n                actions: '${ $.actionsPath }',\n                mediaGridMessages: '${ $.messagesPath }',\n                sortBy: '${ $.sortByName }',\n                listingPaging: '${ $.listingPagingName }'\n            }\n        },\n\n        /**\n         * Init component\n         *\n         * @return {exports}\n         */\n        initialize: function () {\n            this._super().observe(\n                [\n                    'loader',\n                    'count'\n                ]\n            );\n\n            return this;\n        },\n\n        /**\n         * Initializes file upload library\n         */\n        initializeFileUpload: function () {\n            $(this.imageUploadInputSelector).fileupload({\n                url: this.imageUploadUrl,\n                acceptFileTypes: this.acceptFileTypes,\n                allowedExtensions: this.allowedExtensions,\n                maxFileSize: this.maxFileSize,\n\n                /**\n                 * Extending the form data\n                 *\n                 * @param {Object} form\n                 * @returns {Array}\n                 */\n                formData: function (form) {\n                    return form.serializeArray().concat(\n                        [{\n                            name: 'isAjax',\n                            value: true\n                        },\n                        {\n                            name: 'form_key',\n                            value: window.FORM_KEY\n                        },\n                        {\n                            name: 'target_folder',\n                            value: this.getTargetFolder()\n                        }]\n                    );\n                }.bind(this),\n\n                add: function (e, data) {\n                    if (!this.isSizeExceeded(data.files[0]).passed) {\n                        this.addValidationErrorMessage(\n                            $t('Cannot upload \"%1\". File exceeds maximum file size limit.')\n                                .replace('%1', data.files[0].name)\n                        );\n\n                        return;\n                    } else if (!this.isFileNameLengthExceeded(data.files[0]).passed) {\n                        this.addValidationErrorMessage(\n                            $t('Cannot upload \"%1\". Filename is too long, must be 90 characters or less.')\n                                .replace('%1', data.files[0].name)\n                        );\n\n                        return;\n                    }\n\n                    this.showLoader();\n                    this.count(1);\n                    data.submit();\n                }.bind(this),\n\n                stop: function () {\n                    this.openNewestImages();\n                    this.mediaGridMessages().scheduleCleanup();\n                }.bind(this),\n\n                start: function () {\n                    this.mediaGridMessages().clear();\n                }.bind(this),\n\n                done: function (e, data) {\n                    var response = data.jqXHR.responseJSON;\n\n                    if (!response) {\n                        this.showErrorMessage(data, $t('Could not upload the asset.'));\n\n                        return;\n                    }\n\n                    if (!response.success) {\n                        this.showErrorMessage(data, response.message);\n\n                        return;\n                    }\n                    this.showSuccessMessage(data);\n                    this.hideLoader();\n                    this.actions().reloadGrid();\n                }.bind(this)\n            });\n        },\n\n        /**\n         * Add error message after validation error.\n         *\n         * @param {String} message\n         */\n        addValidationErrorMessage: function (message) {\n            this.mediaGridMessages().add('error', message);\n\n            this.count() < 2 || this.mediaGridMessages().scheduleCleanup();\n        },\n\n        /**\n         * Checks if size of provided file exceeds\n         * defined in configuration size limits.\n         *\n         * @param {Object} file - File to be checked.\n         * @returns {Boolean}\n         */\n        isSizeExceeded: function (file) {\n            return validator('validate-max-size', file.size, this.maxFileSize);\n        },\n\n        /**\n         * Checks if name length of provided file exceeds\n         * defined in configuration size limits.\n         *\n         * @param {Object} file - File to be checked.\n         * @returns {Boolean}\n         */\n        isFileNameLengthExceeded: function (file) {\n            return validator('max_text_length', file.name, this.maxFileNameLength);\n        },\n\n        /**\n         * Go to recently uploaded images if at least one uploaded successfully\n         */\n        openNewestImages: function () {\n            this.mediaGridMessages().get().each(function (message) {\n                if (message.code === 'success') {\n                    this.actions().deselectImage();\n                    this.sortBy().selectDefaultOption();\n                    this.listingPaging().goFirst();\n\n                    return false;\n                }\n            }.bind(this));\n        },\n\n        /**\n         * Show error meassages with file name.\n         *\n         * @param {Object} data\n         * @param {String} message\n         */\n        showErrorMessage: function (data, message) {\n            data.files.each(function (file) {\n                this.mediaGridMessages().add(\n                    'error',\n                    file.name + ': ' + $t(message)\n                );\n            }.bind(this));\n\n            this.hideLoader();\n        },\n\n        /**\n         * Show success message, and files counts\n         */\n        showSuccessMessage: function () {\n            this.mediaGridMessages().messages.remove(function (item) {\n                return item.code === 'success';\n            });\n            this.mediaGridMessages().add('success', $t('Assets have been successfully uploaded!'));\n            this.count(this.count() + 1);\n\n        },\n\n        /**\n         * Gets Media Gallery selected folder\n         *\n         * @returns {String}\n         */\n        getTargetFolder: function () {\n\n            if (_.isUndefined(this.directories().activeNode()) ||\n                _.isNull(this.directories().activeNode())) {\n                return '/';\n            }\n\n            return this.directories().activeNode();\n        },\n\n        /**\n         * Shows spinner loader\n         */\n        showLoader: function () {\n            this.loader(true);\n        },\n\n        /**\n         * Hides spinner loader\n         */\n        hideLoader: function () {\n            this.loader(false);\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/action/getDetails.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/translate'\n], function ($, $t) {\n    'use strict';\n\n    return function (imageDetailsUrl, imageIds) {\n        var deferred = $.Deferred(),\n            message;\n\n        $.ajax({\n            type: 'GET',\n            url: imageDetailsUrl,\n            dataType: 'json',\n            showLoader: true,\n            data: {\n                'ids': imageIds\n            },\n            context: this,\n\n            /**\n             * Resolve with image details if success, reject with response message othervise\n             *\n             * @param {Object} response\n             */\n            success: function (response) {\n                if (response.success) {\n                    deferred.resolve(response.imageDetails);\n\n                    return;\n                }\n\n                deferred.reject(response.message);\n            },\n\n            /**\n             * Extract the message and reject\n             *\n             * @param {Object} response\n             */\n            error: function (response) {\n\n                if (typeof response.responseJSON === 'undefined' ||\n                    typeof response.responseJSON.message === 'undefined'\n                ) {\n                    message = $t('Could not retrieve image details.');\n                } else {\n                    message = response.responseJSON.message;\n                }\n                deferred.reject(message);\n            }\n        });\n\n        return deferred.promise();\n    };\n});\n","Magento_MediaGalleryUi/js/action/saveDetails.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/translate'\n], function ($, $t) {\n    'use strict';\n\n    return function (saveImageDetailsUrl, data) {\n        var deferred = $.Deferred(),\n            message;\n\n        $.ajax({\n            type: 'POST',\n            url: saveImageDetailsUrl,\n            dataType: 'json',\n            showLoader: true,\n            data: data,\n\n            /**\n             * Resolve with image details if success, reject with response message otherwise\n             *\n             * @param {Object} response\n             */\n            success: function (response) {\n                if (response.success) {\n                    deferred.resolve(response.message);\n\n                    return;\n                }\n\n                deferred.reject(response.message);\n            },\n\n            /**\n             * Extract the message and reject\n             *\n             * @param {Object} response\n             */\n            error: function (response) {\n                if (typeof response.responseJSON === 'undefined' ||\n                    typeof response.responseJSON.message === 'undefined'\n                ) {\n                    message = $t('Could not save image details.');\n                } else {\n                    message = response.responseJSON.message;\n                }\n                deferred.reject(message);\n            }\n        });\n\n        return deferred.promise();\n    };\n});\n","Magento_MediaGalleryUi/js/action/deleteImages.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'mage/url',\n    'Magento_MediaGalleryUi/js/grid/messages',\n    'Magento_Ui/js/modal/confirm',\n    'mage/translate'\n], function ($, _, urlBuilder, messages, confirmation, $t) {\n    'use strict';\n\n    return function (ids, deleteUrl, confirmationContent) {\n        var deferred = $.Deferred(),\n               title = $t('Delete assets'),\n               cancelText = $t('Cancel'),\n               deleteImageText = $t('Delete');\n\n        /**\n         * Send deletion request with redords ids\n         *\n         * @param {Array} recordIds\n         * @param {String} serviceUrl\n         */\n        function sendRequest(recordIds, serviceUrl) {\n\n            $.ajax({\n                type: 'POST',\n                url: serviceUrl,\n                dataType: 'json',\n                showLoader: true,\n                data: {\n                    'form_key': window.FORM_KEY,\n                    'ids': recordIds\n                },\n                context: this,\n\n                /**\n                 * Success handler for deleting image\n                 *\n                 * @param {Object} response\n                 */\n                success: function (response) {\n                    var message = !_.isUndefined(response.message) ? response.message : null;\n\n                    if (!response.success) {\n                        message = message || $t('There was an error on attempt to delete the images.');\n                        $(window).trigger('fileDeleted.enhancedMediaGallery', {\n                            reload: false,\n                            message: message,\n                            code: 'error'\n                        });\n\n                        deferred.reject(message);\n                    }\n\n                    message = message || $t('You have successfully removed the images.');\n                    $(window).trigger('fileDeleted.enhancedMediaGallery', {\n                        reload: true,\n                        message: message,\n                        code: 'success'\n                    });\n                    deferred.resolve(message);\n                },\n\n                /**\n                 * Error handler for deleting image\n                 *\n                 * @param {Object} response\n                 */\n                error: function (response) {\n                    var message;\n\n                    if (typeof response.responseJSON === 'undefined' ||\n                        typeof response.responseJSON.message === 'undefined'\n                    ) {\n                        message = $t('There was an error on attempt to delete the image.');\n                    } else {\n                        message = response.responseJSON.message;\n                    }\n\n                    $(window).trigger('fileDeleted.enhancedMediaGallery', {\n                        reload: false,\n                        message: message,\n                        code: 'error'\n                    });\n                    deferred.reject(message);\n                }\n            });\n        }\n\n        confirmation({\n            title: title,\n            modalClass: 'media-gallery-delete-image-action',\n            content: confirmationContent,\n            buttons: [\n                {\n                    text: cancelText,\n                    class: 'action-secondary action-dismiss',\n\n                    /**\n                     * Close modal\n                     */\n                    click: function () {\n                        this.closeModal();\n                        deferred.resolve({\n                            status: 'canceled'\n                        });\n                    }\n                },\n                {\n                    text: deleteImageText,\n                    class: 'action-primary action-accept',\n\n                    /**\n                     * Delete Image and close modal\n                     */\n                    click: function () {\n                        sendRequest(ids, deleteUrl);\n                        this.closeModal();\n                    }\n                }\n            ]\n        });\n\n        return deferred.promise();\n    };\n});\n","Magento_MediaGalleryUi/js/action/deleteImageWithDetailConfirmation.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'Magento_MediaGalleryUi/js/action/getDetails',\n    'Magento_MediaGalleryUi/js/action/deleteImages',\n    'mage/translate'\n], function ($, _, getDetails, deleteImages, $t) {\n    'use strict';\n\n    return {\n\n        /**\n         * Get information about image use\n         *\n         * @param {Array} recordsIds\n         * @param {String} imageDetailsUrl\n         * @param {String} deleteImageUrl\n         */\n        deleteImageAction: function (recordsIds, imageDetailsUrl, deleteImageUrl) {\n            var confirmationContent = $t('%1Are you sure you want to delete \"%2\" image(s)?')\n                .replace('%2', Object.keys(recordsIds).length),\n                deferred = $.Deferred();\n\n            getDetails(imageDetailsUrl, recordsIds).then(function (images) {\n                        confirmationContent = confirmationContent.replace(\n                            '%1',\n                            this.getRecordRelatedContentMessage(images) + ' '\n                        );\n                    }.bind(this)).fail(function () {\n                        confirmationContent = confirmationContent.replace('%1', '');\n                    }).always(function () {\n                        deleteImages(recordsIds, deleteImageUrl, confirmationContent).then(function (status) {\n                            deferred.resolve(status);\n                        }).fail(function (error) {\n                            deferred.reject(error);\n                        });\n                    });\n\n            return deferred.promise();\n        },\n\n        /**\n         * Get information about image use\n         *\n         * @param {Object|String} images\n         * @return {String}\n         */\n        getRecordRelatedContentMessage: function (images) {\n            var usedInMessage = $t('The selected assets are used in the content of the following entities: '),\n                usedIn = {};\n\n            $.each(images, function (key, image) {\n                $.each(image.details, function (sectionIndex, section) {\n                    if (section.title === 'Used In' && _.isObject(section) && !_.isEmpty(section.value)) {\n                        $.each(section.value, function (entityTypeIndex, entityTypeData) {\n                            usedIn[entityTypeData.name] = entityTypeData.name in usedIn ?\n                                usedIn[entityTypeData.name] + entityTypeData.number :\n                                entityTypeData.number;\n                        });\n                    }\n                });\n            });\n\n            if (_.isEmpty(usedIn)) {\n                return '';\n            }\n\n            return usedInMessage + this.usedInObjectToString(usedIn);\n        },\n\n        /**\n         * Fromats usedIn object to string\n         *\n         * @param {Object} usedIn\n         * @return {String}\n         */\n        usedInObjectToString: function (usedIn) {\n            var entities = [];\n\n            $.each(usedIn, function (entityName, number) {\n                entities.push(entityName + '(' + number + ')');\n            });\n\n            return entities.join(', ') + '.';\n        }\n    };\n});\n","Magento_MediaGalleryUi/js/directory/directoryTree.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global Base64 */\ndefine([\n    'jquery',\n    'uiComponent',\n    'uiLayout',\n    'underscore',\n    'Magento_MediaGalleryUi/js/directory/actions/createDirectory',\n    'jquery/jstree/jquery.jstree',\n    'Magento_Ui/js/lib/view/utils/async'\n], function ($, Component, layout, _, createDirectory) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            allowedActions: [],\n            filterChipsProvider: 'componentType = filters, ns = ${ $.ns }',\n            bookmarkProvider: 'componentType = bookmark, ns = ${ $.ns }',\n            directoryTreeSelector: '#media-gallery-directory-tree',\n            getDirectoryTreeUrl: 'media_gallery/directories/gettree',\n            createDirectoryUrl: 'media_gallery/directories/create',\n            deleteDirectoryUrl: 'media_gallery/directories/delete',\n            jsTreeReloaded: null,\n            modules: {\n                bookmarks: '${ $.bookmarkProvider }',\n                directories: '${ $.name }_directories',\n                filterChips: '${ $.filterChipsProvider }'\n            },\n            listens: {\n                '${ $.provider }:params.filters.path': 'updateSelectedDirectory'\n            },\n            viewConfig: [{\n                component: 'Magento_MediaGalleryUi/js/directory/directories',\n                name: '${ $.name }_directories',\n                allowedActions: '${ $.allowedActions }'\n            }]\n        },\n\n        /**\n         * Initializes media gallery directories component.\n         *\n         * @returns {Sticky} Chainable.\n         */\n        initialize: function () {\n            this._super().observe(['activeNode']).initView();\n\n            $.async(\n                this.directoryTreeSelector,\n                this,\n                function () {\n                    this.renderDirectoryTree().then(function () {\n                        this.initEvents();\n                    }.bind(this));\n                }.bind(this)\n            );\n\n            return this;\n        },\n\n        /**\n         * Render directory tree component.\n         */\n        renderDirectoryTree: function () {\n            return this.getJsonTree().then(function (data) {\n                this.createFolderIfNotExists(data).then(function (isFolderCreated) {\n                    if (isFolderCreated) {\n                        this.getJsonTree().then(function (newData) {\n                            this.createTree(newData);\n                        }.bind(this));\n                    } else {\n                        this.createTree(data);\n                    }\n                }.bind(this));\n            }.bind(this));\n        },\n\n        /**\n         * Set jstree reloaded\n         *\n         * @param {Boolean} value\n         */\n        setJsTreeReloaded: function (value) {\n            this.jsTreeReloaded = value;\n        },\n\n        /**\n         * Create folder by provided current_tree_path param\n         *\n         * @param {Array} directories\n         */\n        createFolderIfNotExists: function (directories) {\n            var requestedDirectory = this.getRequestedDirectory(),\n                deferred = $.Deferred(),\n                pathArray;\n\n            if (_.isNull(requestedDirectory)) {\n                deferred.resolve(false);\n\n                return deferred.promise();\n            }\n\n            if (this.isDirectoryExist(directories[0], requestedDirectory)) {\n                deferred.resolve(false);\n\n                return deferred.promise();\n            }\n\n            pathArray = this.convertPathToPathsArray(requestedDirectory);\n\n            $.each(pathArray, function (i, val) {\n                if (this.isDirectoryExist(directories[0], val)) {\n                    pathArray.splice(i, 1);\n                }\n            }.bind(this));\n\n            createDirectory(\n                this.createDirectoryUrl,\n                pathArray\n            ).then(function () {\n                deferred.resolve(true);\n            });\n\n            return deferred.promise();\n        },\n\n        /**\n         * Verify if directory exists in array\n         *\n         * @param {Array} directories\n         * @param {String} directoryId\n         */\n        isDirectoryExist: function (directories, directoryId) {\n            var found = false;\n\n            /**\n             * Recursive search in array\n             *\n             * @param {Array} data\n             * @param {String} id\n             */\n            function recurse(data, id) {\n                var i;\n\n                for (i = 0; i < data.length; i++) {\n                    if (data[i].attr.id === id) {\n                        found = data[i];\n                        break;\n                    } else if (data[i].children && data[i].children.length) {\n                        recurse(data[i].children, id);\n                    }\n                }\n            }\n\n            recurse(directories, directoryId);\n\n            return found;\n        },\n\n        /**\n         * Convert path string to path array e.g 'path1/path2' -> ['path1', 'path1/path2']\n         *\n         * @param {String} path\n         */\n        convertPathToPathsArray: function (path) {\n            var pathsArray = [],\n                pathString = '',\n                paths = path.split('/');\n\n            $.each(paths, function (i, val) {\n                pathString += i >= 1 ? val : val + '/';\n                pathsArray.push(i >= 1 ? pathString : val);\n            });\n\n            return pathsArray;\n        },\n\n        /**\n         * Initialize child components\n         *\n         * @returns {Object}\n         */\n        initView: function () {\n            layout(this.viewConfig);\n\n            return this;\n        },\n\n        /**\n         * Wait for condition then call provided callback\n         */\n        waitForCondition: function (condition, callback) {\n            if (condition()) {\n                setTimeout(function () {\n                    this.waitForCondition(condition, callback);\n                }.bind(this), 100);\n            } else {\n                callback();\n            }\n        },\n\n        /**\n         * Remove ability to multiple select on nodes\n         */\n        disableMultiselectBehavior: function () {\n            $.jstree.defaults.ui['select_range_modifier'] = false;\n            $.jstree.defaults.ui['select_multiple_modifier'] = false;\n        },\n\n        /**\n         *  Handle jstree events\n         */\n        initEvents: function () {\n            this.initJsTreeEvents();\n            this.disableMultiselectBehavior();\n\n            $(window).on('reload.MediaGallery', function () {\n                this.getJsonTree().then(function (data) {\n                    this.createFolderIfNotExists(data).then(function (isCreated) {\n                        if (isCreated) {\n                            this.renderDirectoryTree().then(function () {\n                                this.setJsTreeReloaded(true);\n                                this.initJsTreeEvents();\n                            }.bind(this));\n                        } else {\n                            this.updateSelectedDirectory();\n                        }\n                    }.bind(this));\n                }.bind(this));\n            }.bind(this));\n        },\n\n        /**\n         * Fire event for jstree component\n         */\n        initJsTreeEvents: function () {\n            $(this.directoryTreeSelector).on('select_node.jstree', function (element, data) {\n                this.setActiveNodeFilter($(data.rslt.obj).data('path'));\n                this.setJsTreeReloaded(false);\n            }.bind(this));\n\n            $(this.directoryTreeSelector).on('loaded.jstree', function () {\n                this.updateSelectedDirectory();\n            }.bind(this));\n        },\n\n        /**\n         * Verify directory filter on init event, select folder per directory filter state\n         */\n        updateSelectedDirectory: function () {\n            var currentFilterPath = this.filterChips().filters.path,\n                requestedDirectory = this.getRequestedDirectory(),\n                currentTreePath;\n\n            if (_.isUndefined(currentFilterPath)) {\n                this.clearFiltersHandle();\n\n                return;\n            }\n\n            if (!_.isUndefined(this.bookmarks())) {\n                if (!_.size(this.bookmarks().getViewData(this.bookmarks().defaultIndex))) {\n                    setTimeout(function () {\n                        this.updateSelectedDirectory();\n                    }.bind(this), 500);\n\n                    return;\n                }\n            }\n            currentTreePath = this.isFilterApplied(currentFilterPath) || _.isNull(requestedDirectory) ?\n                currentFilterPath : requestedDirectory;\n\n            if (this.folderExistsInTree(currentTreePath)) {\n                this.locateNode(currentTreePath);\n            } else {\n                this.selectStorageRoot();\n            }\n        },\n\n        /**\n         * Verify if directory exists in folder tree\n         *\n         * @param {String} path\n         */\n        folderExistsInTree: function (path) {\n            if (!_.isUndefined(path)) {\n                return $('#' + path.replace(/\\//g, '\\\\/')).length === 1;\n            }\n\n            return false;\n        },\n\n        /**\n         * Get requested directory from MediabrowserUtility\n         *\n         * @returns {String|null}\n         */\n        getRequestedDirectory: function () {\n            return !_.isUndefined(window.MediabrowserUtility) && window.MediabrowserUtility.pathId !== '' ?\n                Base64.idDecode(window.MediabrowserUtility.pathId) : null;\n        },\n\n        /**\n         * Check if need to select directory by filters state\n         *\n         * @param {String} currentFilterPath\n         */\n        isFilterApplied: function (currentFilterPath) {\n            return !_.isUndefined(currentFilterPath) && currentFilterPath !== '';\n        },\n\n        /**\n         * Locate and higlight node in jstree by path id.\n         *\n         * @param {String} path\n         */\n        locateNode: function (path) {\n            if (path === $(this.directoryTreeSelector).jstree('get_selected').attr('id')) {\n                return;\n            }\n            path = path.replace(/\\//g, '\\\\/');\n            $(this.directoryTreeSelector).jstree('open_node', '#' + path);\n            $(this.directoryTreeSelector).jstree('select_node', '#' + path, true);\n\n        },\n\n        /**\n         * Clear filters\n         */\n        clearFiltersHandle: function () {\n            $(this.directoryTreeSelector).jstree('deselect_all');\n            this.activeNode(null);\n            this.directories().setInActive();\n        },\n\n        /**\n         * Set active node filter, or deselect if the same node clicked\n         *\n         * @param {String} nodePath\n         */\n        setActiveNodeFilter: function (nodePath) {\n            if (this.activeNode() === nodePath && !this.jsTreeReloaded) {\n                this.selectStorageRoot();\n            } else {\n                this.selectFolder(nodePath);\n            }\n        },\n\n        /**\n         * Remove folders selection -> select storage root\n         */\n        selectStorageRoot: function () {\n            var filters = {},\n                applied = this.filterChips().get('applied');\n\n            $(this.directoryTreeSelector).jstree('deselect_all');\n\n            filters = $.extend(true, filters, applied);\n            delete filters.path;\n            this.filterChips().set('applied', filters);\n            this.activeNode(null);\n            this.waitForCondition(\n                function () {\n                    return _.isUndefined(this.directories());\n                }.bind(this),\n                function () {\n                    this.directories().setInActive();\n                }.bind(this)\n            );\n        },\n\n        /**\n         * Set selected folder\n         *\n         * @param {String} path\n         */\n        selectFolder: function (path) {\n            this.activeNode(path);\n\n            this.waitForCondition(\n                function () {\n                    return _.isUndefined(this.directories());\n                }.bind(this),\n                function () {\n                    this.directories().setActive(path);\n                }.bind(this)\n            );\n\n            this.applyFilter(path);\n        },\n\n        /**\n         * Remove active node from directory tree, and select next\n         */\n        removeNode: function () {\n            $(this.directoryTreeSelector).jstree('remove');\n        },\n\n        /**\n         * Apply folder filter by path\n         *\n         * @param {String} path\n         */\n        applyFilter: function (path) {\n            var filters = {},\n                applied = this.filterChips().get('applied');\n\n            filters = $.extend(true, filters, applied);\n            filters.path = path;\n            this.filterChips().set('applied', filters);\n        },\n\n        /**\n         * Reload jstree and update jstree events\n         */\n        reloadJsTree: function () {\n            var deferred = $.Deferred();\n\n            this.getJsonTree().then(function (data) {\n                this.createTree(data);\n                this.setJsTreeReloaded(true);\n                this.initEvents();\n                deferred.resolve();\n            }.bind(this));\n\n            return deferred.promise();\n        },\n\n        /**\n         * Get json data for jstree\n         */\n        getJsonTree: function () {\n            var deferred = $.Deferred();\n\n            $.ajax({\n                url: this.getDirectoryTreeUrl,\n                type: 'GET',\n                dataType: 'json',\n\n                /**\n                 * Success handler for request\n                 *\n                 * @param {Object} data\n                 */\n                success: function (data) {\n                    deferred.resolve(data);\n                },\n\n                /**\n                 * Error handler for request\n                 *\n                 * @param {Object} jqXHR\n                 * @param {String} textStatus\n                 */\n                error: function (jqXHR, textStatus) {\n                    deferred.reject();\n                    throw textStatus;\n                }\n            });\n\n            return deferred.promise();\n        },\n\n        /**\n         * Initialize directory tree\n         *\n         * @param {Array} data\n         */\n        createTree: function (data) {\n            $(this.directoryTreeSelector).jstree({\n                plugins: ['json_data', 'themes',  'ui', 'crrm', 'types', 'hotkeys'],\n                vcheckbox: {\n                    'two_state': true,\n                    'real_checkboxes': true\n                },\n                'json_data': {\n                    data: data\n                },\n                hotkeys: {\n                    space: this._changeState,\n                    'return': this._changeState\n                },\n                types: {\n                    'types': {\n                        'disabled': {\n                            'check_node': true,\n                            'uncheck_node': true\n                        }\n                    }\n                }\n            });\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/directory/directories.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.g\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'uiComponent',\n    'Magento_Ui/js/modal/confirm',\n    'Magento_Ui/js/modal/alert',\n    'underscore',\n    'Magento_Ui/js/modal/prompt',\n    'Magento_MediaGalleryUi/js/directory/actions/createDirectory',\n    'Magento_MediaGalleryUi/js/directory/actions/deleteDirectory',\n    'mage/translate',\n    'validation'\n], function ($, Component, confirm, uiAlert, _, prompt, createDirectory, deleteDirectory, $t) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            allowedActions: [],\n            directoryTreeSelector: '#media-gallery-directory-tree',\n            deleteButtonSelector: '#delete_folder',\n            createFolderButtonSelector: '#create_folder',\n            messageDelay: 5,\n            selectedFolder: null,\n            messagesName: 'media_gallery_listing.media_gallery_listing.messages',\n            modules: {\n                directoryTree: '${ $.parentName }.media_gallery_directories',\n                messages: '${ $.messagesName }'\n            }\n        },\n\n        /**\n         * Initializes media gallery directories component.\n         *\n         * @returns {Sticky} Chainable.\n         */\n        initialize: function () {\n            this._super().observe(['selectedFolder']);\n            this.initEvents();\n\n            return this;\n        },\n\n        /**\n          * Initialize directories events\n          */\n        initEvents: function () {\n            $(this.deleteButtonSelector).on('delete_folder', function () {\n                this.deleteFolder();\n            }.bind(this));\n\n            $(this.createFolderButtonSelector).on('create_folder', function () {\n                this.createFolder();\n            }.bind(this));\n        },\n\n        /**\n         * Show confirmation popup and create folder based on user input\n         */\n        createFolder: function () {\n            this.getPrompt({\n                title: $t('New Folder Name:'),\n                content: '',\n                actions: {\n                    /**\n                     * Confirm action\n                     */\n                    confirm: function (folderName) {\n                        createDirectory(\n                            this.directoryTree().createDirectoryUrl,\n                            [this.getNewFolderPath(folderName)]\n                        ).then(function () {\n                            this.directoryTree().reloadJsTree().then(function () {\n                                $(this.directoryTree().directoryTreeSelector).on('loaded.jstree', function () {\n                                    this.directoryTree().locateNode(this.getNewFolderPath(folderName));\n                                }.bind(this));\n                            }.bind(this));\n                        }.bind(this)).fail(function (error) {\n                            uiAlert({\n                                content: error\n                            });\n                        });\n                    }.bind(this)\n                },\n                buttons: [{\n                    text: $t('Cancel'),\n                    class: 'action-secondary action-dismiss',\n\n                    /**\n                     * Close modal\n                     */\n                    click: function () {\n                        this.closeModal();\n                    }\n                }, {\n                    text: $t('Confirm'),\n                    class: 'action-primary action-accept'\n                }]\n            });\n        },\n\n        /**\n         * Return configured path for folder creation.\n         *\n         * @param {String} folderName\n         * @returns {String}\n         */\n        getNewFolderPath: function (folderName) {\n            if (_.isUndefined(this.selectedFolder()) || _.isNull(this.selectedFolder())) {\n                return folderName;\n            }\n\n            return this.selectedFolder() + '/' + folderName;\n        },\n\n        /**\n          * Return configured prompt with input field\n          */\n        getPrompt: function (data) {\n                prompt({\n                    title: $t(data.title),\n                    content:  $t(data.content),\n                    modalClass: 'media-gallery-folder-prompt',\n                    validation: true,\n                    validationRules: ['required-entry', 'validate-alphanum'],\n                    attributesField: {\n                        name: 'folder_name',\n                        'data-validate': '{required:true, validate-alphanum}',\n                        maxlength: '128'\n                    },\n                    attributesForm: {\n                        novalidate: 'novalidate',\n                        action: ''\n                    },\n                    context: this,\n                    actions: data.actions,\n                    buttons: data.buttons\n                });\n            },\n\n        /**\n          * Confirmation popup for delete folder action.\n          */\n        deleteFolder: function () {\n            confirm({\n                title: $t('Are you sure you want to delete this folder?'),\n                modalClass: 'delete-folder-confirmation-popup',\n                content: $t('The following folder is going to be deleted: %1')\n                    .replace('%1', this.selectedFolder()),\n                actions: {\n\n                    /**\n                      * Delete folder on button click\n                      */\n                    confirm: function () {\n                        deleteDirectory(\n                            this.directoryTree().deleteDirectoryUrl,\n                            this.selectedFolder()\n                        ).then(function () {\n                            this.directoryTree().removeNode();\n                            this.directoryTree().selectStorageRoot();\n                            $(window).trigger('folderDeleted.enhancedMediaGallery');\n                        }.bind(this)).fail(function (error) {\n                            uiAlert({\n                                content: error\n                            });\n                        });\n                    }.bind(this)\n                }\n            });\n        },\n\n        /**\n         * Set inactive all nodes, adds disable state to Delete Folder Button\n         */\n        setInActive: function () {\n            this.selectedFolder(null);\n            $(this.deleteButtonSelector).attr('disabled', true).addClass('disabled');\n        },\n\n        /**\n         * Set active node, remove disable state from Delete Forlder button\n         *\n         * @param {String} folderId\n         */\n        setActive: function (folderId) {\n            if (!this.allowedActions.includes('delete_folder')) {\n                return;\n            }\n\n            this.selectedFolder(folderId);\n            $(this.deleteButtonSelector).removeAttr('disabled').removeClass('disabled');\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/directory/actions/createDirectory.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/translate'\n], function ($, $t) {\n    'use strict';\n\n    return function (createFolderUrl, paths) {\n        var deferred = $.Deferred(),\n            message,\n            data = {\n                paths: paths\n            };\n\n        $.ajax({\n            type: 'POST',\n            url: createFolderUrl,\n            dataType: 'json',\n            showLoader: true,\n            data: data,\n            context: this,\n\n            /**\n             * Resolve  if success, reject with response message othervise\n             *\n             * @param {Object} response\n             */\n            success: function (response) {\n                if (response.success) {\n                    deferred.resolve(response.message);\n\n                    return;\n                }\n\n                deferred.reject(response.message);\n            },\n\n            /**\n             * Extract the message and reject\n             *\n             * @param {Object} response\n             */\n            error: function (response) {\n\n                if (typeof response.responseJSON === 'undefined' ||\n                    typeof response.responseJSON.message === 'undefined'\n                ) {\n                    message = $t('Could not create the directory.');\n                } else {\n                    message = response.responseJSON.message;\n                }\n                deferred.reject(message);\n            }\n        });\n\n        return deferred.promise();\n    };\n});\n","Magento_MediaGalleryUi/js/directory/actions/deleteDirectory.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/translate'\n], function ($, $t) {\n    'use strict';\n\n    return function (deleteFolderUrl, path) {\n        var deferred = $.Deferred(),\n            message;\n\n        $.ajax({\n            type: 'POST',\n            url: deleteFolderUrl,\n            dataType: 'json',\n            showLoader: true,\n            data: {\n                path: path\n            },\n            context: this,\n\n            /**\n             * Resolve  if delete folder success, reject with response message othervise\n             *\n             * @param {Object} response\n             */\n            success: function (response) {\n                if (response.success) {\n                    deferred.resolve(response.message);\n\n                    return;\n                }\n\n                deferred.reject(response.message);\n            },\n\n            /**\n             * Extract the message and reject\n             *\n             * @param {Object} response\n             */\n            error: function (response) {\n\n                if (typeof response.responseJSON === 'undefined' ||\n                    typeof response.responseJSON.message === 'undefined'\n                ) {\n                    message = $t('Could not delete the directory.');\n                } else {\n                    message = response.responseJSON.message;\n                }\n                deferred.reject(message);\n            }\n        });\n\n        return deferred.promise();\n    };\n});\n","Magento_MediaGalleryUi/js/grid/messages.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiElement',\n    'escaper'\n], function (Element, escaper) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            template: 'Magento_MediaGalleryUi/grid/messages',\n            messageDelay: 5,\n            messages: [],\n            allowedTags: ['div', 'span', 'b', 'strong', 'i', 'em', 'u', 'a']\n        },\n\n        /**\n         * Init observable variables\n         * @return {Object}\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'messages'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Get messages\n         *\n         * @returns {Array}\n         */\n        get: function () {\n            return this.messages();\n        },\n\n        /**\n         * Add message\n         *\n         * @param {String} type\n         * @param {String} message\n         */\n        add: function (type, message) {\n            this.messages.push({\n                code: type,\n                message: message\n            });\n        },\n\n        /**\n         * Clear messages\n         */\n        clear: function () {\n            this.messages.removeAll();\n        },\n\n        /**\n         * Schedule message cleanup\n         *\n         * @param {Number} delay\n         */\n        scheduleCleanup: function (delay) {\n            // eslint-disable-next-line no-unused-vars\n            var timerId;\n\n            delay = delay || this.messageDelay;\n\n            timerId = setTimeout(function () {\n                clearTimeout(timerId);\n                this.clear();\n            }.bind(this), Number(delay) * 1000);\n        },\n\n        /**\n         * Prepare the given message to be rendered as HTML\n         *\n         * @param {String} message\n         * @return {String}\n         */\n        prepareMessageUnsanitizedHtml: function (message) {\n            return escaper.escapeHtml(message, this.allowedTags);\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/grid/sortBy.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/grid/sortBy'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            columnIndexMap: {}\n        },\n\n        /**\n         * Prepared sort order options\n         */\n        preparedOptions: function (columns) {\n            var index = 0,\n                sortBy;\n\n            if (columns && columns.length > 0) {\n                columns.map(function (column) {\n                    if (column.sortable === true) {\n                        sortBy = column['sort_by'] || {};\n\n                        if (sortBy.excluded) {\n                            return;\n                        }\n\n                        this.options.push({\n                            value: column.index,\n                            label: column.label,\n                            sortByField: sortBy.field,\n                            sortDirection: sortBy.direction\n                        });\n\n                        this.columnIndexMap[column.index] = index++;\n\n                        this.isVisible(true);\n                    } else {\n                        this.isVisible(false);\n                    }\n                }.bind(this));\n            }\n        },\n\n        /**\n         * Apply changes\n         */\n        applyChanges: function () {\n            var column = this.getColumn(this.selectedOption());\n\n            this.applied({\n                field: column.sortByField || this.selectedOption(),\n                direction: column.sortDirection || this.sorting\n            });\n        },\n\n        /**\n         * Get column by index\n         *\n         * @param {String} optionIndex\n         * @returns {Object}\n         */\n        getColumn: function (optionIndex) {\n            return this.options[this.columnIndexMap[optionIndex]];\n        },\n\n        /**\n         * Select default option\n         */\n        selectDefaultOption: function () {\n            this.selectedOption(this.options[0].value);\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/grid/masonry.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/grid/masonry',\n    'jquery'\n], function (Masonry, $) {\n    'use strict';\n\n    return Masonry.extend({\n        defaults: {\n            modules: {\n                provider: '${ $.provider }'\n            }\n        },\n\n        /**\n         * Init component\n         *\n         * @return {Object}\n         */\n        initialize: function () {\n            this._super();\n            this.initEvents();\n\n            return this;\n        },\n\n        /**\n         * Initialize events\n         */\n        initEvents: function () {\n            $(window).on('folderDeleted.enhancedMediaGallery', this.reloadGrid.bind(this));\n        },\n\n        /**\n         * Reload grid\n         */\n        reloadGrid: function () {\n            var provider = this.provider(),\n                dataStorage = provider.storage();\n\n            dataStorage.clearRequests();\n            provider.reload();\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/grid/columns/image.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Ui/js/grid/columns/column',\n    'uiLayout',\n    'underscore'\n], function ($, Column, layout, _) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'Magento_MediaGalleryUi/grid/columns/image',\n            messageContentSelector: 'ul.messages',\n            mediaGalleryContainerSelector: '.media-gallery-container',\n            deleteImageUrl: 'media_gallery/image/delete',\n            addSelectedBtnSelector: '#add_selected',\n            deleteSelectedBtnSelector: '#delete_selected',\n            gridSelector: '[data-id=\"media-gallery-masonry-grid\"]',\n            selected: null,\n            allowedActions: [],\n            fields: {\n                id: 'id',\n                url: 'url',\n                alt: 'name'\n            },\n            modules: {\n                actions: '${ $.name }_actions',\n                provider: '${ $.provider }',\n                messages: '${ $.messagesName }',\n                massaction: '${ $.massactionComponentName }'\n            },\n            imports: {\n                activeDirectory: '${ $.mediaGalleryDirectoryComponent }:activeNode'\n            },\n            listens: {\n                activeDirectory: 'selectDirectoryHandle',\n                '${ $.massactionComponentName }:massActionMode': 'updateSelected'\n            },\n            viewConfig: [\n                {\n                    component: 'Magento_MediaGalleryUi/js/grid/columns/image/actions',\n                    name: '${ $.name }_actions',\n                    imageModelName: '${ $.name }',\n                    allowedActions: '${ $.allowedActions }'\n                }\n            ]\n        },\n\n        /**\n         * Initialize the component\n         *\n         * @returns {Object}\n         */\n        initialize: function () {\n            this._super();\n            this.initView();\n            $(window).on('fileDeleted.enhancedMediaGallery', this.reloadMediaGrid.bind(this));\n            $(window).on('reload.MediaGallery', this.reloadGrid.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Init observable variables\n         * @return {Object}\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'selected'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Is massaction mode active.\n         */\n        isMassActionMode: function () {\n            return this.massaction().massActionMode();\n        },\n\n        /**\n         * Returns url to given record.\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {String}\n         */\n        getUrl: function (record) {\n            return record[this.fields.url];\n        },\n\n        /**\n         * Returns id to given record.\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {Number}\n         */\n        getId: function (record) {\n            return record[this.fields.id];\n        },\n\n        /**\n         * Update selected items per massaction mode.\n         */\n        updateSelected: function () {\n            this.selected({});\n            this.hideAddSelectedAndDeleteButon();\n        },\n\n        /**\n         * Returns name to given record.\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {String}\n         */\n        getImageAlt: function (record) {\n            return record[this.fields.alt];\n        },\n\n        /**\n         * Check if the record is currently selected\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {Boolean}\n         */\n        isSelected: function (record) {\n            if (_.isNull(this.selected())) {\n                return false;\n            }\n\n            if (this.massaction().massActionMode()) {\n                return this.selected()[record.id];\n            }\n\n            return this.getId(this.selected()) === this.getId(record);\n        },\n\n        /**\n         * Click on image\n         *\n         * @param {Object} record\n         * @param {Boolean} collapsibleOpened\n         */\n        clickOnImage: function (record, collapsibleOpened) {\n            if (!collapsibleOpened) {\n                this.select(record);\n            }\n        },\n\n        /**\n         * Click on three-dots\n         *\n         * @param {Object} record\n         * @param {Boolean} collapsibleOpened\n         */\n        clickOnThreeDots: function (record, collapsibleOpened) {\n            if (!this.isSelected(record) || collapsibleOpened) {\n                this.select(record);\n            }\n        },\n\n        /**\n         * Handle checkbox click.\n         */\n        checkboxClick: function (record) {\n            var items = this.selected();\n\n            if (this.selected()[record.id])  {\n                delete items[record.id];\n                this.selected(items);\n            } else {\n                items[record.id] = record.id;\n                this.selected(items);\n            }\n\n            return true;\n        },\n\n        /**\n         * Set the record as selected\n         */\n        select: function (record) {\n            if (this.massaction().massActionMode()) {\n                return this.checkboxClick(record);\n            }\n\n            this.isSelected(record) ? this.selected(null) : this.selected(record);\n            this.toggleAddSelectedButton();\n\n            return true;\n        },\n\n        /**\n         * Deselect the record\n         */\n        deselectImage: function () {\n            this.selected(null);\n            this.toggleAddSelectedButton();\n        },\n\n        /**\n         * Get the selected record\n         * @returns {Object}\n         */\n        getSelected: function () {\n            return this.selected();\n        },\n\n        /**\n         * Initialize child components\n         *\n         * @returns {Object}\n         */\n        initView: function () {\n            layout(this.viewConfig);\n\n            return this;\n        },\n\n        /**\n         * Toggle add selected button\n         */\n        toggleAddSelectedButton: function () {\n            if (this.selected() === null) {\n                this.hideAddSelectedAndDeleteButon();\n\n                return;\n            }\n\n            if (this.allowedActions.includes('insert')) {\n                $(this.addSelectedBtnSelector).removeClass('no-display');\n            }\n\n            if (this.allowedActions.includes('delete')) {\n                $(this.deleteSelectedBtnSelector).removeClass('no-display');\n            }\n        },\n\n        /**\n         * Hide add selected and Delete button\n         */\n        hideAddSelectedAndDeleteButon: function () {\n            $(this.addSelectedBtnSelector).addClass('no-display');\n            $(this.deleteSelectedBtnSelector).addClass('no-display');\n        },\n\n        /**\n         * @param {jQuery.event} e\n         * @param {Object} data\n         */\n        reloadMediaGrid: function (e, data) {\n            if (data.reload) {\n                this.reloadGrid();\n            }\n\n            if (data.message && data.code) {\n                this.addMessage(data.code, data.message);\n            }\n            this.hideAddSelectedAndDeleteButon();\n        },\n\n        /**\n         * Reload grid\n         */\n        reloadGrid: function () {\n            var provider = this.provider(),\n                dataStorage = provider.storage();\n\n            dataStorage.clearRequests();\n            provider.reload();\n        },\n\n        /**\n         * Add message\n         *\n         * @param {String} code\n         * @param {String} message\n         */\n        addMessage: function (code, message) {\n            this.messages().add(code, message);\n            this.closeContextMenu();\n            this.scrollToMessageContent();\n            this.messages().scheduleCleanup();\n        },\n\n        /**\n         * Listener to select directory event\n         *\n         * @param {String} path\n         */\n        selectDirectoryHandle: function (path) {\n            if (this.selected() &&\n                this.selected().directory !== path  &&\n                !this.massaction().massActionMode()) {\n                this.deselectImage();\n            }\n        },\n\n        /**\n         * Action to close the context menu in media gallery.\n         */\n        closeContextMenu: function () {\n            $(this.gridSelector).click();\n        },\n\n        /**\n         * Scroll to the top of media gallery page\n         */\n        scrollToMessageContent: function () {\n            var scrollTargetElement = $(this.messageContentSelector),\n                scrollTargetContainer = $(this.mediaGalleryContainerSelector);\n\n            scrollTargetContainer.find(scrollTargetElement).get(0).scrollIntoView({\n                behavior: 'smooth',\n                block: 'center',\n                inline: 'nearest'\n            });\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/grid/columns/image/insertImageAction.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global FORM_KEY, tinyMceEditors */\ndefine([\n    'jquery',\n    'wysiwygAdapter',\n    'underscore',\n    'mage/translate'\n], function ($, wysiwyg, _, $t) {\n    'use strict';\n\n    return {\n\n        /**\n         * Insert provided image in wysiwyg if enabled, or widget\n         *\n         * @param {Object} record\n         * @param {Object} config\n         * @returns {Boolean}\n         */\n        insertImage: function (record, config) {\n            var targetElement;\n\n            if (record === null) {\n                return false;\n            }\n            targetElement = this.getTargetElement(window.MediabrowserUtility.targetElementId);\n\n            if (!targetElement.length) {\n                window.MediabrowserUtility.closeDialog();\n                throw $t('Target element not found for content update');\n            }\n\n            $.ajax({\n                url: config.onInsertUrl,\n                data: {\n                    filename: record['encoded_id'],\n                    'store_id': config.storeId,\n                    'as_is': targetElement.is('textarea') ? 1 : 0,\n                    'force_static_path': targetElement.data('force_static_path') ? 1 : 0,\n                    'form_key': FORM_KEY\n                },\n                context: this,\n                showLoader: true\n            }).done($.proxy(function (data) {\n                if (targetElement.is('textarea')) {\n                    this.insertAtCursor(targetElement.get(0), data.content);\n                    targetElement.focus();\n                    $(targetElement).change();\n                } else {\n                    targetElement.val(data.content)\n                        .data('size', data.size)\n                        .data('mime-type', data.type)\n                        .trigger('change');\n                }\n            }, this));\n            window.MediabrowserUtility.closeDialog();\n            targetElement.focus();\n        },\n\n        /**\n         * Insert image to target instance.\n         *\n         * @param {Object} element\n         * @param {*} value\n         */\n        insertAtCursor: function (element, value) {\n            var sel, startPos, endPos, scrollTop;\n\n            if ('selection' in document) {\n                //For browsers like Internet Explorer\n                element.focus();\n                sel = document.selection.createRange();\n                sel.text = value;\n                element.focus();\n            } else if (element.selectionStart || element.selectionStart == '0') { //eslint-disable-line eqeqeq\n                //For browsers like Firefox and Webkit based\n                startPos = element.selectionStart;\n                endPos = element.selectionEnd;\n                scrollTop = element.scrollTop;\n                element.value = element.value.substring(0, startPos) + value +\n                    element.value.substring(startPos, endPos) + element.value.substring(endPos, element.value.length);\n                element.focus();\n                element.selectionStart = startPos + value.length;\n                element.selectionEnd = startPos + value.length + element.value.substring(startPos, endPos).length;\n                element.scrollTop = scrollTop;\n            } else {\n                element.value += value;\n                element.focus();\n            }\n        },\n\n        /**\n         * Return opener Window object if it exists, not closed and editor is active\n         *\n         * @param {String} targetElementId\n         * return {Object|null}\n         */\n        getMediaBrowserOpener: function (targetElementId) {\n            if (!_.isUndefined(wysiwyg) && wysiwyg.get(targetElementId) && !_.isUndefined(tinyMceEditors) &&\n                !tinyMceEditors.get(targetElementId).getMediaBrowserOpener().closed\n            ) {\n                return tinyMceEditors.get(targetElementId).getMediaBrowserOpener();\n            }\n\n            return null;\n        },\n\n        /**\n         * Get target element\n         *\n         * @param {String} targetElementId\n         * @returns {*|n.fn.init|jQuery|HTMLElement}\n         */\n        getTargetElement: function (targetElementId) {\n            var opener;\n\n            if (!_.isUndefined(wysiwyg) && wysiwyg.get(targetElementId)) {\n                opener = this.getMediaBrowserOpener(targetElementId) || window;\n                targetElementId = tinyMceEditors.get(targetElementId).getMediaBrowserTargetElementId();\n\n                return $(opener.document.getElementById(targetElementId));\n            }\n\n            return $('#' + targetElementId);\n        }\n    };\n});\n","Magento_MediaGalleryUi/js/grid/columns/image/actions.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'uiComponent',\n    'Magento_MediaGalleryUi/js/action/deleteImageWithDetailConfirmation',\n    'Magento_MediaGalleryUi/js/grid/columns/image/insertImageAction',\n    'mage/translate',\n    'Magento_Ui/js/lib/view/utils/async'\n], function ($, _, Component, deleteImageWithDetailConfirmation, image, $t) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_MediaGalleryUi/grid/columns/image/actions',\n            mediaGalleryImageDetailsName: 'mediaGalleryImageDetails',\n            mediaGalleryEditDetailsName: 'mediaGalleryEditDetails',\n            allowedActions: [],\n            actionsList: [\n                {\n                    name: 'image-details',\n                    title: $t('View Details'),\n                    classes: 'action-menu-item',\n                    handler: 'viewImageDetails'\n                },\n                {\n                    name: 'edit',\n                    title: $t('Edit'),\n                    classes: 'action-menu-item',\n                    handler: 'editImageDetails'\n                },\n                {\n                    name: 'delete',\n                    title: $t('Delete'),\n                    classes: 'action-menu-item media-gallery-delete-assets',\n                    handler: 'deleteImageAction'\n                }\n            ],\n            modules: {\n                imageModel: '${ $.imageModelName }',\n                mediaGalleryImageDetails: '${ $.mediaGalleryImageDetailsName }',\n                mediaGalleryEditDetails: '${ $.mediaGalleryEditDetailsName }'\n            }\n        },\n\n        /**\n         * Initialize the component\n         *\n         * @returns {Object}\n         */\n        initialize: function () {\n            this._super();\n            this.initEvents();\n\n            this.actionsList = this.actionsList.filter(function (item) {\n                return this.allowedActions.includes(item.name);\n            }.bind(this));\n\n            if (!this.allowedActions.includes('delete')) {\n                $.async('.media-gallery-delete-assets', function () {\n                    $('.media-gallery-delete-assets').off('click').addClass('action-disabled');\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Initialize image action events\n         */\n        initEvents: function () {\n            $(this.imageModel().addSelectedBtnSelector).click(function () {\n                image.insertImage(\n                    this.imageModel().getSelected(),\n                    {\n                        onInsertUrl: this.imageModel().onInsertUrl,\n                        storeId: this.imageModel().storeId\n                    }\n                );\n            }.bind(this));\n            $(this.imageModel().deleteSelectedBtnSelector).click(function () {\n                this.deleteImageAction(this.imageModel().selected());\n            }.bind(this));\n\n        },\n\n        /**\n         * Delete image action\n         *\n         * @param {Object} record\n         */\n        deleteImageAction: function (record) {\n            var imageDetailsUrl = this.mediaGalleryImageDetails().imageDetailsUrl,\n                deleteImageUrl = this.imageModel().deleteImageUrl;\n\n            deleteImageWithDetailConfirmation.deleteImageAction([record.id], imageDetailsUrl, deleteImageUrl);\n        },\n\n        /**\n         * View image details\n         *\n         * @param {Object} record\n         */\n        viewImageDetails: function (record) {\n            var recordId = this.imageModel().getId(record);\n\n            this.mediaGalleryImageDetails().showImageDetailsById(recordId);\n        },\n\n        /**\n         * Edit image details\n         *\n         * @param {Object} record\n         */\n        editImageDetails: function (record) {\n            var recordId = this.imageModel().getId(record);\n\n            this.mediaGalleryEditDetails().showEditDetailsPanel(recordId);\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/grid/massaction/massactionView.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'uiComponent',\n    'mage/translate',\n    'text!Magento_MediaGalleryUi/template/grid/massactions/massactionButtons.html'\n], function ($, Component, $t, massactionButtons) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            gridSelector: '[data-id=\"media-gallery-masonry-grid\"]',\n            standAloneTitle: 'Manage Gallery',\n            slidePanelTitle: 'Media Gallery',\n            defaultTitle: null,\n            are: null,\n            standAloneArea: 'standalone',\n            slidepanelArea: 'slidepanel',\n            massactionButtonsSelector: '.massaction-buttons',\n            buttonsSelectorStandalone: '.page-actions-buttons',\n            buttonsSelectorSlidePanel: '.page-actions.floating-header',\n            buttons: '.page-main-actions :button',\n            massactionModeTitle: $t('Select Images to Delete')\n        },\n\n        /**\n         * Initializes media gallery massaction component.\n         *\n         * @returns {Sticky} Chainable.\n         */\n        initialize: function () {\n            this._super().observe([\n                'massActionMode'\n            ]);\n\n            return this;\n        },\n\n        /**\n         * Switch massaction view state per active mode.\n         */\n        switchView: function () {\n            this.changePageTitle();\n            this.switchButtons();\n        },\n\n        /**\n         * Hide or show buttons per active mode.\n         */\n        switchButtons: function () {\n            if (this.massActionMode()) {\n                this.activateMassactionButtonView();\n            } else {\n                this.revertButtonsToDefaultView();\n            }\n        },\n\n        /**\n         * Sets buttons to default regular -mode view.\n         */\n        revertButtonsToDefaultView: function () {\n            $(this.buttons).removeClass('no-display');\n            $(this.massactionButtonsSelector).remove();\n        },\n\n        /**\n          * Activate mass action buttons view\n          */\n        activateMassactionButtonView: function () {\n            var buttonsContainer;\n\n            $(this.buttons).addClass('no-display');\n\n            buttonsContainer =  this.area === this.standAloneArea ?\n                this.buttonsSelectorStandalone :\n                this.buttonsSelectorSlidePanel;\n\n            $(buttonsContainer).append(massactionButtons);\n            $(this.massactionButtonsSelector).applyBindings();\n        },\n\n        /**\n         * Change page title per active mode.\n         */\n        changePageTitle: function () {\n            var title = $('h1:contains(' + this.standAloneTitle + ')'),\n                titleSelector;\n\n            if (title.length === 1)  {\n                titleSelector = title;\n                this.area = this.standAloneArea;\n            } else {\n                titleSelector = $('h1:contains(' + this.slidePanelTitle + ')');\n                this.area = this.slidepanelArea;\n            }\n\n            if (this.massActionMode()) {\n                this.defaultTitle = titleSelector.text();\n                titleSelector.text(this.massactionModeTitle);\n            } else {\n                titleSelector = $('h1:contains(' + this.massactionModeTitle + ')');\n                titleSelector.text(this.defaultTitle);\n            }\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/grid/massaction/massactions.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'uiComponent',\n    'Magento_MediaGalleryUi/js/action/deleteImageWithDetailConfirmation',\n    'uiLayout',\n    'underscore',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate'\n], function ($, Component, DeleteImages, Layout, _, uiAlert, $t) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            allowedActions: [],\n            deleteButtonSelector: '#delete_selected_massaction',\n            deleteImagesSelector: '#delete_massaction',\n            mediaGalleryImageDetailsName: 'mediaGalleryImageDetails',\n            modules: {\n                massactionView: '${ $.name }_view',\n                imageModel: '${ $.imageModelName }',\n                mediaGalleryImageDetails: '${ $.mediaGalleryImageDetailsName }'\n            },\n            viewConfig: [\n                {\n                    component: 'Magento_MediaGalleryUi/js/grid/massaction/massactionView',\n                    name: '${ $.name }_view'\n                }\n            ],\n            imports: {\n                imageItems: '${ $.mediaGalleryProvider }:data.items'\n            },\n            listens: {\n                imageItems: 'checkButtonVisibility'\n            },\n            exports: {\n                massActionMode: '${ $.name }_view:massActionMode'\n            }\n        },\n\n        /**\n         * Initializes media gallery massaction component.\n         *\n         * @returns {Sticky} Chainable.\n         */\n        initialize: function () {\n            this._super().observe([\n                'massActionMode'\n            ]);\n            this.initView();\n            this.initEvents();\n\n            return this;\n        },\n\n        /**\n         * Initialize child components\n         *\n         * @returns {Object}\n         */\n        initView: function () {\n            Layout(this.viewConfig);\n\n            return this;\n        },\n\n        /**\n         * Initilize massactions events for media gallery grid.\n         */\n        initEvents: function () {\n            $(window).on('massAction.MediaGallery', function () {\n                if (this.massActionMode()) {\n                    return;\n                }\n                this.imageModel().selected(null);\n                this.massActionMode(true);\n                this.switchMode();\n            }.bind(this));\n\n            $(window).on('terminateMassAction.MediaGallery', function () {\n                if (!this.massActionMode()) {\n                    return;\n                }\n\n                this.massActionMode(false);\n                this.switchMode();\n                this.imageModel().updateSelected();\n            }.bind(this));\n        },\n\n        /**\n         * Return total selected items.\n         */\n        getSelectedCount: function () {\n            if (this.massActionMode() && !_.isNull(this.imageModel().selected())) {\n                return Object.keys(this.imageModel().selected()).length;\n            }\n\n            return 0;\n        },\n\n        /**\n         * If images records less than one, disable \"delete images\" button\n         */\n        checkButtonVisibility: function () {\n            if (!this.allowedActions.includes('delete_assets')) {\n                return;\n            }\n\n            if (this.imageItems.length < 1) {\n                $(this.deleteImagesSelector).addClass('disabled');\n            } else {\n                $(this.deleteImagesSelector).removeClass('disabled');\n            }\n        },\n\n        /**\n         * Switch massaction per current event.\n         */\n        switchMode: function () {\n            this.massactionView().switchView();\n            this.handleDeleteAction();\n        },\n\n        /**\n         * Change Default  behavior of delete image to bulk deletion.\n         */\n        handleDeleteAction: function () {\n            if (this.massActionMode()) {\n                $(this.deleteButtonSelector).on('massDelete.MediaGallery', function () {\n                    if (this.getSelectedCount() < 1) {\n                        uiAlert({\n                            content: $t('You need to select at least one image')\n                        });\n\n                    } else {\n                        DeleteImages.deleteImageAction(\n                            this.imageModel().selected(),\n                            this.mediaGalleryImageDetails().imageDetailsUrl,\n                            this.imageModel().deleteImageUrl\n                        ).then(function (response) {\n                            if (response.status === 'canceled') {\n                                return;\n                            }\n                            $(window).trigger('terminateMassAction.MediaGallery');\n                        });\n                    }\n                }.bind(this));\n            }\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/image/image-actions.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'uiElement',\n    'Magento_MediaGalleryUi/js/action/deleteImageWithDetailConfirmation',\n    'Magento_MediaGalleryUi/js/grid/columns/image/insertImageAction',\n    'Magento_MediaGalleryUi/js/action/saveDetails',\n    'mage/validation'\n], function ($, _, Element, deleteImageWithDetailConfirmation, addSelected, saveDetails) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            modalSelector: '',\n            modalWindowSelector: '',\n            mediaGalleryImageDetailsName: 'mediaGalleryImageDetails',\n            mediaGalleryEditDetailsName: 'mediaGalleryEditDetails',\n            template: 'Magento_MediaGalleryUi/image/actions',\n            modules: {\n                imageModel: '${ $.imageModelName }',\n                mediaGalleryImageDetails: '${ $.mediaGalleryImageDetailsName }',\n                mediaGalleryEditDetails: '${ $.mediaGalleryEditDetailsName }'\n            }\n        },\n\n        /**\n         * Initialize the component\n         *\n         * @returns {Object}\n         */\n        initialize: function () {\n            this._super();\n            $(window).on('fileDeleted.enhancedMediaGallery', this.closeViewDetailsModal.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Close the images details modal\n         */\n        closeModal: function () {\n            var modalElement = $(this.modalSelector),\n                modalWindow = $(this.modalWindowSelector);\n\n            if (!modalWindow.hasClass('_show') || !modalElement.length || _.isUndefined(modalElement.modal)) {\n                return;\n            }\n\n            this.mediaGalleryEditDetails().keywordsSelect().cacheOptions.plain = [];\n            modalElement.modal('closeModal');\n        },\n\n        /**\n         * Opens the image edit panel\n         */\n        editImageAction: function () {\n            var record = this.imageModel().getSelected().id;\n\n            this.mediaGalleryEditDetails().showEditDetailsPanel(record);\n        },\n\n        /**\n         * Delete image action\n         */\n        deleteImageAction: function () {\n            var imageDetailsUrl = this.mediaGalleryImageDetails().imageDetailsUrl,\n                deleteImageUrl = this.imageModel().deleteImageUrl;\n\n            deleteImageWithDetailConfirmation.deleteImageAction(\n                [this.imageModel().getSelected().id],\n                imageDetailsUrl,\n                deleteImageUrl\n            );\n        },\n\n        /**\n         * Save image details action\n         */\n        saveImageDetailsAction: function () {\n            var saveDetailsUrl = this.mediaGalleryEditDetails().saveDetailsUrl,\n                modalElement = $(this.modalSelector),\n                form = modalElement.find('#image-edit-details-form'),\n                imageId = this.imageModel().getSelected().id,\n                keywords = this.mediaGalleryEditDetails().selectedKeywords(),\n                imageDetails = this.mediaGalleryImageDetails(),\n                imageEditDetails = this.mediaGalleryEditDetails();\n\n            if (form.validation('isValid')) {\n                saveDetails(\n                    saveDetailsUrl,\n                    [form.serialize(), $.param({\n                        'keywords': keywords\n                    })].join('&')\n                ).then(function () {\n                    this.closeModal();\n                    this.imageModel().reloadGrid();\n                    imageDetails.removeCached(imageId);\n                    imageEditDetails.removeCached(imageId);\n\n                    if (imageDetails.isActive()) {\n                        imageDetails.showImageDetailsById(imageId);\n                    }\n                }.bind(this));\n            }\n        },\n\n        /**\n         * Add Image\n         */\n        addImage: function () {\n            addSelected.insertImage(\n                this.imageModel().getSelected(),\n                {\n                    onInsertUrl: this.imageModel().onInsertUrl,\n                    storeId: this.imageModel().storeId\n                }\n            );\n            this.closeModal();\n        },\n\n        /**\n         * Close view details modal after confirm deleting image\n         */\n        closeViewDetailsModal: function () {\n            this.closeModal();\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/image/image-details.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'uiComponent',\n    'Magento_MediaGalleryUi/js/action/getDetails'\n], function ($, _, Component, getDetails) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_MediaGalleryUi/image/image-details',\n            modalSelector: '',\n            modalWindowSelector: '',\n            imageDetailsUrl: '/media_gallery/image/details',\n            images: [],\n            tagListLimit: 7,\n            showAllTags: false,\n            image: null,\n            modules: {\n                mediaGridMessages: '${ $.mediaGridMessages }'\n            }\n        },\n\n        /**\n         * Init observable variables\n         *\n         * @return {Object}\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'image',\n                    'showAllTags'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Show image details by ID\n         *\n         * @param {String} imageId\n         */\n        showImageDetailsById: function (imageId) {\n            if (_.isUndefined(this.images[imageId])) {\n                getDetails(this.imageDetailsUrl, [imageId]).then(function (imageDetails) {\n                    this.images[imageId] = imageDetails[imageId];\n                    this.image(this.images[imageId]);\n                    this.openImageDetailsModal();\n                }.bind(this)).fail(function (error) {\n                    this.addMediaGridMessage('error', error);\n                }.bind(this));\n\n                return;\n            }\n\n            if (this.image() && this.image().id === imageId) {\n                this.openImageDetailsModal();\n\n                return;\n            }\n\n            this.image(this.images[imageId]);\n            this.openImageDetailsModal();\n        },\n\n        /**\n         * Open image details popup\n         */\n        openImageDetailsModal: function () {\n            var modalElement = $(this.modalSelector);\n\n            if (!modalElement.length || _.isUndefined(modalElement.modal)) {\n                return;\n            }\n\n            this.showAllTags(false);\n            modalElement.modal('openModal');\n        },\n\n        /**\n         * Close image details popup\n         */\n        closeImageDetailsModal: function () {\n            var modalElement = $(this.modalSelector);\n\n            if (!modalElement.length || _.isUndefined(modalElement.modal)) {\n                return;\n            }\n\n            modalElement.modal('closeModal');\n        },\n\n        /**\n         * Add media grid message\n         *\n         * @param {String} code\n         * @param {String} message\n         */\n        addMediaGridMessage: function (code, message) {\n            this.mediaGridMessages().add(code, message);\n            this.mediaGridMessages().scheduleCleanup();\n        },\n\n        /**\n         * Get tag text\n         *\n         * @param {String} tagText\n         * @param {Number} tagIndex\n         * @return {String}\n         */\n        getTagText: function (tagText, tagIndex) {\n            return tagText + (this.image().tags.length - 1 === tagIndex ? '' : ',');\n        },\n\n        /**\n         * Show all image tags\n         */\n        showMoreImageTags: function () {\n            this.showAllTags(true);\n        },\n\n        /**\n         * Is value an object\n         *\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArray: function (value) {\n            return _.isArray(value);\n        },\n\n        /**\n         * Is value not empty\n         *\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        notEmpty: function (value) {\n            return value.length > 0;\n        },\n\n        /**\n         * Get name and number text for used in link\n         *\n         * @param {Object} item\n         * @returns {String}\n         */\n        getUsedInText: function (item) {\n            return item.name +  '(' + item.number + ')';\n        },\n\n        /**\n         * Get filter url\n         *\n         * @param {String} link\n         */\n        getFilterUrl: function (link) {\n            return link + '?filters[asset_id]=[' + this.image().id + ']';\n        },\n\n        /**\n         * Check if details modal is active\n         * @return {Boolean}\n         */\n        isActive: function () {\n            return $(this.modalWindowSelector).hasClass('_show');\n        },\n\n        /**\n         * Remove image details\n         *\n         * @param {String} id\n         */\n        removeCached: function (id) {\n            delete this.images[id];\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/image/image-edit.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'uiComponent',\n    'uiLayout',\n    'Magento_Ui/js/lib/key-codes',\n    'Magento_MediaGalleryUi/js/action/getDetails',\n    'mage/validation'\n], function ($, _, Component, layout, keyCodes, getDetails) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_MediaGalleryUi/image/image-edit',\n            modalSelector: '.media-gallery-edit-image-details-modal',\n            imageEditDetailsUrl: '/media_gallery/image/details',\n            saveDetailsUrl: '/media_gallery/image/saveDetails',\n            images: [],\n            image: null,\n            keywordOptions: [],\n            selectedKeywords: [],\n            newKeyword: '',\n            newKeywordSelector: '#keyword',\n            modules: {\n                mediaGridMessages: '${ $.mediaGridMessages }',\n                keywordsSelect: '${ $.name }_keywords'\n            },\n            viewConfig: [\n                {\n                    component: 'Magento_Ui/js/form/element/ui-select',\n                    name: '${ $.name }_keywords',\n                    template: 'ui/grid/filters/elements/ui-select',\n                    disableLabel: true\n                }\n            ],\n            exports: {\n                keywordOptions: '${ $.name }_keywords:options'\n            },\n            links: {\n                selectedKeywords: '${ $.name }_keywords:value'\n            }\n        },\n\n        /**\n         * Initialize the component\n         *\n         * @returns {Object}\n         */\n        initialize: function () {\n            this._super().initView();\n\n            return this;\n        },\n\n        /**\n         * Add a new keyword to select\n         */\n        addKeyword: function () {\n            var options = this.keywordOptions(),\n                selected = this.selectedKeywords(),\n                newKeywordField = $(this.newKeywordSelector);\n\n            newKeywordField.validation();\n\n            if (!newKeywordField.validation('isValid') || this.newKeyword() === '') {\n                return;\n            }\n\n            options.push(this.getOptionForKeyword(this.newKeyword()));\n            selected.push(this.newKeyword());\n            this.newKeyword('');\n\n            this.keywordOptions(options);\n            this.selectedKeywords(selected);\n        },\n\n        /**\n         * Create an option object based on keyword string\n         *\n         * @param {String} keyword\n         * @returns {Object}\n         */\n        getOptionForKeyword: function (keyword) {\n            return {\n                'is_active': 1,\n                level: 1,\n                value: keyword,\n                label: keyword\n            };\n        },\n\n        /**\n         * Convert array of keywords to options format\n         *\n         * @param {Array} tags\n         */\n        setKeywordOptions: function (tags) {\n            var options = [];\n\n            tags.forEach(function (tag) {\n                options.push(this.getOptionForKeyword(tag));\n            }.bind(this));\n\n            this.keywordOptions(options);\n            this.selectedKeywords(tags);\n        },\n\n        /**\n         * Initialize child components\n         *\n         * @returns {Object}\n         */\n        initView: function () {\n            layout(this.viewConfig);\n\n            return this;\n        },\n\n        /**\n         * Init observable variables\n         *\n         * @return {Object}\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'image',\n                    'keywordOptions',\n                    'selectedKeywords',\n                    'newKeyword'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Get image details by ID\n         *\n         * @param {String} imageId\n         */\n        showEditDetailsPanel: function (imageId) {\n            if (_.isUndefined(this.images[imageId])) {\n                getDetails(this.imageEditDetailsUrl, [imageId]).then(function (imageDetails) {\n                    this.images[imageId] = imageDetails[imageId];\n                    this.image(this.images[imageId]);\n                    this.openEditImageDetailsModal();\n                }.bind(this)).fail(function (error) {\n                    this.addMediaGridMessage('error', error);\n                }.bind(this));\n\n                return;\n            }\n\n            if (this.image() && this.image().id === imageId) {\n                this.openEditImageDetailsModal();\n\n                return;\n            }\n\n            this.image(this.images[imageId]);\n            this.openEditImageDetailsModal();\n        },\n\n        /**\n         * Open edit image details popup\n         */\n        openEditImageDetailsModal: function () {\n            var modalElement = $(this.modalSelector);\n\n            if (!modalElement.length || _.isUndefined(modalElement.modal)) {\n                return;\n            }\n\n            this.setKeywordOptions(this.image().tags);\n            this.newKeyword('');\n\n            modalElement.modal('openModal');\n        },\n\n        /**\n         * Close image details popup\n         */\n        closeImageDetailsModal: function () {\n            var modalElement = $(this.modalSelector);\n\n            if (!modalElement.length || _.isUndefined(modalElement.modal)) {\n                return;\n            }\n\n            modalElement.modal('closeModal');\n        },\n\n        /**\n         * Add media grid message\n         *\n         * @param {String} code\n         * @param {String} message\n         */\n        addMediaGridMessage: function (code, message) {\n            this.mediaGridMessages().add(code, message);\n            this.mediaGridMessages().scheduleCleanup();\n        },\n\n        /**\n         * Handle Enter key event to save image details\n         *\n         * @param {Object} data\n         * @param {jQuery.Event} event\n         * @returns {Boolean}\n         */\n        handleEnterKey: function (data, event) {\n            var modalElement = $(this.modalSelector),\n                key = keyCodes[event.keyCode];\n\n            if (key === 'enterKey') {\n                event.preventDefault();\n                modalElement.find('.page-action-buttons button.save').click();\n            }\n\n            return true;\n        },\n\n        /**\n         * Remove cached image details in edit form\n         *\n         * @param {String} id\n         */\n        removeCached: function (id) {\n            delete this.images[id];\n        }\n    });\n});\n","Magento_MediaGalleryUi/js/validation/validate-image-description.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/validate',\n    'mage/translate'\n], function ($) {\n    'use strict';\n\n    $.validator.addMethod(\n        'validate-image-description', function (value) {\n            return /^[a-zA-Z0-9\\-\\_\\.\\,\\n\\s]+$|^$/i.test(value);\n\n        }, $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), ' +\n            'dots (.), commas(,), underscores (_), dashes (-), and spaces on this field.'));\n});\n","Magento_MediaGalleryUi/js/validation/validate-image-title.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/validate',\n    'mage/translate'\n], function ($) {\n    'use strict';\n\n    $.validator.addMethod(\n        'validate-image-title', function (value) {\n            return /^[a-zA-Z0-9\\-\\_\\.\\,\\s]+$/i.test(value);\n\n        }, $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), dots (.), commas(,), ' +\n            'underscores (_), dashes(-) and spaces on this field.'));\n});\n","Magento_MediaGalleryUi/js/validation/validate-image-keyword.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/validate',\n    'mage/translate'\n], function ($, validate, $t) {\n    'use strict';\n\n    $.validator.addMethod(\n        'validate-image-keyword', function (value) {\n            return /^[a-zA-Z0-9\\-\\_\\.\\,]+$|^$/i.test(value);\n\n        }, $t('Please use only letters (a-z or A-Z), numbers (0-9), dots (.), commas(,), ' +\n            'underscores (_) and dashes(-) on this field.'));\n});\n","Magento_GroupedProduct/js/grouped-product.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'jquery/ui',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate',\n    'mage/adminhtml/grid'\n], function ($, mageTemplate) {\n    'use strict';\n\n    $.widget('mage.groupedProduct', {\n        /**\n         * Create widget\n         * @private\n         */\n        _create: function () {\n            this.$grid = this.element.find('[data-role=grouped-product-grid]');\n            this.$grid.sortable({\n                distance: 8,\n                items: '[data-role=row]',\n                tolerance: 'pointer',\n                cancel: ':input',\n                update: $.proxy(function () {\n                    this.element.trigger('resort');\n                }, this)\n            });\n\n            this.productTmpl = mageTemplate('#group-product-template');\n\n            $.each(\n                this.$grid.data('products'),\n                $.proxy(function (index, product) {\n                    this._add(null, product);\n                }, this)\n            );\n\n            this._on({\n                'add': '_add',\n                'resort': '_resort',\n                'click [data-column=actions] [data-role=delete]': '_remove'\n            });\n\n            this._bindDialog();\n            this._updateGridVisibility();\n        },\n\n        /**\n         * Add product to grouped grid\n         * @param {EventObject} event\n         * @param {Object} product\n         * @private\n         */\n        _add: function (event, product) {\n            var tmpl,\n                productExists;\n\n            productExists = this.$grid.find('[data-role=id]')\n                .filter(function (index, element) {\n                    return $(element).val() == product.id; //eslint-disable-line eqeqeq\n                }).length;\n\n            if (!productExists) {\n                tmpl = this.productTmpl({\n                    data: product\n                });\n\n                $(tmpl).appendTo(this.$grid.find('tbody'));\n            }\n        },\n\n        /**\n         * Remove product\n         * @param {EventObject} event\n         * @private\n         */\n        _remove: function (event) {\n            $(event.target).closest('[data-role=row]').remove();\n            this.element.trigger('resort');\n            this._updateGridVisibility();\n        },\n\n        /**\n         * Resort products\n         * @private\n         */\n        _resort: function () {\n            this.element.find('[data-role=position]').each($.proxy(function (index, element) {\n                $(element).val(index + 1);\n            }, this));\n        },\n\n        /**\n         * Create modal for show product\n         *\n         * @private\n         */\n        _bindDialog: function () {\n            var widget = this,\n                selectedProductList = {},\n                popup = $('[data-role=add-product-dialog]'),\n                gridPopup;\n\n            popup.modal({\n                type: 'slide',\n                innerScroll: true,\n                title: $.mage.__('Add Products to Group'),\n                modalClass: 'grouped',\n\n                /** @inheritdoc */\n                open: function () {\n                    $(this).addClass('admin__scope-old'); // ToDo UI: remove with old styles removal\n                },\n                buttons: [{\n                    id: 'grouped-product-dialog-apply-button',\n                    text: $.mage.__('Add Selected Products'),\n                    'class': 'action-primary action-add',\n\n                    /** @inheritdoc */\n                    click: function () {\n                        $.each(selectedProductList, function (index, product) {\n                            widget._add(null, product);\n                        });\n                        widget._resort();\n                        widget._updateGridVisibility();\n                        popup.modal('closeModal');\n                    }\n                }]\n            });\n\n            popup.on('click', '[data-role=row]', function (event) {\n                var target = $(event.target);\n\n                if (!target.is('input')) {\n                    target.closest('[data-role=row]')\n                        .find('[data-column=entity_ids] input')\n                        .prop('checked', function (element, value) {\n                            return !value;\n                        })\n                        .trigger('change');\n                }\n            });\n\n            popup.on(\n                'change',\n                '[data-role=row] [data-column=entity_ids] input',\n                $.proxy(function (event) {\n                    var element = $(event.target),\n                        product = {};\n\n                    if (element.is(':checked')) {\n                        product.id = element.val();\n                        product.qty = 0;\n                        element.closest('[data-role=row]').find('[data-column]').each(function (index, el) {\n                            product[$(el).data('column')] = $.trim($(el).text());\n                        });\n                        selectedProductList[product.id] = product;\n                    } else {\n                        delete selectedProductList[element.val()];\n                    }\n                }, this)\n            );\n\n            gridPopup = $(this.options.gridPopup).data('gridObject');\n\n            $('[data-role=add-product]').on('click', function (event) {\n                event.preventDefault();\n                popup.modal('openModal');\n                gridPopup.reload();\n                selectedProductList = {};\n            });\n\n            $('#' + gridPopup.containerId).on('gridajaxsettings', function (event, ajaxSettings) {\n                var ids = widget.$grid.find('[data-role=id]').map(function (index, element) {\n                    return $(element).val();\n                }).toArray();\n\n                ajaxSettings.data.filter = $.extend(ajaxSettings.data.filter || {}, {\n                    'entity_ids': ids\n                });\n            }).on('gridajax', function (event, ajaxRequest) {\n                ajaxRequest.done(function () {\n                    popup.find('[data-role=row] [data-column=entity_ids] input').each(function (index, element) {\n                        var $element = $(element);\n\n                        $element.prop('checked', !!selectedProductList[$element.val()]);\n                    });\n                });\n            });\n        },\n\n        /**\n         * Show or hide message\n         * @private\n         */\n        _updateGridVisibility: function () {\n            var showGrid = this.element.find('[data-role=id]').length > 0;\n\n            this.element.find('.grid-container').toggle(showGrid);\n            this.element.find('.no-products-message').toggle(!showGrid);\n        }\n    });\n\n    return $.mage.groupedProduct;\n});\n","Magento_GroupedProduct/js/grouped-product-grid.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'uiRegistry',\n    'Magento_Ui/js/dynamic-rows/dynamic-rows-grid'\n], function (_, registry, dynamicRowsGrid) {\n    'use strict';\n\n    return dynamicRowsGrid.extend({\n\n        /**\n         * Set max element position\n         *\n         * @param {Number} position - element position\n         * @param {Object} elem - instance\n         */\n        setMaxPosition: function (position, elem) {\n\n            if (position || position === 0) {\n                this.checkMaxPosition(position);\n                this.sort(position, elem);\n\n                if (~~position === this.maxPosition && ~~position > this.getDefaultPageBoundary() + 1) {\n                    this.shiftNextPagesPositions(position);\n                }\n            } else {\n                this.maxPosition += 1;\n            }\n        },\n\n        /**\n         * Shift positions for next page elements\n         *\n         * @param {Number} position\n         */\n        shiftNextPagesPositions: function (position) {\n\n            var recordData = this.recordData(),\n                startIndex = ~~this.currentPage() * this.pageSize,\n                offset = position - startIndex + 1,\n                index = startIndex;\n\n            if (~~this.currentPage() === this.pages()) {\n                return false;\n            }\n\n            for (index; index < recordData.length; index++) {\n                recordData[index].position = index + offset;\n            }\n            this.recordData(recordData);\n        },\n\n        /**\n         * Update position for element after position from another page is entered\n         *\n         * @param {Object} data\n         * @param {Object} event\n         */\n        updateGridPosition: function (data, event) {\n            var inputValue = parseInt(event.target.value, 10),\n                recordData = this.recordData(),\n                record,\n                previousValue,\n                updatedRecord;\n\n            record = this.elems().find(function (obj) {\n                return obj.dataScope === data.parentScope;\n            });\n\n            previousValue = this.getCalculatedPosition(record);\n\n            if (isNaN(inputValue) || inputValue < 0 || inputValue === previousValue) {\n                return false;\n            }\n\n            this.elems([]);\n\n            updatedRecord = this.getUpdatedRecordIndex(recordData, record.data().id);\n\n            if (inputValue >= this.recordData().size() - 1) {\n                recordData[updatedRecord].position = this.getGlobalMaxPosition() + 1;\n            } else {\n                recordData.forEach(function (value, index) {\n                    if (~~value.id === ~~record.data().id) {\n                        recordData[index].position = inputValue;\n                    } else if (inputValue > previousValue && index <= inputValue) {\n                        recordData[index].position = index - 1;\n                    } else if (inputValue < previousValue && index >= inputValue) {\n                        recordData[index].position = index + 1;\n                    }\n                });\n            }\n\n            this.reloadGridData(recordData);\n\n        },\n\n        /**\n         * Get updated record index\n         *\n         * @param  {Array} recordData\n         * @param {Number} recordId\n         * @return {Number}\n         */\n        getUpdatedRecordIndex: function (recordData, recordId) {\n            return recordData.map(function (o) {\n                return ~~o.id;\n            }).indexOf(~~recordId);\n        },\n\n        /**\n         *\n         * @param {Array} recordData - to reprocess\n         */\n        reloadGridData: function (recordData) {\n            this.recordData(recordData.sort(function (a, b) {\n                return ~~a.position - ~~b.position;\n            }));\n            this._updateCollection();\n            this.reload();\n        },\n\n        /**\n         * Event handler for \"Send to bottom\" button\n         *\n         * @param {Object} positionObj\n         * @return {Boolean}\n         */\n        sendToBottom: function (positionObj) {\n\n            var objectToUpdate = this.getObjectToUpdate(positionObj),\n                recordData = this.recordData(),\n                updatedRecord;\n\n            if (~~this.currentPage() === this.pages) {\n                objectToUpdate.position = this.maxPosition;\n            } else {\n                this.elems([]);\n                updatedRecord = this.getUpdatedRecordIndex(recordData, objectToUpdate.data().id);\n                recordData[updatedRecord].position = this.getGlobalMaxPosition() + 1;\n                this.reloadGridData(recordData);\n            }\n\n            return false;\n        },\n\n        /**\n         * Event handler for \"Send to top\" button\n         *\n         * @param {Object} positionObj\n         * @return {Boolean}\n         */\n        sendToTop: function (positionObj) {\n            var objectToUpdate = this.getObjectToUpdate(positionObj),\n                recordData = this.recordData(),\n                updatedRecord;\n\n            //isFirst\n            if (~~this.currentPage() === 1) {\n                objectToUpdate.position = 0;\n            } else {\n                this.elems([]);\n                updatedRecord = this.getUpdatedRecordIndex(recordData, objectToUpdate.data().id);\n                recordData.forEach(function (value, index) {\n                    recordData[index].position = index === updatedRecord ? 0 : value.position + 1;\n                });\n                this.reloadGridData(recordData);\n            }\n\n            return false;\n        },\n\n        /**\n         * Get element from grid for update\n         *\n         * @param {Object} object\n         * @return {*}\n         */\n        getObjectToUpdate: function (object) {\n            return this.elems().filter(function (item) {\n                return item.name === object.parentName;\n            })[0];\n        },\n\n        /**\n         * Value function for position input\n         *\n         * @param {Object} data\n         * @return {Number}\n         */\n        getCalculatedPosition: function (data) {\n            return (~~this.currentPage() - 1) * this.pageSize + this.elems().pluck('name').indexOf(data.name);\n        },\n\n        /**\n         * Return Page Boundary\n         *\n         * @return {Number}\n         */\n        getDefaultPageBoundary: function () {\n            return ~~this.currentPage() * this.pageSize - 1;\n        },\n\n        /**\n         * Returns position for last element to be moved after\n         *\n         * @return {Number}\n         */\n        getGlobalMaxPosition: function () {\n            return _.max(this.recordData().map(function (r) {\n                return ~~r.position;\n            }));\n        }\n    });\n});\n","Amasty_ShopbySeo/js/checker.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'domReady'\n], function ($, modalConfirm) {\n    'use strict';\n\n    $.widget('mage.amConfigChecker', {\n        options: {\n            contentSelector: '#am_checker_message',\n            fieldsSelector: '#amasty_shopby_seo_url_special_char, #amasty_shopby_seo_url_option_separator'\n        },\n\n        _create: function () {\n            $(this.options.fieldsSelector).on('change', function (e) {\n                var specialChar = $('#amasty_shopby_seo_url_special_char').val(),\n                    separator = $('#amasty_shopby_seo_url_option_separator').val();\n                if (specialChar == separator) {\n                    modalConfirm({\n                        title: $.mage.__('Attention'),\n                        content: $(this.options.contentSelector).html(),\n                    });\n                }\n            }.bind(this));\n        }\n\n    });\n\n    return $.mage.amConfigChecker;\n});\n","Magento_CustomerSegment/js/conditions.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Rule/rules',\n    'prototype'\n], function (VarienRulesForm) {\n    'use strict';\n\n    return function (config) {\n        var segmentConditionsFieldset = new VarienRulesForm(config.jsObjectName, config.childUrl);\n\n        if (config.isReadonly !== '') {\n            segmentConditionsFieldset.setReadonly(true);\n        }\n    };\n});\n","Magento_AdminGws/permissions/rolesedit/validation-rules.js":"/**\n * AdminGws client side validation rules\n *\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\n/* eslint-disable strict */\ndefine([\n    'jquery',\n    'mage/backend/validation'\n], function ($) {\n\n    $.validator.addMethod('validate-one-gws-store', function () {\n        if ($('#gws_is_all').val() == 1) { //eslint-disable-line eqeqeq\n            return true; // not touching valid intentionally\n        }\n\n        return $('.validate-one-gws-store:checked').length;\n    }, 'Please select one of the options.');\n\n    $.widget('mage.validation', $.mage.validation, {\n        options: {\n            /**\n             * @param {jQuery} error\n             * @param {jQuery} element\n             */\n            errorPlacement: function (error, element) {\n                if (element.is('[name=\"gws_store_groups[]\"]')) {\n                    error.insertAfter($('#gws_container').last());\n                } else {\n                    error.insertAfter(element);\n                }\n            }\n        }\n    });\n});\n","Magento_Paypal/js/solution.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'uiClass',\n    'Magento_Paypal/js/rule',\n    'mageUtils',\n    'underscore'\n], function ($, Class, Rule, utils, _) {\n    'use strict';\n\n    return Class.extend({\n        defaults: {\n\n            /**\n             * The event corresponding to the state change\n             */\n            systemEvent: 'change',\n\n            /**\n             * The rules applied after the page is loaded\n             */\n            afterLoadRules: [],\n\n            /**\n             * An attribute of the element responsible for the activation of the payment method (data attribute)\n             */\n            enableButton:   '[data-enable=\"payment\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the Payflow Express (data attribute)\n             */\n            enableExpress:  '[data-enable=\"express\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the\n             * PayPal Express In-Context Checkout Experience (data attribute)\n             */\n            enableInContextPayPal: '[data-enable=\"in-context-api\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the Payflow Bml (data attribute)\n             */\n            enableBml:      '[data-enable=\"bml\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the PayPal Bml (data attribute)\n             */\n            enableBmlPayPal:      '[data-enable=\"bml-api\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the PayPal Merchant Id (data attribute)\n             */\n            dependsMerchantId:  '[data-enable=\"merchant-id\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the Payflow Bml Sort Order (data attribute)\n             */\n            dependsBmlSortOrder:    '[data-enable=\"bml-sort-order\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the PayPal Bml Sort Order (data attribute)\n             */\n            dependsBmlApiSortOrder:    '[data-enable=\"bml-api-sort-order\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the\n             * button Label credit option (data attribute)\n             */\n            dependsButtonLabel: '[data-enable=\"button-label\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the\n             * button Label credit option on load (data attribute)\n             */\n            dependsDisableFundingOptions: '[data-enable=\"disable-funding-options\"]',\n\n            /**\n             * Templates element selectors\n             */\n            templates: {\n                elementSelector: 'div.section-config tr[id$=\"${ $.identifier }\"]:first'\n            }\n        },\n\n        /**\n         * Constructor\n         *\n         * @param {Object} config\n         * @param {String} identifier\n         * @returns {exports.initialize}\n         */\n        initialize: function (config, identifier) {\n            this.initConfig(config);\n            this.$self = this.createElement(identifier);\n\n            return this;\n        },\n\n        /**\n         * Initialization events\n         *\n         * @returns {exports.initEvents}\n         */\n        initEvents: function () {\n            _.each(this.config.events, function (elementEvents, selector) {\n\n                var solution = this,\n                    selectorButton = solution.$self.find(selector),\n                    $self = solution.$self,\n                    events = elementEvents;\n\n                selectorButton.on(solution.systemEvent, function () {\n                    _.each(events, function (elementEvent, name) {\n\n                        var predicate = elementEvent.predicate,\n                            result = true,\n\n                            /**\n                             * @param {Function} functionPredicate\n                             */\n                            predicateCallback = function (functionPredicate) {\n                                result = functionPredicate(solution, predicate.message, predicate.argument);\n\n                                if (result) {\n                                    $self.trigger(name);\n                                } else {\n                                    $self.trigger(predicate.event);\n                                }\n                            };\n\n                        if (solution.getValue($(this)) === elementEvent.value ||\n                            $(this).prop('multiple') && solution.checkMultiselectValue($(this), elementEvent)\n                        ) {\n                            if (predicate.name) {\n                                require([\n                                    'Magento_Paypal/js/predicate/' + predicate.name\n                                ], predicateCallback);\n                            } else {\n                                $self.trigger(name);\n                            }\n                        }\n                    }, this);\n                });\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * @param {Object} $element\n         * @returns {*}\n         */\n        getValue: function ($element) {\n            if ($element.is(':checkbox')) {\n                return $element.prop('checked') ? '1' : '0';\n            }\n\n            return $element.val();\n        },\n\n        /**\n         * Check multiselect value based on include value\n         *\n         * @param {Object} $element\n         * @param {Object} elementEvent\n         * @returns {Boolean}\n         */\n        checkMultiselectValue: function ($element, elementEvent) {\n            var isValueSelected = $.inArray(elementEvent.value, $element.val()) >= 0;\n\n            if (elementEvent.include) {\n                isValueSelected = (isValueSelected ? 'true' : 'false') === elementEvent.include;\n            }\n\n            return isValueSelected;\n        },\n\n        /**\n         * Adding event listeners\n         *\n         * @returns {exports.addListeners}\n         */\n        addListeners: function () {\n\n            _.each(this.config.relations, function (rules, targetName) {\n\n                var $target = this.createElement(targetName);\n\n                _.each(rules, function (instances, instanceName) {\n\n                    _.each(instances, function (instance) {\n                        var handler = new Rule({\n                            name: instanceName,\n                            $target: $target,\n                            $owner: this.$self,\n                            data: {\n                                buttonConfiguration: this.buttonConfiguration,\n                                enableButton: this.enableButton,\n                                enableExpress: this.enableExpress,\n                                enableInContextPayPal: this.enableInContextPayPal,\n                                enableBml: this.enableBml,\n                                enableBmlPayPal: this.enableBmlPayPal,\n                                dependsMerchantId: this.dependsMerchantId,\n                                dependsBmlSortOrder: this.dependsBmlSortOrder,\n                                dependsBmlApiSortOrder: this.dependsBmlApiSortOrder,\n                                dependsButtonLabel: this.dependsButtonLabel,\n                                dependsDisableFundingOptions: this.dependsDisableFundingOptions,\n                                solutionsElements: this.solutionsElements,\n                                argument: instance.argument\n                            }\n                        });\n\n                        if (instance.event === ':load') {\n                            this.afterLoadRules.push(handler);\n\n                            return;\n                        }\n\n                        this.$self.on(instance.event, _.bind(handler.apply, handler));\n                    }, this);\n                }, this);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Create a jQuery element according to selector\n         *\n         * @param {String} identifier\n         * @returns {*}\n         */\n        createElement: function (identifier) {\n            if (identifier === ':self') {\n                return this.$self;\n            }\n\n            return $(utils.template(this.templates.elementSelector, {\n                'identifier': identifier\n            }));\n        },\n\n        /**\n         * Assign solutions elements\n         *\n         * @param {Object} elements\n         * @returns {exports.setSolutionsElements}\n         */\n        setSolutionsElements: function (elements) {\n            this.solutionsElements = elements;\n\n            return this;\n        }\n    });\n});\n"}
}});
